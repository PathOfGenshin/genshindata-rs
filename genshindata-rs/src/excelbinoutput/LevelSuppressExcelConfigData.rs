// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type LevelSuppressExcelConfigData = Vec<LevelSuppressExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct LevelSuppressExcelConfigDatum {
    #[serde(rename = "levelSuppressDamageCo")]
    pub level_suppress_damage_co: f64,

    #[serde(rename = "levelSuppressEndure")]
    pub level_suppress_endure: f64,

    #[serde(rename = "levelSuppressDisMinHorizontal")]
    pub level_suppress_dis_min_horizontal: f64,

    #[serde(rename = "levelSuppressDisMaxHorizontal")]
    pub level_suppress_dis_max_horizontal: f64,

    #[serde(rename = "levelSuppressDisMinVertical")]
    pub level_suppress_dis_min_vertical: f64,

    #[serde(rename = "levelSuppressDisMaxVertical")]
    pub level_suppress_dis_max_vertical: f64,

    #[serde(rename = "isAttackerPlayer")]
    pub is_attacker_player: Option<bool>,

    #[serde(rename = "isDefenserPlayer")]
    pub is_defenser_player: Option<bool>,

    #[serde(rename = "level")]
    pub level: Option<i64>,
}

pub fn load() -> Result<LevelSuppressExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "LevelSuppressExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
