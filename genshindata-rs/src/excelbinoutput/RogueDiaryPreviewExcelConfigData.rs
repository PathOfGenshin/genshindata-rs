// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type RogueDiaryPreviewExcelConfigData = Vec<RogueDiaryPreviewExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct RogueDiaryPreviewExcelConfigDatum {
    #[serde(rename = "activityId")]
    pub activity_id: i64,

    #[serde(rename = "JGDKIIOLODP")]
    pub jgdkiiolodp: i64,

    #[serde(rename = "KIFDAHDKCFJ")]
    pub kifdahdkcfj: i64,

    #[serde(rename = "OMBCDBAELFN")]
    pub ombcdbaelfn: Vec<i64>,

    #[serde(rename = "DFFLOPELPIC")]
    pub dfflopelpic: Vec<i64>,

    #[serde(rename = "FEMJBJMFDFG")]
    pub femjbjmfdfg: Vec<i64>,

    #[serde(rename = "ODCLHPLNMMM")]
    pub odclhplnmmm: i64,

    #[serde(rename = "CJGELFGDNMA")]
    pub cjgelfgdnma: i64,

    #[serde(rename = "worldSceneId")]
    pub world_scene_id: i64,
}

pub fn load() -> Result<RogueDiaryPreviewExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "RogueDiaryPreviewExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
