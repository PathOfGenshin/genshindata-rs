/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type GcgCardExcelConfigData = Vec<GcgCardExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub struct GcgCardExcelConfigDatum {
    pub eegjhpfcloj: i64,
    pub bkadedjdppo: String,
    pub phdgiemaobo: Vec<i64>,
    pub boofipibfjh: Vec<Boofipibfjh>,
    pub fodpnmfpjgb: Option<f64>,
    pub agcblddibjh: Vec<i64>,
    pub ikjecaohnbj: Vec<String>,
    #[serde(rename = "id")]
    pub id: i64,
    #[serde(rename = "cardType")]
    pub card_type: CardType,
    #[serde(rename = "nameTextMapHash")]
    pub name_text_map_hash: i64,
    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,
    pub pkofoagdgib: Vec<Pkofoagdgib>,
    #[serde(rename = "skillList")]
    pub skill_list: Vec<i64>,
    pub pmoaaombmif: Option<Pmoaaombmif>,
    pub ogppgijfcde: Option<Ogppgijfcde>,
    pub cknbpollncn: Option<Cknbpollncn>,
    pub cbncogiaakc: Option<i64>,
    pub mgkbgpjpfca: Option<Mgkbgpjpfca>,
    pub mmhdhkehidl: Option<Cknbpollncn>,
    pub honajmeoofg: Option<String>,
    #[serde(rename = "isHidden")]
    pub is_hidden: Option<bool>,
    pub kcokmgbemjb: Option<bool>,
    pub ciacbdcnhah: Option<i64>,
    pub faiolfdbadm: Option<i64>,
    pub bgdfobcgdja: Option<i64>,
    pub ibhlfdidopp: Option<Cknbpollncn>,
    pub giennbagnoi: Option<i64>,
    pub jdhhmapackc: Option<String>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct Boofipibfjh {
    #[serde(rename = "OECLFAFNMMA")]
    pub oeclfafnmma: Option<Oeclfafnmma>,
    pub count: Option<i64>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Oeclfafnmma {
    #[serde(rename = "GCG_COST_DICE_ANEMO")]
    GcgCostDiceAnemo,
    #[serde(rename = "GCG_COST_DICE_CRYO")]
    GcgCostDiceCryo,
    #[serde(rename = "GCG_COST_DICE_DENDRO")]
    GcgCostDiceDendro,
    #[serde(rename = "GCG_COST_DICE_ELECTRO")]
    GcgCostDiceElectro,
    #[serde(rename = "GCG_COST_DICE_GEO")]
    GcgCostDiceGeo,
    #[serde(rename = "GCG_COST_DICE_HYDRO")]
    GcgCostDiceHydro,
    #[serde(rename = "GCG_COST_DICE_PYRO")]
    GcgCostDicePyro,
    #[serde(rename = "GCG_COST_DICE_SAME")]
    GcgCostDiceSame,
    #[serde(rename = "GCG_COST_DICE_VOID")]
    GcgCostDiceVoid,
    #[serde(rename = "GCG_COST_ENERGY")]
    GcgCostEnergy,
    #[serde(rename = "GCG_COST_LEGEND")]
    GcgCostLegend,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum CardType {
    #[serde(rename = "GCG_CARD_ASSIST")]
    GcgCardAssist,
    #[serde(rename = "GCG_CARD_EVENT")]
    GcgCardEvent,
    #[serde(rename = "GCG_CARD_MODIFY")]
    GcgCardModify,
    #[serde(rename = "GCG_CARD_ONSTAGE")]
    GcgCardOnstage,
    #[serde(rename = "GCG_CARD_STATE")]
    GcgCardState,
    #[serde(rename = "GCG_CARD_SUMMON")]
    GcgCardSummon,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Cknbpollncn {
    #[serde(rename = "GCG_TOKEN_COUNTER")]
    GcgTokenCounter,
    #[serde(rename = "GCG_TOKEN_LIFE")]
    GcgTokenLife,
    #[serde(rename = "GCG_TOKEN_ROUND_COUNT")]
    GcgTokenRoundCount,
    #[serde(rename = "GCG_TOKEN_SHIELD")]
    GcgTokenShield,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Mgkbgpjpfca {
    #[serde(rename = "GCG_TOKEN_ICON_BARRIER_SHIELD")]
    GcgTokenIconBarrierShield,
    #[serde(rename = "GCG_TOKEN_ICON_CLOCK")]
    GcgTokenIconClock,
    #[serde(rename = "GCG_TOKEN_ICON_HOURGLASS")]
    GcgTokenIconHourglass,
    #[serde(rename = "GCG_TOKEN_ICON_NORMAL_SHIELD")]
    GcgTokenIconNormalShield,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Ogppgijfcde {
    #[serde(rename = "GCG_PERSIST_EFFECT_EXPECTO_PATRONUM")]
    GcgPersistEffectExpectoPatronum,
    #[serde(rename = "GCG_PERSIST_EFFECT_IMPERTURBABLE_CHARM")]
    GcgPersistEffectImperturbableCharm,
    #[serde(rename = "GCG_PERSIST_EFFECT_PETRIFICUS_TOTALUS")]
    GcgPersistEffectPetrificusTotalus,
    #[serde(rename = "GCG_PERSIST_EFFECT_PROTEGO")]
    GcgPersistEffectProtego,
    #[serde(rename = "GCG_PERSIST_EFFECT_STUPEFY")]
    GcgPersistEffectStupefy,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Pkofoagdgib {
    #[serde(rename = "GCG_TAG_ALLY")]
    GcgTagAlly,
    #[serde(rename = "GCG_TAG_ARTIFACT")]
    GcgTagArtifact,
    #[serde(rename = "GCG_TAG_DENDRO_PRODUCE")]
    GcgTagDendroProduce,
    #[serde(rename = "GCG_TAG_FOOD")]
    GcgTagFood,
    #[serde(rename = "GCG_TAG_FORBIDDEN_ATTACK")]
    GcgTagForbiddenAttack,
    #[serde(rename = "GCG_TAG_IMMUNE_CONTROL")]
    GcgTagImmuneControl,
    #[serde(rename = "GCG_TAG_IMMUNE_FREEZING")]
    GcgTagImmuneFreezing,
    #[serde(rename = "GCG_TAG_ITEM")]
    GcgTagItem,
    #[serde(rename = "GCG_TAG_LEGEND")]
    GcgTagLegend,
    #[serde(rename = "GCG_TAG_NONE")]
    GcgTagNone,
    #[serde(rename = "GCG_TAG_PLACE")]
    GcgTagPlace,
    #[serde(rename = "GCG_TAG_RESONANCE")]
    GcgTagResonance,
    #[serde(rename = "GCG_TAG_SHEILD")]
    GcgTagSheild,
    #[serde(rename = "GCG_TAG_SLOWLY")]
    GcgTagSlowly,
    #[serde(rename = "GCG_TAG_TALENT")]
    GcgTagTalent,
    #[serde(rename = "GCG_TAG_WEAPON")]
    GcgTagWeapon,
    #[serde(rename = "GCG_TAG_WEAPON_BOW")]
    GcgTagWeaponBow,
    #[serde(rename = "GCG_TAG_WEAPON_CATALYST")]
    GcgTagWeaponCatalyst,
    #[serde(rename = "GCG_TAG_WEAPON_CLAYMORE")]
    GcgTagWeaponClaymore,
    #[serde(rename = "GCG_TAG_WEAPON_POLE")]
    GcgTagWeaponPole,
    #[serde(rename = "GCG_TAG_WEAPON_SWORD")]
    GcgTagWeaponSword,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Pmoaaombmif {
    #[serde(rename = "GCG_STATE_BUFF_ANEMO")]
    GcgStateBuffAnemo,
    #[serde(rename = "GCG_STATE_BUFF_CRYO")]
    GcgStateBuffCryo,
    #[serde(rename = "GCG_STATE_BUFF_ELECTRO")]
    GcgStateBuffElectro,
    #[serde(rename = "GCG_STATE_BUFF_GEO")]
    GcgStateBuffGeo,
    #[serde(rename = "GCG_STATE_BUFF_HYDRO")]
    GcgStateBuffHydro,
    #[serde(rename = "GCG_STATE_BUFF_NEGATIVE")]
    GcgStateBuffNegative,
    #[serde(rename = "GCG_STATE_BUFF_PYRO")]
    GcgStateBuffPyro,
}
