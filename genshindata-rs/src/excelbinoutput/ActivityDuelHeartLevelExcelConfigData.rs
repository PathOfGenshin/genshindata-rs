// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type ActivityDuelHeartLevelExcelConfigData = Vec<ActivityDuelHeartLevelExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ActivityDuelHeartLevelExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "LABNOEGPADP")]
    pub labnoegpadp: i64,

    #[serde(rename = "preQuest")]
    pub pre_quest: i64,

    #[serde(rename = "FFNBPFJPEFJ")]
    pub ffnbpfjpefj: i64,

    #[serde(rename = "IHDKKKPPJHA")]
    pub ihdkkkppjha: String,

    #[serde(rename = "dungeonId")]
    pub dungeon_id: i64,

    #[serde(rename = "challengeNameTextMapHash")]
    pub challenge_name_text_map_hash: i64,

    #[serde(rename = "NLJMPLAEAAL")]
    pub nljmplaeaal: i64,

    #[serde(rename = "PKPNGCOONJL")]
    pub pkpngcoonjl: String,

    #[serde(rename = "CPBLLINEICH")]
    pub cpbllineich: i64,

    #[serde(rename = "CAODKGGHADH")]
    pub caodkgghadh: i64,

    #[serde(rename = "FHPJOKCGJNK")]
    pub fhpjokcgjnk: String,

    #[serde(rename = "ONPCJINOADH")]
    pub onpcjinoadh: Vec<i64>,

    #[serde(rename = "DKNHBPPBEDH")]
    pub dknhbppbedh: String,

    #[serde(rename = "DBEJPHNPAKI")]
    pub dbejphnpaki: Option<i64>,
}

pub fn load() -> Result<ActivityDuelHeartLevelExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "ActivityDuelHeartLevelExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
