// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type ActivityDuelHeartLevelExcelConfigData = Vec<ActivityDuelHeartLevelExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ActivityDuelHeartLevelExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "BDHGNMNHEFG")]
    pub bdhgnmnhefg: i64,

    #[serde(rename = "preQuest")]
    pub pre_quest: i64,

    #[serde(rename = "NKEIDLGMAGJ")]
    pub nkeidlgmagj: i64,

    #[serde(rename = "DOPBKKCENHI")]
    pub dopbkkcenhi: String,

    #[serde(rename = "dungeonId")]
    pub dungeon_id: i64,

    #[serde(rename = "challengeNameTextMapHash")]
    pub challenge_name_text_map_hash: i64,

    #[serde(rename = "IJKNGJFOHDJ")]
    pub ijkngjfohdj: i64,

    #[serde(rename = "JBDAEPHNOFD")]
    pub jbdaephnofd: String,

    #[serde(rename = "NINDJMHJIIO")]
    pub nindjmhjiio: i64,

    #[serde(rename = "DOGPGPCANEG")]
    pub dogpgpcaneg: i64,

    #[serde(rename = "CHAKBJKAOOC")]
    pub chakbjkaooc: String,

    #[serde(rename = "AFKDIPMPBJE")]
    pub afkdipmpbje: Vec<i64>,

    #[serde(rename = "HGOFCOPDGNP")]
    pub hgofcopdgnp: String,

    #[serde(rename = "DJFKFDDNEBE")]
    pub djfkfddnebe: Option<i64>,
}

pub fn load() -> Result<ActivityDuelHeartLevelExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "ActivityDuelHeartLevelExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
