// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type LanV3BoatBaseExcelConfigData = Vec<LanV3BoatBaseExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct LanV3BoatBaseExcelConfigDatum {
    #[serde(rename = "scheduleId")]
    pub schedule_id: i64,

    #[serde(rename = "OCFKJGNNPAM")]
    pub ocfkjgnnpam: Vec<i64>,

    #[serde(rename = "JPJAFGAHBJG")]
    pub jpjafgahbjg: Vec<i64>,

    #[serde(rename = "FCIFMJOOFDO")]
    pub fcifmjoofdo: String,

    #[serde(rename = "EPOBINHGKLE")]
    pub epobinhgkle: String,

    #[serde(rename = "BPHPOCBGEGI")]
    pub bphpocbgegi: String,

    #[serde(rename = "AIKJKBOGBHN")]
    pub aikjkbogbhn: String,

    #[serde(rename = "EIOOMDKFMLG")]
    pub eioomdkfmlg: f64,

    #[serde(rename = "KLPCDFKDGAA")]
    pub klpcdfkdgaa: Vec<i64>,

    #[serde(rename = "EDNNCMLACMD")]
    pub ednncmlacmd: Vec<i64>,

    #[serde(rename = "MKFJDLBLCHI")]
    pub mkfjdlblchi: Vec<i64>,

    #[serde(rename = "KHFPMNIGOBL")]
    pub khfpmnigobl: i64,

    #[serde(rename = "BBHINNCNPJP")]
    pub bbhinncnpjp: f64,

    #[serde(rename = "preQuestId")]
    pub pre_quest_id: i64,

    #[serde(rename = "matchId")]
    pub match_id: i64,

    #[serde(rename = "draftId")]
    pub draft_id: i64,

    #[serde(rename = "EBNMMJGMNKB")]
    pub ebnmmjgmnkb: i64,

    #[serde(rename = "IEMAOOAEPNM")]
    pub iemaooaepnm: i64,

    #[serde(rename = "MCOOGACCFBI")]
    pub mcoogaccfbi: Vec<String>,

    #[serde(rename = "OFMDPOODKAO")]
    pub ofmdpoodkao: Vec<String>,

    #[serde(rename = "MFOIAIHDFCB")]
    pub mfoiaihdfcb: i64,

    #[serde(rename = "EMABNGKBNOB")]
    pub emabngkbnob: i64,

    #[serde(rename = "BHCJKANDNPF")]
    pub bhcjkandnpf: String,

    #[serde(rename = "FKNPMPKBCDF")]
    pub fknpmpkbcdf: String,
}

pub fn load() -> Result<LanV3BoatBaseExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "LanV3BoatBaseExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
