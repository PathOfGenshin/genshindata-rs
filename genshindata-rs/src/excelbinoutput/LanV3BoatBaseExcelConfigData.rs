// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type LanV3BoatBaseExcelConfigData = Vec<LanV3BoatBaseExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct LanV3BoatBaseExcelConfigDatum {
    #[serde(rename = "scheduleId")]
    pub schedule_id: i64,

    #[serde(rename = "HADGAMCMGGM")]
    pub hadgamcmggm: Vec<i64>,

    #[serde(rename = "JANODOHDGEJ")]
    pub janodohdgej: Vec<i64>,

    #[serde(rename = "PHCOPOMKIOJ")]
    pub phcopomkioj: String,

    #[serde(rename = "DFGGPEJGJIG")]
    pub dfggpejgjig: String,

    #[serde(rename = "NLKLHPMOLDD")]
    pub nlklhpmoldd: String,

    #[serde(rename = "GCGMJLDJNEB")]
    pub gcgmjldjneb: String,

    #[serde(rename = "GODKLOFELFL")]
    pub godklofelfl: f64,

    #[serde(rename = "CPKMFGADJJP")]
    pub cpkmfgadjjp: Vec<i64>,

    #[serde(rename = "MFHMFKJKODF")]
    pub mfhmfkjkodf: Vec<i64>,

    #[serde(rename = "OJDAMPBAHGM")]
    pub ojdampbahgm: Vec<i64>,

    #[serde(rename = "EJMCFJPCDPI")]
    pub ejmcfjpcdpi: i64,

    #[serde(rename = "FCBNIEMNGDL")]
    pub fcbniemngdl: f64,

    #[serde(rename = "preQuestId")]
    pub pre_quest_id: i64,

    #[serde(rename = "matchId")]
    pub match_id: i64,

    #[serde(rename = "draftId")]
    pub draft_id: i64,

    #[serde(rename = "AKNICCNJEMC")]
    pub akniccnjemc: i64,

    #[serde(rename = "JPJIHANLHEP")]
    pub jpjihanlhep: i64,

    #[serde(rename = "GOFBNEJKDCA")]
    pub gofbnejkdca: Vec<String>,

    #[serde(rename = "LCAFCBHNCHH")]
    pub lcafcbhnchh: Vec<String>,

    #[serde(rename = "EKHELIJJBAN")]
    pub ekhelijjban: i64,

    #[serde(rename = "IJOHIIGHMHJ")]
    pub ijohiighmhj: i64,

    #[serde(rename = "LADKLKNNEKD")]
    pub ladklknnekd: String,

    #[serde(rename = "PFONFKBBPEL")]
    pub pfonfkbbpel: String,
}

pub fn load() -> Result<LanV3BoatBaseExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "LanV3BoatBaseExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
