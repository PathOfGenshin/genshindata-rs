// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type KeywordEasterEggExcelConfigData = Vec<KeywordEasterEggExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct KeywordEasterEggExcelConfigDatum {
    #[serde(rename = "configID")]
    pub config_id: i64,

    #[serde(rename = "BDBLLHBPLAA")]
    pub bdbllhbplaa: Vec<Bdbllhbplaa>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct Bdbllhbplaa {
    #[serde(rename = "DFHKNDHEKEM")]
    pub dfhkndhekem: Dfhkndhekem,

    #[serde(rename = "AHMMCDIJOFE")]
    pub ahmmcdijofe: String,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Dfhkndhekem {
    #[serde(rename = "LANGUAGE_DE")]
    LanguageDe,

    #[serde(rename = "LANGUAGE_EN")]
    LanguageEn,

    #[serde(rename = "LANGUAGE_ES")]
    LanguageEs,

    #[serde(rename = "LANGUAGE_FR")]
    LanguageFr,

    #[serde(rename = "LANGUAGE_ID")]
    LanguageId,

    #[serde(rename = "LANGUAGE_IT")]
    LanguageIt,

    #[serde(rename = "LANGUAGE_JP")]
    LanguageJp,

    #[serde(rename = "LANGUAGE_KR")]
    LanguageKr,

    #[serde(rename = "LANGUAGE_PT")]
    LanguagePt,

    #[serde(rename = "LANGUAGE_RU")]
    LanguageRu,

    #[serde(rename = "LANGUAGE_SC")]
    LanguageSc,

    #[serde(rename = "LANGUAGE_TC")]
    LanguageTc,

    #[serde(rename = "LANGUAGE_TH")]
    LanguageTh,

    #[serde(rename = "LANGUAGE_TR")]
    LanguageTr,

    #[serde(rename = "LANGUAGE_VN")]
    LanguageVn,
}

pub fn load() -> Result<KeywordEasterEggExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "KeywordEasterEggExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
