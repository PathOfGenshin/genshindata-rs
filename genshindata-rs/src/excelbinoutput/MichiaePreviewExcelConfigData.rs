// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;
use std::collections::HashMap;

pub type MichiaePreviewExcelConfigData = Vec<MichiaePreviewExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct MichiaePreviewExcelConfigDatum {
    #[serde(rename = "activityID")]
    pub activity_id: i64,

    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,

    #[serde(rename = "DCFODBJCHFN")]
    pub dcfodbjchfn: i64,

    #[serde(rename = "GGMGGBEBDKI")]
    pub ggmggbebdki: i64,

    #[serde(rename = "rewardPreviewID")]
    pub reward_preview_id: i64,

    #[serde(rename = "pushTipsID")]
    pub push_tips_id: i64,

    #[serde(rename = "APCACCBIHAP")]
    pub apcaccbihap: i64,

    #[serde(rename = "PIEADEOBPCM")]
    pub pieadeobpcm: f64,

    #[serde(rename = "MPHHLBHKKLB")]
    pub mphhlbhkklb: f64,

    #[serde(rename = "HCGHBAELFDJ")]
    pub hcghbaelfdj: i64,

    #[serde(rename = "GJPMGFCAJNJ")]
    pub gjpmgfcajnj: i64,

    #[serde(rename = "HFMJMONLIBA")]
    pub hfmjmonliba: i64,

    #[serde(rename = "JNEDOAGFHFE")]
    pub jnedoagfhfe: i64,

    #[serde(rename = "NIFMJKAPOEP")]
    pub nifmjkapoep: HashMap<String, i64>,

    #[serde(rename = "GEJKLECBJIF")]
    pub gejklecbjif: Vec<i64>,
}

pub fn load() -> Result<MichiaePreviewExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "MichiaePreviewExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
