// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;
use std::collections::HashMap;

pub type MichiaePreviewExcelConfigData = Vec<MichiaePreviewExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct MichiaePreviewExcelConfigDatum {
    #[serde(rename = "activityID")]
    pub activity_id: i64,

    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,

    #[serde(rename = "OMCPAKNJGAO")]
    pub omcpaknjgao: i64,

    #[serde(rename = "HMOILPBNGHB")]
    pub hmoilpbnghb: i64,

    #[serde(rename = "rewardPreviewID")]
    pub reward_preview_id: i64,

    #[serde(rename = "pushTipsID")]
    pub push_tips_id: i64,

    #[serde(rename = "KMNGGOEPFAH")]
    pub kmnggoepfah: i64,

    #[serde(rename = "KEFCGFDKJGO")]
    pub kefcgfdkjgo: f64,

    #[serde(rename = "HJDFKEEMIEH")]
    pub hjdfkeemieh: f64,

    #[serde(rename = "DGDIBPCOGEM")]
    pub dgdibpcogem: i64,

    #[serde(rename = "GODDHFAAKBN")]
    pub goddhfaakbn: i64,

    #[serde(rename = "HCFNHNIOKEN")]
    pub hcfnhnioken: i64,

    #[serde(rename = "EGLHGHKBJPD")]
    pub eglhghkbjpd: i64,

    #[serde(rename = "FHFLLPCEJAF")]
    pub fhfllpcejaf: HashMap<String, i64>,

    #[serde(rename = "JMBFBGNFBIM")]
    pub jmbfbgnfbim: Vec<i64>,
}

pub fn load() -> Result<MichiaePreviewExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "MichiaePreviewExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
