// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type FungusTrainingDungeonExcelConfigData = Vec<FungusTrainingDungeonExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct FungusTrainingDungeonExcelConfigDatum {
    #[serde(rename = "dungeonId")]
    pub dungeon_id: i64,

    #[serde(rename = "GNLEADGFAJE")]
    pub gnleadgfaje: i64,

    #[serde(rename = "HNMNIHBNDKI")]
    pub hnmnihbndki: Hnmnihbndki,

    #[serde(rename = "LABNOEGPADP")]
    pub labnoegpadp: i64,

    #[serde(rename = "JNDOGJPDKLP")]
    pub jndogjpdklp: i64,

    #[serde(rename = "galleryId")]
    pub gallery_id: i64,

    #[serde(rename = "BNDFJHEEGJN")]
    pub bndfjheegjn: Vec<i64>,

    #[serde(rename = "HHGJODLBEKG")]
    pub hhgjodlbekg: Vec<i64>,

    #[serde(rename = "EPPPKCKIEFG")]
    pub epppkckiefg: i64,

    #[serde(rename = "DKOKMKBJDGF")]
    pub dkokmkbjdgf: i64,

    #[serde(rename = "ALEKFFFAEIG")]
    pub alekfffaeig: Vec<i64>,

    #[serde(rename = "baseScore")]
    pub base_score: f64,

    #[serde(rename = "IGHHEHMGGKL")]
    pub ighhehmggkl: Option<f64>,

    #[serde(rename = "FLIDMKDBKME")]
    pub flidmkdbkme: Option<f64>,

    #[serde(rename = "FADBEBPJBJF")]
    pub fadbebpjbjf: f64,

    #[serde(rename = "KAHAIAHOPMH")]
    pub kahaiahopmh: Vec<i64>,

    #[serde(rename = "NKPBJHJGELJ")]
    pub nkpbjhjgelj: i64,

    #[serde(rename = "EGJLIAGFGOG")]
    pub egjliagfgog: i64,

    #[serde(rename = "GLCHLEDKLOE")]
    pub glchledkloe: i64,

    #[serde(rename = "AOGODAFDJMB")]
    pub aogodafdjmb: i64,

    #[serde(rename = "OOJMADIBFIO")]
    pub oojmadibfio: Vec<i64>,

    #[serde(rename = "ADCFKIMBLHF")]
    pub adcfkimblhf: Option<i64>,

    #[serde(rename = "BPMIEPOOIPB")]
    pub bpmiepooipb: Option<i64>,

    #[serde(rename = "BEAIGLLLMMI")]
    pub beaiglllmmi: Option<i64>,

    #[serde(rename = "HMPIKEBMIBM")]
    pub hmpikebmibm: Option<f64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Hnmnihbndki {
    #[serde(rename = "FUNGUS_TRAINING_DUNGEON_ATTACK")]
    FungusTrainingDungeonAttack,

    #[serde(rename = "FUNGUS_TRAINING_DUNGEON_DEFEND")]
    FungusTrainingDungeonDefend,
}

pub fn load() -> Result<FungusTrainingDungeonExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "FungusTrainingDungeonExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
