// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type FungusTrainingDungeonExcelConfigData = Vec<FungusTrainingDungeonExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct FungusTrainingDungeonExcelConfigDatum {
    #[serde(rename = "dungeonId")]
    pub dungeon_id: i64,

    #[serde(rename = "GIMKAKOLPBI")]
    pub gimkakolpbi: i64,

    #[serde(rename = "EFHFCCKOBEF")]
    pub efhfcckobef: Efhfcckobef,

    #[serde(rename = "BDHGNMNHEFG")]
    pub bdhgnmnhefg: i64,

    #[serde(rename = "HILPHHFDPBC")]
    pub hilphhfdpbc: i64,

    #[serde(rename = "galleryId")]
    pub gallery_id: i64,

    #[serde(rename = "MCBBKEGMCJE")]
    pub mcbbkegmcje: Vec<i64>,

    #[serde(rename = "MPCKKCIENEG")]
    pub mpckkcieneg: Vec<i64>,

    #[serde(rename = "KCHLIDLDDNE")]
    pub kchlidlddne: i64,

    #[serde(rename = "IALOMHHDFIH")]
    pub ialomhhdfih: i64,

    #[serde(rename = "KMCIBOCIKHB")]
    pub kmcibocikhb: Vec<i64>,

    #[serde(rename = "baseScore")]
    pub base_score: f64,

    #[serde(rename = "MCJLALKJDNA")]
    pub mcjlalkjdna: Option<f64>,

    #[serde(rename = "GMAMCEABAOA")]
    pub gmamceabaoa: Option<f64>,

    #[serde(rename = "PHHBAJPBLAH")]
    pub phhbajpblah: f64,

    #[serde(rename = "JMDCMDKPCMA")]
    pub jmdcmdkpcma: Vec<i64>,

    #[serde(rename = "DPHBDNLOJDA")]
    pub dphbdnlojda: i64,

    #[serde(rename = "BCBMMKABDOI")]
    pub bcbmmkabdoi: i64,

    #[serde(rename = "ACMJOCLNHHH")]
    pub acmjoclnhhh: i64,

    #[serde(rename = "CCPMBHPGJNM")]
    pub ccpmbhpgjnm: i64,

    #[serde(rename = "LIALJOIMGCA")]
    pub lialjoimgca: Vec<i64>,

    #[serde(rename = "MENCHPDDBBN")]
    pub menchpddbbn: Option<i64>,

    #[serde(rename = "JNFENNDIHJE")]
    pub jnfenndihje: Option<i64>,

    #[serde(rename = "EBINBOEJEEP")]
    pub ebinboejeep: Option<i64>,

    #[serde(rename = "ELCPHIDIMGF")]
    pub elcphidimgf: Option<f64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Efhfcckobef {
    #[serde(rename = "FUNGUS_TRAINING_DUNGEON_ATTACK")]
    FungusTrainingDungeonAttack,

    #[serde(rename = "FUNGUS_TRAINING_DUNGEON_DEFEND")]
    FungusTrainingDungeonDefend,
}

pub fn load() -> Result<FungusTrainingDungeonExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "FungusTrainingDungeonExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
