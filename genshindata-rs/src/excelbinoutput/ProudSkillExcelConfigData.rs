/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type ProudSkillExcelConfigData = Vec<ProudSkillExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ProudSkillExcelConfigDatum {
    pub proud_skill_id: i64,
    pub proud_skill_group_id: i64,
    pub level: i64,
    pub proud_skill_type: i64,
    pub name_text_map_hash: i64,
    pub desc_text_map_hash: i64,
    pub unlock_desc_text_map_hash: i64,
    pub icon: String,
    pub cost_items: Vec<CostItem>,
    pub filter_conds: Vec<FilterCond>,
    pub break_level: Option<i64>,
    pub param_desc_list: Vec<i64>,
    pub life_effect_params: Vec<String>,
    pub open_config: String,
    pub add_props: Vec<AddProp>,
    pub param_list: Vec<f64>,
    pub life_effect_type: Option<String>,
    pub coin_cost: Option<i64>,
    pub effective_for_team: Option<i64>,
    pub is_hide_life_proud_skill: Option<bool>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AddProp {
    pub prop_type: Option<String>,
    pub value: Option<f64>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct CostItem {
    pub id: Option<i64>,
    pub count: Option<i64>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum FilterCond {
    #[serde(rename = "TALENT_FILTER_NONE")]
    TalentFilterNone,
}
