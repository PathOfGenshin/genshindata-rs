// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type ActivityVintagePresentExcelConfigData = Vec<ActivityVintagePresentExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ActivityVintagePresentExcelConfigDatum {
    #[serde(rename = "ABEEIBGOJLE")]
    pub abeeibgojle: i64,

    #[serde(rename = "CMBPCEKICHA")]
    pub cmbpcekicha: i64,

    #[serde(rename = "openDay")]
    pub open_day: i64,

    #[serde(rename = "groupIdList")]
    pub group_id_list: Vec<i64>,

    #[serde(rename = "KBBKIDANABA")]
    pub kbbkidanaba: Vec<f64>,

    #[serde(rename = "FHOGKMBMDMB")]
    pub fhogkmbmdmb: f64,

    #[serde(rename = "rewardId")]
    pub reward_id: i64,

    #[serde(rename = "DIGFAGCPKIK")]
    pub digfagcpkik: Digfagcpkik,

    #[serde(rename = "HFHCLMGHCPJ")]
    pub hfhclmghcpj: String,

    #[serde(rename = "EGKNILHMFOA")]
    pub egknilhmfoa: i64,

    #[serde(rename = "OIDLDNMPBPI")]
    pub oidldnmpbpi: i64,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Digfagcpkik {
    #[serde(rename = "PRESENT_TYPE_NORMAL")]
    PresentTypeNormal,

    #[serde(rename = "PRESENT_TYPE_SPECIAL")]
    PresentTypeSpecial,
}

pub fn load() -> Result<ActivityVintagePresentExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "ActivityVintagePresentExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
