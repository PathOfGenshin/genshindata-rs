// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type ActivityIslandPartyStageExcelConfigData = Vec<ActivityIslandPartyStageExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ActivityIslandPartyStageExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "FPIMNAJGDLL")]
    pub fpimnajgdll: String,

    #[serde(rename = "galleryId")]
    pub gallery_id: i64,

    #[serde(rename = "MFFGPLCLJFL")]
    pub mffgplcljfl: i64,

    #[serde(rename = "matchId")]
    pub match_id: i64,

    #[serde(rename = "draftId")]
    pub draft_id: i64,

    #[serde(rename = "EGKHABGENGP")]
    pub egkhabgengp: i64,

    #[serde(rename = "titleTextMapHash")]
    pub title_text_map_hash: i64,

    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,

    #[serde(rename = "LNOHGHNENHB")]
    pub lnohghnenhb: i64,

    #[serde(rename = "LBPHAECGJDM")]
    pub lbphaecgjdm: i64,

    #[serde(rename = "watcherList")]
    pub watcher_list: Vec<i64>,

    #[serde(rename = "GLCJNANKNJD")]
    pub glcjnanknjd: Vec<i64>,

    #[serde(rename = "pushTipsID")]
    pub push_tips_id: i64,
}

pub fn load() -> Result<ActivityIslandPartyStageExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "ActivityIslandPartyStageExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
