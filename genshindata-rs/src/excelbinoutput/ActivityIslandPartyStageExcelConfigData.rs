// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type ActivityIslandPartyStageExcelConfigData = Vec<ActivityIslandPartyStageExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ActivityIslandPartyStageExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "ICLHINBKGMK")]
    pub iclhinbkgmk: String,

    #[serde(rename = "galleryId")]
    pub gallery_id: i64,

    #[serde(rename = "KPNNBPACKOA")]
    pub kpnnbpackoa: i64,

    #[serde(rename = "matchId")]
    pub match_id: i64,

    #[serde(rename = "draftId")]
    pub draft_id: i64,

    #[serde(rename = "LABNOEGPADP")]
    pub labnoegpadp: i64,

    #[serde(rename = "titleTextMapHash")]
    pub title_text_map_hash: i64,

    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,

    #[serde(rename = "GKHGPMGANCM")]
    pub gkhgpmgancm: i64,

    #[serde(rename = "OCAPOPODFAI")]
    pub ocapopodfai: i64,

    #[serde(rename = "watcherList")]
    pub watcher_list: Vec<i64>,

    #[serde(rename = "JMIGEJBAFCN")]
    pub jmigejbafcn: Vec<i64>,

    #[serde(rename = "pushTipsID")]
    pub push_tips_id: i64,
}

pub fn load() -> Result<ActivityIslandPartyStageExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "ActivityIslandPartyStageExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
