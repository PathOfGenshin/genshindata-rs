// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type RogueGadgetExcelConfigData = Vec<RogueGadgetExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct RogueGadgetExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "OCLLFPNBMBL")]
    pub ocllfpnbmbl: String,

    #[serde(rename = "gadgetId")]
    pub gadget_id: i64,

    #[serde(rename = "FMNDGPHJOAO")]
    pub fmndgphjoao: Vec<Fmndgphjoao>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct Fmndgphjoao {
    #[serde(rename = "BMNGDMEMEGF")]
    pub bmngdmemegf: Option<String>,

    #[serde(rename = "OIKEKDPFBPI")]
    pub oikekdpfbpi: Option<i64>,
}

pub fn load() -> Result<RogueGadgetExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "RogueGadgetExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
