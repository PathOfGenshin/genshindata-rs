/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type CookRecipeExcelConfigData = Vec<CookRecipeExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CookRecipeExcelConfigDatum {
    pub id: i64,
    pub name_text_map_hash: i64,
    pub rank_level: i64,
    pub icon: String,
    pub desc_text_map_hash: i64,
    pub effect_desc: Vec<i64>,
    pub food_type: FoodType,
    pub cook_method: CookMethod,
    pub is_default_unlocked: Option<bool>,
    pub max_proficiency: i64,
    pub quality_output_vec: Vec<PutVec>,
    pub input_vec: Vec<PutVec>,
    pub qte_param: String,
    pub qte_quality_weight_vec: Vec<i64>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum CookMethod {
    #[serde(rename = "COOK_METHOD_BAKE")]
    CookMethodBake,
    #[serde(rename = "COOK_METHOD_BOIL")]
    CookMethodBoil,
    #[serde(rename = "COOK_METHOD_FRY")]
    CookMethodFry,
    #[serde(rename = "COOK_METHOD_STEAM")]
    CookMethodSteam,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum FoodType {
    #[serde(rename = "COOK_FOOD_ATTACK")]
    CookFoodAttack,
    #[serde(rename = "COOK_FOOD_DEFENSE")]
    CookFoodDefense,
    #[serde(rename = "COOK_FOOD_FUNCTION")]
    CookFoodFunction,
    #[serde(rename = "COOK_FOOD_HEAL")]
    CookFoodHeal,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct PutVec {
    pub id: Option<i64>,
    pub count: Option<i64>,
}
