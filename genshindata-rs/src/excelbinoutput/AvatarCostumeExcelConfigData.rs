// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type AvatarCostumeExcelConfigData = Vec<AvatarCostumeExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct AvatarCostumeExcelConfigDatum {
    #[serde(rename = "EMHIFNAHCOA")]
    pub emhifnahcoa: i64,

    #[serde(rename = "BPFFKCBDIGI")]
    pub bpffkcbdigi: Option<i64>,

    #[serde(rename = "nameTextMapHash")]
    pub name_text_map_hash: i64,

    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,

    #[serde(rename = "itemId")]
    pub item_id: Option<i64>,

    #[serde(rename = "DHIPGFMDBEN")]
    pub dhipgfmdben: i64,

    #[serde(rename = "jsonName")]
    pub json_name: String,

    #[serde(rename = "PDKOJNHALEA")]
    pub pdkojnhalea: Option<i64>,

    #[serde(rename = "DABMFAPBLMA")]
    pub dabmfapblma: Option<i64>,

    #[serde(rename = "BBMFPCDNMND")]
    pub bbmfpcdnmnd: Option<i64>,

    #[serde(rename = "GKGCIBMKJIH")]
    pub gkgcibmkjih: Option<i64>,

    #[serde(rename = "AEBIGPPLCFF")]
    pub aebigpplcff: Option<i64>,

    #[serde(rename = "NGDIFAOMOHA")]
    pub ngdifaomoha: String,

    #[serde(rename = "sideIconName")]
    pub side_icon_name: String,

    #[serde(rename = "LHOBJKLEJNC")]
    pub lhobjklejnc: Option<i64>,

    #[serde(rename = "IAJPFHLLCLD")]
    pub iajpfhllcld: Option<bool>,

    #[serde(rename = "hide")]
    pub hide: Option<bool>,

    #[serde(rename = "gachaImageNameHash")]
    pub gacha_image_name_hash: Option<i64>,

    #[serde(rename = "AOHNBIEBEDI")]
    pub aohnbiebedi: Option<i64>,

    #[serde(rename = "HMMJHKPDPEM")]
    pub hmmjhkpdpem: Option<i64>,

    #[serde(rename = "isDefault")]
    pub is_default: Option<bool>,

    #[serde(rename = "FNPKMKNEGED")]
    pub fnpkmkneged: Option<bool>,
}

pub fn load() -> Result<AvatarCostumeExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "AvatarCostumeExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
