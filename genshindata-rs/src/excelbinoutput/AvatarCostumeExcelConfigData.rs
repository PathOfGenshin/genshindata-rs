// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type AvatarCostumeExcelConfigData = Vec<AvatarCostumeExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct AvatarCostumeExcelConfigDatum {
    #[serde(rename = "HKMDGBEFJKI")]
    pub hkmdgbefjki: i64,

    #[serde(rename = "GMDIOGJIHBL")]
    pub gmdiogjihbl: Option<i64>,

    #[serde(rename = "nameTextMapHash")]
    pub name_text_map_hash: i64,

    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,

    #[serde(rename = "itemId")]
    pub item_id: Option<i64>,

    #[serde(rename = "KADEICDMCBM")]
    pub kadeicdmcbm: i64,

    #[serde(rename = "jsonName")]
    pub json_name: String,

    #[serde(rename = "LJDMDHBHKLC")]
    pub ljdmdhbhklc: Option<i64>,

    #[serde(rename = "BHPKINONCIJ")]
    pub bhpkinoncij: Option<i64>,

    #[serde(rename = "FAEIJLEFHHM")]
    pub faeijlefhhm: Option<i64>,

    #[serde(rename = "KJLJGAPGNDG")]
    pub kjljgapgndg: Option<i64>,

    #[serde(rename = "CBNLIKIKJII")]
    pub cbnlikikjii: Option<i64>,

    #[serde(rename = "PCIKIELFNHI")]
    pub pcikielfnhi: String,

    #[serde(rename = "sideIconName")]
    pub side_icon_name: String,

    #[serde(rename = "HCEGDEAINOH")]
    pub hcegdeainoh: Option<i64>,

    #[serde(rename = "KGAGEIPJPPE")]
    pub kgageipjppe: Option<bool>,

    #[serde(rename = "hide")]
    pub hide: Option<bool>,

    #[serde(rename = "gachaImageNameHash")]
    pub gacha_image_name_hash: Option<i64>,

    #[serde(rename = "PHPPMDIGKEE")]
    pub phppmdigkee: Option<i64>,

    #[serde(rename = "EEBPDGMNMGM")]
    pub eebpdgmnmgm: Option<i64>,

    #[serde(rename = "isDefault")]
    pub is_default: Option<bool>,

    #[serde(rename = "EKILPNOCDAJ")]
    pub ekilpnocdaj: Option<bool>,
}

pub fn load() -> Result<AvatarCostumeExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "AvatarCostumeExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
