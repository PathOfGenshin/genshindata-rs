// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type AvatarCostumeExcelConfigData = Vec<AvatarCostumeExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct AvatarCostumeExcelConfigDatum {
    #[serde(rename = "GIGOGHBMCND")]
    pub gigoghbmcnd: i64,

    #[serde(rename = "JBDALLHLDLN")]
    pub jbdallhldln: Option<i64>,

    #[serde(rename = "nameTextMapHash")]
    pub name_text_map_hash: i64,

    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,

    #[serde(rename = "itemId")]
    pub item_id: Option<i64>,

    #[serde(rename = "OOJDBLPMLDD")]
    pub oojdblpmldd: i64,

    #[serde(rename = "jsonName")]
    pub json_name: String,

    #[serde(rename = "LMFEKDEOONK")]
    pub lmfekdeoonk: Option<i64>,

    #[serde(rename = "FIOHANGCCNF")]
    pub fiohangccnf: Option<i64>,

    #[serde(rename = "FIDFIDLDEDE")]
    pub fidfidldede: Option<i64>,

    #[serde(rename = "MNALJOIJMMD")]
    pub mnaljoijmmd: Option<i64>,

    #[serde(rename = "COGDOMABGGA")]
    pub cogdomabgga: Option<i64>,

    #[serde(rename = "PKPHLKMPHAH")]
    pub pkphlkmphah: String,

    #[serde(rename = "sideIconName")]
    pub side_icon_name: String,

    #[serde(rename = "JPOCFCHFPAN")]
    pub jpocfchfpan: Option<i64>,

    #[serde(rename = "DMAFAJNKPME")]
    pub dmafajnkpme: Option<bool>,

    #[serde(rename = "hide")]
    pub hide: Option<bool>,

    #[serde(rename = "gachaImageNameHash")]
    pub gacha_image_name_hash: Option<i64>,

    #[serde(rename = "AKEKAAMLHPM")]
    pub akekaamlhpm: Option<i64>,

    #[serde(rename = "INAPKEEHGLM")]
    pub inapkeehglm: Option<i64>,

    #[serde(rename = "isDefault")]
    pub is_default: Option<bool>,

    #[serde(rename = "OELCGCPMFKJ")]
    pub oelcgcpmfkj: Option<bool>,
}

pub fn load() -> Result<AvatarCostumeExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "AvatarCostumeExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
