// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type LunaRiteBattleExcelConfigData = Vec<LunaRiteBattleExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct LunaRiteBattleExcelConfigDatum {
    #[serde(rename = "Id")]
    pub id: i64,

    #[serde(rename = "EINIPCMDHJJ")]
    pub einipcmdhjj: Einipcmdhjj,

    #[serde(rename = "OPDNKFGIGCG")]
    pub opdnkfgigcg: Option<i64>,

    #[serde(rename = "PJHLICCHJFA")]
    pub pjhlicchjfa: i64,

    #[serde(rename = "rewardID")]
    pub reward_id: i64,

    #[serde(rename = "IHCGHCEGDNE")]
    pub ihcghcegdne: String,

    #[serde(rename = "AJFJEMAOJHJ")]
    pub ajfjemaojhj: String,

    #[serde(rename = "GNCNAJGELKJ")]
    pub gncnajgelkj: String,

    #[serde(rename = "HONEABAMEOE")]
    pub honeabameoe: i64,

    #[serde(rename = "CNCBIDBLHCD")]
    pub cncbidblhcd: i64,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Einipcmdhjj {
    #[serde(rename = "LUNA_RITE_REGION_TYPE_DRAGONSPINE")]
    LunaRiteRegionTypeDragonspine,

    #[serde(rename = "LUNA_RITE_REGION_TYPE_LIYUE")]
    LunaRiteRegionTypeLiyue,

    #[serde(rename = "LUNA_RITE_REGION_TYPE_MENGDE")]
    LunaRiteRegionTypeMengde,
}

pub fn load() -> Result<LunaRiteBattleExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "LunaRiteBattleExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
