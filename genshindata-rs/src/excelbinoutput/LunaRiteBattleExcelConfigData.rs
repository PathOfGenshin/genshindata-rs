// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type LunaRiteBattleExcelConfigData = Vec<LunaRiteBattleExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct LunaRiteBattleExcelConfigDatum {
    #[serde(rename = "Id")]
    pub id: i64,

    #[serde(rename = "EKJOMEDJHHI")]
    pub ekjomedjhhi: Ekjomedjhhi,

    #[serde(rename = "PDBIONGECJF")]
    pub pdbiongecjf: Option<i64>,

    #[serde(rename = "PILMHKEJJNI")]
    pub pilmhkejjni: i64,

    #[serde(rename = "rewardID")]
    pub reward_id: i64,

    #[serde(rename = "PLLBHDKHIEO")]
    pub pllbhdkhieo: String,

    #[serde(rename = "PKOFNGDFPKM")]
    pub pkofngdfpkm: String,

    #[serde(rename = "EDCLMONBKMK")]
    pub edclmonbkmk: String,

    #[serde(rename = "HJBBPIHKKCK")]
    pub hjbbpihkkck: i64,

    #[serde(rename = "FLDBFFFDIKP")]
    pub fldbfffdikp: i64,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Ekjomedjhhi {
    #[serde(rename = "LUNA_RITE_REGION_TYPE_DRAGONSPINE")]
    LunaRiteRegionTypeDragonspine,

    #[serde(rename = "LUNA_RITE_REGION_TYPE_LIYUE")]
    LunaRiteRegionTypeLiyue,

    #[serde(rename = "LUNA_RITE_REGION_TYPE_MENGDE")]
    LunaRiteRegionTypeMengde,
}

pub fn load() -> Result<LunaRiteBattleExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "LunaRiteBattleExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
