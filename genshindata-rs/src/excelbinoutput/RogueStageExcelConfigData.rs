// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type RogueStageExcelConfigData = Vec<RogueStageExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct RogueStageExcelConfigDatum {
    #[serde(rename = "stageId")]
    pub stage_id: i64,

    #[serde(rename = "firstPassRewardId")]
    pub first_pass_reward_id: Option<i64>,

    #[serde(rename = "DFIGOBLJDOH")]
    pub dfigobljdoh: Option<i64>,

    #[serde(rename = "AMHKGAEEJIP")]
    pub amhkgaeejip: i64,

    #[serde(rename = "IAENEOGLOBL")]
    pub iaeneoglobl: Option<i64>,

    #[serde(rename = "maxLevel")]
    pub max_level: i64,

    #[serde(rename = "reviseLevelId")]
    pub revise_level_id: i64,

    #[serde(rename = "stageNameTextMapHash")]
    pub stage_name_text_map_hash: i64,

    #[serde(rename = "KMCGAMHLIPD")]
    pub kmcgamhlipd: i64,

    #[serde(rename = "PJAHMJGFFOI")]
    pub pjahmjgffoi: Vec<i64>,

    #[serde(rename = "monsterIdList")]
    pub monster_id_list: Vec<Vec<i64>>,

    #[serde(rename = "KJDOENFFLIB")]
    pub kjdoenfflib: Vec<Vec<i64>>,

    #[serde(rename = "preQuestId")]
    pub pre_quest_id: i64,

    #[serde(rename = "BELIOIPILKL")]
    pub belioipilkl: i64,

    #[serde(rename = "MFLHCCJPMCB")]
    pub mflhccjpmcb: Vec<Option<serde_json::Value>>,

    #[serde(rename = "BPJIOMBBNNL")]
    pub bpjiombbnnl: Option<bool>,
}

pub fn load() -> Result<RogueStageExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "RogueStageExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
