// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type RogueStageExcelConfigData = Vec<RogueStageExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct RogueStageExcelConfigDatum {
    #[serde(rename = "stageId")]
    pub stage_id: i64,

    #[serde(rename = "firstPassRewardId")]
    pub first_pass_reward_id: Option<i64>,

    #[serde(rename = "EBMIKHBOGGH")]
    pub ebmikhboggh: Option<i64>,

    #[serde(rename = "DOHKEDMCCHK")]
    pub dohkedmcchk: i64,

    #[serde(rename = "BKHBKALAPLD")]
    pub bkhbkalapld: Option<i64>,

    #[serde(rename = "maxLevel")]
    pub max_level: i64,

    #[serde(rename = "reviseLevelId")]
    pub revise_level_id: i64,

    #[serde(rename = "stageNameTextMapHash")]
    pub stage_name_text_map_hash: i64,

    #[serde(rename = "NMAJJKPDGIA")]
    pub nmajjkpdgia: i64,

    #[serde(rename = "MJPHMJCNFBA")]
    pub mjphmjcnfba: Vec<i64>,

    #[serde(rename = "monsterIdList")]
    pub monster_id_list: Vec<Vec<i64>>,

    #[serde(rename = "AMFKPHKKKFC")]
    pub amfkphkkkfc: Vec<Vec<i64>>,

    #[serde(rename = "preQuestId")]
    pub pre_quest_id: i64,

    #[serde(rename = "LNCPJOIANKH")]
    pub lncpjoiankh: i64,

    #[serde(rename = "LKDKNJIINEA")]
    pub lkdknjiinea: Vec<Option<serde_json::Value>>,

    #[serde(rename = "GDNLBKCMMOA")]
    pub gdnlbkcmmoa: Option<bool>,
}

pub fn load() -> Result<RogueStageExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "RogueStageExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
