/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type HuntingMonsterExcelConfigData = Vec<HuntingMonsterExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HuntingMonsterExcelConfigDatum {
    pub config_id: i64,
    pub monster_id: i64,
    pub affix: Vec<i64>,
    pub ability_group: String,
    pub level: i64,
    pub revise_level_id: i64,
    pub city_list: Vec<i64>,
    pub limit_time: i64,
    pub search_point_num: Option<i64>,
    #[serde(rename = "DGOBHPMGJJK")]
    pub dgobhpmgjjk: Vec<Dgobhpmgjjk>,
    pub clue_text_id_list: Vec<i64>,
    pub news_text_text_map_hash: i64,
    pub trait_text_text_map_hash: i64,
    #[serde(rename = "PIFILONOKAH")]
    pub pifilonokah: i64,
    #[serde(rename = "BFBMKCJFDLD")]
    pub bfbmkcjfdld: i64,
    #[serde(rename = "OFOALGHDGGN")]
    pub ofoalghdggn: i64,
    #[serde(rename = "LKDHACGMBAF")]
    pub lkdhacgmbaf: i64,
    pub refresh_cond: Vec<i64>,
    pub create_pos_type: Option<String>,
    #[serde(rename = "DBFIICOKGPI")]
    pub dbfiicokgpi: Option<bool>,
    #[serde(rename = "LBAPLIBGPNH")]
    pub lbaplibgpnh: Option<i64>,
    pub difficulty: Option<Difficulty>,
    pub initial_pose: Option<i64>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct Dgobhpmgjjk {
    pub param: Vec<Option<serde_json::Value>>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Difficulty {
    #[serde(rename = "HUNTING_DIFFICULTY_HARD")]
    HuntingDifficultyHard,
    #[serde(rename = "HUNTING_DIFFICULTY_MEDIUM")]
    HuntingDifficultyMedium,
}
