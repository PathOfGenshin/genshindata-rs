// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type FlightActivityExcelConfigData = Vec<FlightActivityExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct FlightActivityExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "activityId")]
    pub activity_id: i64,

    #[serde(rename = "previewRewardId")]
    pub preview_reward_id: i64,

    #[serde(rename = "startQuestId")]
    pub start_quest_id: i64,

    #[serde(rename = "npcId")]
    pub npc_id: i64,

    #[serde(rename = "medalId")]
    pub medal_id: Vec<i64>,

    #[serde(rename = "dailyFactorVec")]
    pub daily_factor_vec: Vec<DailyFactorVec>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct DailyFactorVec {
    #[serde(rename = "timeFactor")]
    pub time_factor: i64,

    #[serde(rename = "goldFactor")]
    pub gold_factor: i64,
}

pub fn load() -> Result<FlightActivityExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "FlightActivityExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
