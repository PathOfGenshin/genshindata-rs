// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type ActivitySumoStageExcelConfigData = Vec<ActivitySumoStageExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ActivitySumoStageExcelConfigDatum {
    #[serde(rename = "Id")]
    pub id: i64,

    #[serde(rename = "IKDFANCDDEP")]
    pub ikdfancddep: i64,

    #[serde(rename = "openDay")]
    pub open_day: i64,

    #[serde(rename = "dungeonId")]
    pub dungeon_id: i64,

    #[serde(rename = "watcherList")]
    pub watcher_list: Vec<i64>,

    #[serde(rename = "ELLGGIHOOFD")]
    pub ellggihoofd: Vec<i64>,

    #[serde(rename = "NDNFGOJJLEE")]
    pub ndnfgojjlee: Vec<i64>,

    #[serde(rename = "MLFJDHPHJEJ")]
    pub mlfjdhphjej: Vec<i64>,

    #[serde(rename = "galleryId")]
    pub gallery_id: i64,

    #[serde(rename = "AAPLMBFPAML")]
    pub aaplmbfpaml: Vec<i64>,

    #[serde(rename = "titleTextMapHash")]
    pub title_text_map_hash: i64,

    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,

    #[serde(rename = "MHEFMGPEMDO")]
    pub mhefmgpemdo: Vec<i64>,

    #[serde(rename = "DMCOJJNHAMI")]
    pub dmcojjnhami: Vec<Dmcojjnhami>,

    #[serde(rename = "NBLNJMNANMC")]
    pub nblnjmnanmc: Vec<i64>,

    #[serde(rename = "HAGCKPCJJFO")]
    pub hagckpcjjfo: Vec<i64>,

    #[serde(rename = "PBOIFNBCEGK")]
    pub pboifnbcegk: Option<String>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct Dmcojjnhami {
    #[serde(rename = "DAADPONJKLG")]
    pub daadponjklg: String,

    #[serde(rename = "CEFIHLOEMKJ")]
    pub cefihloemkj: String,
}

pub fn load() -> Result<ActivitySumoStageExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "ActivitySumoStageExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
