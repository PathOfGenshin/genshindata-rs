// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type ActivitySumoStageExcelConfigData = Vec<ActivitySumoStageExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ActivitySumoStageExcelConfigDatum {
    #[serde(rename = "Id")]
    pub id: i64,

    #[serde(rename = "CDOHPBCDGKO")]
    pub cdohpbcdgko: i64,

    #[serde(rename = "openDay")]
    pub open_day: i64,

    #[serde(rename = "dungeonId")]
    pub dungeon_id: i64,

    #[serde(rename = "watcherList")]
    pub watcher_list: Vec<i64>,

    #[serde(rename = "DEFGJGHMFJM")]
    pub defgjghmfjm: Vec<i64>,

    #[serde(rename = "ABPGBGBOGOH")]
    pub abpgbgbogoh: Vec<i64>,

    #[serde(rename = "JEJJCNECJIN")]
    pub jejjcnecjin: Vec<i64>,

    #[serde(rename = "galleryId")]
    pub gallery_id: i64,

    #[serde(rename = "PKCPMPGMIJJ")]
    pub pkcpmpgmijj: Vec<i64>,

    #[serde(rename = "titleTextMapHash")]
    pub title_text_map_hash: i64,

    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,

    #[serde(rename = "BJMLJPIKLEG")]
    pub bjmljpikleg: Vec<i64>,

    #[serde(rename = "GFPENHPBHFI")]
    pub gfpenhpbhfi: Vec<Gfpenhpbhfi>,

    #[serde(rename = "JNHIHJDBGMJ")]
    pub jnhihjdbgmj: Vec<i64>,

    #[serde(rename = "KOACINJBKDL")]
    pub koacinjbkdl: Vec<i64>,

    #[serde(rename = "KOJIAHLFGIA")]
    pub kojiahlfgia: Option<String>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct Gfpenhpbhfi {
    #[serde(rename = "EADJJPMHHHE")]
    pub eadjjpmhhhe: String,

    #[serde(rename = "EIHBMJACNOG")]
    pub eihbmjacnog: String,
}

pub fn load() -> Result<ActivitySumoStageExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "ActivitySumoStageExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
