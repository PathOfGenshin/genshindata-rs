// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type ActivitySumoStageExcelConfigData = Vec<ActivitySumoStageExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ActivitySumoStageExcelConfigDatum {
    #[serde(rename = "Id")]
    pub id: i64,

    #[serde(rename = "ONMNOCANJPI")]
    pub onmnocanjpi: i64,

    #[serde(rename = "openDay")]
    pub open_day: i64,

    #[serde(rename = "dungeonId")]
    pub dungeon_id: i64,

    #[serde(rename = "watcherList")]
    pub watcher_list: Vec<i64>,

    #[serde(rename = "AJKOIOKMIOK")]
    pub ajkoiokmiok: Vec<i64>,

    #[serde(rename = "LDKDLAHKNNI")]
    pub ldkdlahknni: Vec<i64>,

    #[serde(rename = "FFFJNEEABLK")]
    pub fffjneeablk: Vec<i64>,

    #[serde(rename = "galleryId")]
    pub gallery_id: i64,

    #[serde(rename = "HNIKOMAACPC")]
    pub hnikomaacpc: Vec<i64>,

    #[serde(rename = "titleTextMapHash")]
    pub title_text_map_hash: i64,

    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,

    #[serde(rename = "DCINKOMEOHG")]
    pub dcinkomeohg: Vec<i64>,

    #[serde(rename = "OFKGECBDALA")]
    pub ofkgecbdala: Vec<Ofkgecbdala>,

    #[serde(rename = "LMMOHJNNOIH")]
    pub lmmohjnnoih: Vec<i64>,

    #[serde(rename = "GKNPOMNJFNO")]
    pub gknpomnjfno: Vec<i64>,

    #[serde(rename = "IILCKDALMMD")]
    pub iilckdalmmd: Option<String>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct Ofkgecbdala {
    #[serde(rename = "FOCFLDNPCNJ")]
    pub focfldnpcnj: String,

    #[serde(rename = "OGDDGAJJGJP")]
    pub ogddgajjgjp: String,
}

pub fn load() -> Result<ActivitySumoStageExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "ActivitySumoStageExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
