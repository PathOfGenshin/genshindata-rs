/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type DailyTaskExcelConfigData = Vec<DailyTaskExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DailyTaskExcelConfigDatum {
    #[serde(rename = "ID")]
    pub id: i64,
    pub city_id: i64,
    pub pool_id: i64,
    #[serde(rename = "type")]
    pub daily_task_excel_config_datum_type: Option<Type>,
    pub rarity: Option<i64>,
    pub old_group_vec: Vec<i64>,
    pub new_group_vec: Vec<i64>,
    pub finish_type: Option<FinishType>,
    pub finish_progress: Option<i64>,
    pub task_reward_id: i64,
    pub center_position: String,
    pub enter_distance: i64,
    pub exit_distance: i64,
    pub title_text_map_hash: i64,
    pub description_text_map_hash: i64,
    pub target_text_map_hash: i64,
    pub radar_radius: Option<i64>,
    pub finish_param1: Option<i64>,
    pub finish_param2: Option<i64>,
    pub quest_id: Option<i64>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Type {
    #[serde(rename = "DAILY_TASK_SCENE")]
    DailyTaskScene,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum FinishType {
    #[serde(rename = "DAILY_FINISH_CHALLENGE")]
    DailyFinishChallenge,
    #[serde(rename = "DAILY_FINISH_GADGET_ID_NUM")]
    DailyFinishGadgetIdNum,
    #[serde(rename = "DAILY_FINISH_MONSTER_NUM")]
    DailyFinishMonsterNum,
}
