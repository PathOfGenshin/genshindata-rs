// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type LunaRiteSearchingExcelConfigData = Vec<LunaRiteSearchingExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct LunaRiteSearchingExcelConfigDatum {
    #[serde(rename = "Id")]
    pub id: i64,

    #[serde(rename = "EKJOMEDJHHI")]
    pub ekjomedjhhi: String,

    #[serde(rename = "openDay")]
    pub open_day: i64,

    #[serde(rename = "NPGJDLCPGFC")]
    pub npgjdlcpgfc: i64,

    #[serde(rename = "MGAJLAEHLIL")]
    pub mgajlaehlil: Vec<i64>,

    #[serde(rename = "regionCenter")]
    pub region_center: Vec<f64>,

    #[serde(rename = "EJCJNKFHJKL")]
    pub ejcjnkfhjkl: i64,

    #[serde(rename = "regionRadius")]
    pub region_radius: f64,

    #[serde(rename = "DMBJCJJBFMP")]
    pub dmbjcjjbfmp: i64,

    #[serde(rename = "FAGIFPAGLPM")]
    pub fagifpaglpm: i64,

    #[serde(rename = "DMGBMAKPHCG")]
    pub dmgbmakphcg: i64,

    #[serde(rename = "NGMLNLNBBFD")]
    pub ngmlnlnbbfd: i64,
}

pub fn load() -> Result<LunaRiteSearchingExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "LunaRiteSearchingExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
