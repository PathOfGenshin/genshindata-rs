// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type LanV3ShadowLevelExcelConfigData = Vec<LanV3ShadowLevelExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct LanV3ShadowLevelExcelConfigDatum {
    #[serde(rename = "levelId")]
    pub level_id: i64,

    #[serde(rename = "prefabPath")]
    pub prefab_path: String,

    #[serde(rename = "MANHFECAAEG")]
    pub manhfecaaeg: String,

    #[serde(rename = "watcherId")]
    pub watcher_id: i64,

    #[serde(rename = "titleTextMapHash")]
    pub title_text_map_hash: i64,

    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,

    #[serde(rename = "EBFCFLEHJEJ")]
    pub ebfcflehjej: i64,

    #[serde(rename = "KNOAOCPBEBJ")]
    pub knoaocpbebj: i64,

    #[serde(rename = "HLAOHLAPHCE")]
    pub hlaohlaphce: i64,

    #[serde(rename = "AJHNBGBFCCG")]
    pub ajhnbgbfccg: Option<i64>,
}

pub fn load() -> Result<LanV3ShadowLevelExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "LanV3ShadowLevelExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
