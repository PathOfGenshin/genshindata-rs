// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type TeamChainOverallExcelConfigData = Vec<TeamChainOverallExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct TeamChainOverallExcelConfigDatum {
    #[serde(rename = "scheduleId")]
    pub schedule_id: i64,

    #[serde(rename = "BCAGDADNHNN")]
    pub bcagdadnhnn: Vec<i64>,

    #[serde(rename = "NPKFHMGOEAJ")]
    pub npkfhmgoeaj: i64,

    #[serde(rename = "baseScore")]
    pub base_score: i64,

    #[serde(rename = "HOJADAEHLNA")]
    pub hojadaehlna: f64,

    #[serde(rename = "MDMKHPJPIDF")]
    pub mdmkhpjpidf: f64,

    #[serde(rename = "ABHFOANNAHB")]
    pub abhfoannahb: i64,

    #[serde(rename = "FPJEBLLPNDN")]
    pub fpjebllpndn: i64,

    #[serde(rename = "FOOLNABAMBD")]
    pub foolnabambd: i64,

    #[serde(rename = "AMNLKIIOHOH")]
    pub amnlkiiohoh: String,

    #[serde(rename = "EMLIBEFMJAC")]
    pub emlibefmjac: i64,

    #[serde(rename = "GEIIJBMJHOG")]
    pub geiijbmjhog: i64,

    #[serde(rename = "LJKLBCNLPPJ")]
    pub ljklbcnlppj: Vec<i64>,
}

pub fn load() -> Result<TeamChainOverallExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "TeamChainOverallExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
