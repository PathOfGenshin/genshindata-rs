/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type RandomQuestExcelConfigData = Vec<RandomQuestExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RandomQuestExcelConfigDatum {
    pub sub_id: i64,
    pub main_id: i64,
    pub order: i64,
    pub title_text_map_hash: i64,
    pub desc_text_map_hash: i64,
    pub accept_cond: Vec<AcceptCond>,
    pub finish_cond: Vec<Cond>,
    pub fail_cond: Vec<Cond>,
    pub guide: Guide,
    pub guide_hint: GuideHint,
    pub fail_parent: Option<bool>,
    pub fail_parent_show: Option<FailParentShow>,
    pub award_items: Vec<GuideHint>,
    pub begin_exec: Vec<AcceptCond>,
    pub finish_exec: Vec<AcceptCond>,
    pub fail_exec: Vec<AcceptCond>,
    pub is_rewind: Option<bool>,
    pub show_type: Option<FailParentShow>,
    pub finish_cond_comb: Option<FinishCondComb>,
    pub finish_parent: Option<bool>,
    pub exclusive_npc_priority: Option<i64>,
    pub accept_cond_comb: Option<AcceptCondComb>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct AcceptCond {
    pub param: Vec<String>,
    #[serde(rename = "type")]
    pub accept_cond_type: Option<AcceptCondType>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum AcceptCondType {
    #[serde(rename = "QUEST_COND_ITEM_GIVING_ACTIVED")]
    QuestCondItemGivingActived,
    #[serde(rename = "QUEST_COND_ITEM_GIVING_FINISHED")]
    QuestCondItemGivingFinished,
    #[serde(rename = "QUEST_COND_QUEST_GLOBAL_VAR_EQUAL")]
    QuestCondQuestGlobalVarEqual,
    #[serde(rename = "QUEST_COND_STATE_EQUAL")]
    QuestCondStateEqual,
    #[serde(rename = "QUEST_EXEC_ACTIVE_ITEM_GIVING")]
    QuestExecActiveItemGiving,
    #[serde(rename = "QUEST_EXEC_CREATE_PATTERN_GROUP")]
    QuestExecCreatePatternGroup,
    #[serde(rename = "QUEST_EXEC_DEL_PACK_ITEM")]
    QuestExecDelPackItem,
    #[serde(rename = "QUEST_EXEC_REMOVE_PATTERN_GROUP")]
    QuestExecRemovePatternGroup,
    #[serde(rename = "QUEST_EXEC_SET_QUEST_GLOBAL_VAR")]
    QuestExecSetQuestGlobalVar,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum AcceptCondComb {
    #[serde(rename = "LOGIC_AND")]
    LogicAnd,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct GuideHint {
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct Cond {
    #[serde(rename = "type")]
    pub cond_type: Option<FailCondType>,
    pub param: Vec<String>,
    pub param_str: ParamStr,
    pub count: String,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum FailCondType {
    #[serde(rename = "QUEST_CONTENT_COMPLETE_TALK")]
    QuestContentCompleteTalk,
    #[serde(rename = "QUEST_CONTENT_FINISH_ITEM_GIVING")]
    QuestContentFinishItemGiving,
    #[serde(rename = "QUEST_CONTENT_FINISH_PLOT")]
    QuestContentFinishPlot,
    #[serde(rename = "QUEST_CONTENT_LUA_NOTIFY")]
    QuestContentLuaNotify,
    #[serde(rename = "QUEST_CONTENT_NOT_FINISH_PLOT")]
    QuestContentNotFinishPlot,
    #[serde(rename = "QUEST_CONTENT_PATTERN_GROUP_CLEAR_MONSTER")]
    QuestContentPatternGroupClearMonster,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub enum ParamStr {
    #[serde(rename = "")]
    Empty,
    #[serde(rename = "30033_fail")]
    The30033_Fail,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum FailParentShow {
    #[serde(rename = "QUEST_HIDDEN")]
    QuestHidden,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum FinishCondComb {
    #[serde(rename = "LOGIC_OR")]
    LogicOr,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Guide {
    #[serde(rename = "type")]
    pub guide_type: Option<GuideType>,
    pub param: Vec<String>,
    pub guide_scene: Option<i64>,
    pub guide_style: Option<GuideStyle>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum GuideStyle {
    #[serde(rename = "QUEST_GUIDE_STYLE_POINT")]
    QuestGuideStylePoint,
    #[serde(rename = "QUEST_GUIDE_STYLE_TARGET")]
    QuestGuideStyleTarget,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum GuideType {
    #[serde(rename = "QUEST_GUIDE_LOCATION")]
    QuestGuideLocation,
    #[serde(rename = "QUEST_GUIDE_NPC")]
    QuestGuideNpc,
}
