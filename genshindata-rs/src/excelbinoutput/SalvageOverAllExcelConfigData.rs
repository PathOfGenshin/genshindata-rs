// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type SalvageOverAllExcelConfigData = Vec<SalvageOverAllExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct SalvageOverAllExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "activityId")]
    pub activity_id: i64,

    #[serde(rename = "MLBMAKKDIFA")]
    pub mlbmakkdifa: i64,

    #[serde(rename = "preQuestId")]
    pub pre_quest_id: i64,

    #[serde(rename = "guideQuestId")]
    pub guide_quest_id: i64,

    #[serde(rename = "nameTextMapHash")]
    pub name_text_map_hash: i64,

    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,

    #[serde(rename = "regionCenter")]
    pub region_center: Vec<f64>,

    #[serde(rename = "regionRadius")]
    pub region_radius: i64,

    #[serde(rename = "GCAFBPCCCNG")]
    pub gcafbpcccng: i64,

    #[serde(rename = "reminderId")]
    pub reminder_id: i64,

    #[serde(rename = "JIMNJNFCMLA")]
    pub jimnjnfcmla: i64,

    #[serde(rename = "rewardPreviewId")]
    pub reward_preview_id: i64,

    #[serde(rename = "FLHNLEIEJBL")]
    pub flhnleiejbl: i64,

    #[serde(rename = "MIJLEDHDOLI")]
    pub mijledhdoli: i64,
}

pub fn load() -> Result<SalvageOverAllExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "SalvageOverAllExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
