/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type RadarHintExcelConfigData = Vec<RadarHintExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RadarHintExcelConfigDatum {
    pub id: i64,
    #[serde(rename = "PANDJCKODNJ")]
    pub pandjckodnj: String,
    pub name: String,
    pub radius: i64,
    pub effect_name: EffectName,
    pub icon_name: String,
    pub audio_name: AudioName,
    #[serde(rename = "HFPBHIIBPIC")]
    pub hfpbhiibpic: Vec<Option<serde_json::Value>>,
    pub offset_radius: Option<i64>,
    pub area_radius: Option<i64>,
    #[serde(rename = "KGLBEMNEHGJ")]
    pub kglbemnehgj: Option<bool>,
    #[serde(rename = "NAHOBKMAEKF")]
    pub nahobkmaekf: Option<bool>,
    #[serde(rename = "EIFDOHOMPHJ")]
    pub eifdohomphj: Option<bool>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub enum AudioName {
    #[serde(rename = "")]
    Empty,
    #[serde(rename = "Play_ui_feedback_windCrystal_appear")]
    PlayUiFeedbackWindCrystalAppear,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub enum EffectName {
    #[serde(rename = "Eff_UI_Mark_WindCrystal")]
    EffUiMarkWindCrystal,
    #[serde(rename = "")]
    Empty,
}
