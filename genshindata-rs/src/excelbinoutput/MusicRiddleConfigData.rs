// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type MusicRiddleConfigData = Vec<MusicRiddleConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct MusicRiddleConfigDatum {
    #[serde(rename = "HPHDCGHCKAB")]
    pub hphdcghckab: i64,

    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,

    #[serde(rename = "MMCCJJPOEOB")]
    pub mmccjjpoeob: i64,

    #[serde(rename = "DOKNAKOCBAJ")]
    pub doknakocbaj: Vec<i64>,

    #[serde(rename = "pushTipsId")]
    pub push_tips_id: i64,

    #[serde(rename = "LCABBNIBFAO")]
    pub lcabbnibfao: Option<i64>,

    #[serde(rename = "FKDMLPCLJKJ")]
    pub fkdmlpcljkj: Option<i64>,

    #[serde(rename = "KAFCGGNKNMA")]
    pub kafcggnknma: Option<bool>,
}

pub fn load() -> Result<MusicRiddleConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "MusicRiddleConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
