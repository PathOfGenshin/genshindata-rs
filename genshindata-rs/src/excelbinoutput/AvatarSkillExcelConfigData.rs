/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type AvatarSkillExcelConfigData = Vec<AvatarSkillExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AvatarSkillExcelConfigDatum {
    pub id: i64,
    pub name_text_map_hash: i64,
    pub ability_name: String,
    pub desc_text_map_hash: i64,
    pub skill_icon: String,
    pub cost_stamina: Option<i64>,
    pub max_charge_num: i64,
    pub lock_shape: LockShape,
    pub lock_weight_params: Vec<f64>,
    pub is_attack_camera_lock: Option<bool>,
    pub buff_icon: BuffIcon,
    pub global_value_key: GlobalValueKey,
    pub cd_time: Option<f64>,
    #[serde(rename = "triggerID")]
    pub trigger_id: Option<i64>,
    pub drag_type: Option<DragType>,
    pub show_icon_arrow: Option<bool>,
    pub proud_skill_group_id: Option<i64>,
    pub force_can_do_skill: Option<bool>,
    pub cost_elem_type: Option<CostElemType>,
    pub cost_elem_val: Option<i64>,
    #[serde(rename = "ignoreCDMinusRatio")]
    pub ignore_cd_minus_ratio: Option<bool>,
    pub is_ranged: Option<bool>,
    pub need_monitor: Option<String>,
    pub default_locked: Option<bool>,
    pub need_store: Option<bool>,
    pub cd_slot: Option<i64>,
    pub energy_min: Option<i64>,
    #[serde(rename = "MLFGKCAAJKL")]
    pub mlfgkcaajkl: Option<i64>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub enum BuffIcon {
    #[serde(rename = "")]
    Empty,
    #[serde(rename = "Skill_B_Barbara_01")]
    SkillBBarbara01,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub enum CostElemType {
    Electric,
    Fire,
    Grass,
    Ice,
    Rock,
    Water,
    Wind,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum DragType {
    #[serde(rename = "DRAG_ROTATE_CAMERA")]
    DragRotateCamera,
    #[serde(rename = "DRAG_ROTATE_CHARACTER")]
    DragRotateCharacter,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum GlobalValueKey {
    #[serde(rename = "AVATAR_BLOCKING_ENERGY")]
    AvatarBlockingEnergy,
    #[serde(rename = "AVATAR_BREAKOUT_ENERGY")]
    AvatarBreakoutEnergy,
    #[serde(rename = "AVATAR_GLIDING_ENERGY")]
    AvatarGlidingEnergy,
    #[serde(rename = "AVATAR_LANV3RACE_ENERGY")]
    AvatarLanv3RaceEnergy,
    #[serde(rename = "AVATAR_SEEKANDHIDE_ENERGY")]
    AvatarSeekandhideEnergy,
    #[serde(rename = "")]
    Empty,
    #[serde(rename = "TEAM_ANTI_KILL_ENERGY")]
    TeamAntiKillEnergy,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub enum LockShape {
    #[serde(rename = "CircleLockEnemy")]
    CircleLockEnemy,
    #[serde(rename = "CircleLockEnemyAmborFly")]
    CircleLockEnemyAmborFly,
    #[serde(rename = "CircleLockEnemyR10")]
    CircleLockEnemyR10,
    #[serde(rename = "CircleLockEnemyR10H6HC")]
    CircleLockEnemyR10H6Hc,
    #[serde(rename = "CircleLockEnemyR15H10HC")]
    CircleLockEnemyR15H10Hc,
    #[serde(rename = "CircleLockEnemyR5H10HC")]
    CircleLockEnemyR5H10Hc,
    #[serde(rename = "CircleLockEnemyR5H6HC")]
    CircleLockEnemyR5H6Hc,
    #[serde(rename = "CircleLockEnemyR7H6HC")]
    CircleLockEnemyR7H6Hc,
    #[serde(rename = "CircleLockEnemyR8H6HC")]
    CircleLockEnemyR8H6Hc,
}
