// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type VintageMarketStoreExcelConfigData = Vec<VintageMarketStoreExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct VintageMarketStoreExcelConfigDatum {
    #[serde(rename = "JJBMLJGHNOG")]
    pub jjbmljghnog: i64,

    #[serde(rename = "FLOLOJOGGCN")]
    pub flolojoggcn: i64,

    #[serde(rename = "JMEOADGENAK")]
    pub jmeoadgenak: i64,

    #[serde(rename = "BNGINDBCCEB")]
    pub bngindbcceb: Vec<i64>,

    #[serde(rename = "OFACDMAOFEH")]
    pub ofacdmaofeh: Vec<Ofacdmaofeh>,

    #[serde(rename = "LBJOIKGBCLD")]
    pub lbjoikgbcld: i64,

    #[serde(rename = "BHILPBNEPCN")]
    pub bhilpbnepcn: Vec<i64>,

    #[serde(rename = "npcId")]
    pub npc_id: i64,

    #[serde(rename = "BNOMCBPKFFG")]
    pub bnomcbpkffg: i64,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct Ofacdmaofeh {
    #[serde(rename = "defaultValue")]
    pub default_value: i64,

    #[serde(rename = "FGFNFFFFEKN")]
    pub fgfnffffekn: i64,
}

pub fn load() -> Result<VintageMarketStoreExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "VintageMarketStoreExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
