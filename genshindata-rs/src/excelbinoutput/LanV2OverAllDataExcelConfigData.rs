// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type LanV2OverAllDataExcelConfigData = Vec<LanV2OverAllDataExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct LanV2OverAllDataExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "activityId")]
    pub activity_id: i64,

    #[serde(rename = "LDPKGIJPFPG")]
    pub ldpkgijpfpg: i64,

    #[serde(rename = "NMHEFBEENDD")]
    pub nmhefbeendd: i64,

    #[serde(rename = "FFHDFBFKOCK")]
    pub ffhdfbfkock: Vec<i64>,

    #[serde(rename = "JMPEOFCPPAN")]
    pub jmpeofcppan: Vec<i64>,

    #[serde(rename = "JIBKDGJONJN")]
    pub jibkdgjonjn: i64,

    #[serde(rename = "ICJBCKHIINO")]
    pub icjbckhiino: Vec<i64>,

    #[serde(rename = "EEGMDJJKGKG")]
    pub eegmdjjkgkg: i64,

    #[serde(rename = "GKLMEMJFCKG")]
    pub gklmemjfckg: Vec<i64>,

    #[serde(rename = "CMKFABBIEPL")]
    pub cmkfabbiepl: i64,
}

pub fn load() -> Result<LanV2OverAllDataExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "LanV2OverAllDataExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
