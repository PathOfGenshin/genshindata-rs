// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

extern crate serde_derive;

pub type HomeWorldEventExcelConfigData = Vec<HomeWorldEventExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct HomeWorldEventExcelConfigDatum {
    #[serde(rename = "ENLPLABBCJD")]
    pub enlplabbcjd: i64,

    #[serde(rename = "KJJLOFLLCAM")]
    pub kjjlofllcam: Kjjlofllcam,

    #[serde(rename = "avatarID")]
    pub avatar_id: i64,

    #[serde(rename = "BCNGDEOBKFB")]
    pub bcngdeobkfb: Option<i64>,

    #[serde(rename = "rewardID")]
    pub reward_id: Option<i64>,

    #[serde(rename = "AHABKIKCLAM")]
    pub ahabkikclam: i64,

    #[serde(rename = "order")]
    pub order: Option<i64>,

    #[serde(rename = "NMHDCJPNIAB")]
    pub nmhdcjpniab: Option<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Kjjlofllcam {
    #[serde(rename = "HOME_AVATAR_REWARD_EVENT")]
    HomeAvatarRewardEvent,

    #[serde(rename = "HOME_AVATAR_SUMMON_EVENT")]
    HomeAvatarSummonEvent,
}

pub fn load() -> Result<HomeWorldEventExcelConfigData, crate::json::JsonError> {
    let path: std::path::PathBuf = [
        "GenshinData",
        "ExcelBinOutput",
        "HomeWorldEventExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
