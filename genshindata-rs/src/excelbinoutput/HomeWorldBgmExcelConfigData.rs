// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type HomeWorldBgmExcelConfigData = Vec<HomeWorldBgmExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct HomeWorldBgmExcelConfigDatum {
    #[serde(rename = "KHCOCKKLNGA")]
    pub khcockklnga: i64,

    #[serde(rename = "ALNPIEOANEF")]
    pub alnpieoanef: bool,

    #[serde(rename = "FOKADLPKMDC")]
    pub fokadlpkmdc: bool,

    #[serde(rename = "cityId")]
    pub city_id: i64,

    #[serde(rename = "sortOrder")]
    pub sort_order: i64,

    #[serde(rename = "FKPMAKMFAMN")]
    pub fkpmakmfamn: String,

    #[serde(rename = "FJACDCGLBHD")]
    pub fjacdcglbhd: i64,

    #[serde(rename = "DMAFAJNKPME")]
    pub dmafajnkpme: Option<bool>,
}

pub fn load() -> Result<HomeWorldBgmExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "HomeWorldBgmExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
