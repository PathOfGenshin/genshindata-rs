// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

extern crate serde_derive;

pub type WindFieldShowChallengeExcelConfigData = Vec<WindFieldShowChallengeExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct WindFieldShowChallengeExcelConfigDatum {
    #[serde(rename = "BMBPGLCFGKD")]
    pub bmbpglcfgkd: i64,

    #[serde(rename = "LFOLKMHENDI")]
    pub lfolkmhendi: Option<i64>,

    #[serde(rename = "showType")]
    pub show_type: String,

    #[serde(rename = "DNIEBODAFAA")]
    pub dniebodafaa: Vec<i64>,

    #[serde(rename = "titleTextMapHash")]
    pub title_text_map_hash: i64,

    #[serde(rename = "HEKDEKNHFGI")]
    pub hekdeknhfgi: i64,

    #[serde(rename = "EFDFKHOHKLD")]
    pub efdfkhohkld: i64,

    #[serde(rename = "LKBHFCIPKJJ")]
    pub lkbhfcipkjj: Option<i64>,
}

pub fn load() -> Result<WindFieldShowChallengeExcelConfigData, crate::json::JsonError> {
    let path: std::path::PathBuf = [
        "GenshinData",
        "ExcelBinOutput",
        "WindFieldShowChallengeExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
