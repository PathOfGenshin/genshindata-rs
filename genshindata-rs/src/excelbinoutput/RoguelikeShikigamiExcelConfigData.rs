/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type RoguelikeShikigamiExcelConfigData = Vec<RoguelikeShikigamiExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RoguelikeShikigamiExcelConfigDatum {
    pub sequence_id: i64,
    pub group_id: i64,
    pub unlock_cond: Vec<UnlockCond>,
    pub shiki_skill_name_text_map_hash: i64,
    pub shiki_skill_desc_text_map_hash: i64,
    pub level: Option<i64>,
    pub cost_item_id: Option<i64>,
    pub cost_item_count: Option<i64>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct UnlockCond {
    #[serde(rename = "type")]
    pub unlock_cond_type: Option<Type>,
    pub param: String,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Type {
    #[serde(rename = "SHIKIGAMI_UNLOCK_ACTIVITY_DAY")]
    ShikigamiUnlockActivityDay,
    #[serde(rename = "SHIKIGAMI_UNLOCK_ROGUELIKE_STAGE")]
    ShikigamiUnlockRoguelikeStage,
}
