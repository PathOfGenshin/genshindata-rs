// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type RoguelikeShikigamiExcelConfigData = Vec<RoguelikeShikigamiExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct RoguelikeShikigamiExcelConfigDatum {
    #[serde(rename = "EDPDKGFIHLI")]
    pub edpdkgfihli: i64,

    #[serde(rename = "groupId")]
    pub group_id: i64,

    #[serde(rename = "unlockCond")]
    pub unlock_cond: Vec<UnlockCond>,

    #[serde(rename = "GBLKEHAHHNI")]
    pub gblkehahhni: i64,

    #[serde(rename = "PKCDGKLIPFO")]
    pub pkcdgklipfo: i64,

    #[serde(rename = "level")]
    pub level: Option<i64>,

    #[serde(rename = "BHCJELIKNPB")]
    pub bhcjeliknpb: Option<i64>,

    #[serde(rename = "ACMPCOCAANI")]
    pub acmpcocaani: Option<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct UnlockCond {
    #[serde(rename = "type")]
    pub unlock_cond_type: Option<Type>,

    #[serde(rename = "param")]
    pub param: String,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "SHIKIGAMI_UNLOCK_ACTIVITY_DAY")]
    ShikigamiUnlockActivityDay,

    #[serde(rename = "SHIKIGAMI_UNLOCK_ROGUELIKE_STAGE")]
    ShikigamiUnlockRoguelikeStage,
}

pub fn load() -> Result<RoguelikeShikigamiExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "RoguelikeShikigamiExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
