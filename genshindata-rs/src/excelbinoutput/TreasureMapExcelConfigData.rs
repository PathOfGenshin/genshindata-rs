// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type TreasureMapExcelConfigData = Vec<TreasureMapExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct TreasureMapExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "activityId")]
    pub activity_id: i64,

    #[serde(rename = "previewRewardId")]
    pub preview_reward_id: i64,

    #[serde(rename = "npcId")]
    pub npc_id: i64,

    #[serde(rename = "npcPos")]
    pub npc_pos: Vec<f64>,

    #[serde(rename = "treasureDays")]
    pub treasure_days: i64,

    #[serde(rename = "questId")]
    pub quest_id: i64,

    #[serde(rename = "monsterProbability")]
    pub monster_probability: f64,

    #[serde(rename = "rewardWorktopGadgetId")]
    pub reward_worktop_gadget_id: i64,

    #[serde(rename = "tokenMaterialId")]
    pub token_material_id: i64,

    #[serde(rename = "unitTokenDropId")]
    pub unit_token_drop_id: i64,

    #[serde(rename = "mpRewardId")]
    pub mp_reward_id: i64,

    #[serde(rename = "hostRewardLimit")]
    pub host_reward_limit: i64,

    #[serde(rename = "guestRewardLimit")]
    pub guest_reward_limit: i64,

    #[serde(rename = "mpChallengeIndex")]
    pub mp_challenge_index: i64,

    #[serde(rename = "bonusChallengeIndex")]
    pub bonus_challenge_index: i64,

    #[serde(rename = "challengeGadgetSuite")]
    pub challenge_gadget_suite: i64,

    #[serde(rename = "spotReviseLevelId")]
    pub spot_revise_level_id: i64,

    #[serde(rename = "detectorMaterialId")]
    pub detector_material_id: i64,

    #[serde(rename = "guideChildQuestId")]
    pub guide_child_quest_id: i64,

    #[serde(rename = "FKCJLDJONKA")]
    pub fkcjldjonka: Option<i64>,
}

pub fn load() -> Result<TreasureMapExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "TreasureMapExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
