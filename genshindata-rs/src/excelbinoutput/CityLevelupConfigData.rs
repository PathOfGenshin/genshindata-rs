/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type CityLevelupConfigData = Vec<CityLevelupConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CityLevelupConfigDatum {
    pub scene_id: i64,
    pub city_id: i64,
    pub level: i64,
    pub consume_item: ConsumeItem,
    #[serde(rename = "rewardID")]
    pub reward_id: Option<i64>,
    pub action_vec: Vec<ActionVec>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ActionVec {
    pub param1_vec: Vec<i64>,
    pub param2_vec: Vec<i64>,
    #[serde(rename = "type")]
    pub action_vec_type: Option<Type>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Type {
    #[serde(rename = "WORLD_AREA_ACTION_ACTIVATE_ITEM")]
    WorldAreaActionActivateItem,
    #[serde(rename = "WORLD_AREA_ACTION_IMPROVE_STAMINA")]
    WorldAreaActionImproveStamina,
    #[serde(rename = "WORLD_AREA_ACTION_UNLOCK_FORCE")]
    WorldAreaActionUnlockForce,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ConsumeItem {
    pub item_id: Option<i64>,
    pub item_num: Option<i64>,
}
