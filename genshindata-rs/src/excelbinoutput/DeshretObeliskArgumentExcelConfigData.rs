// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type DeshretObeliskArgumentExcelConfigData = Vec<DeshretObeliskArgumentExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct DeshretObeliskArgumentExcelConfigDatum {
    #[serde(rename = "GKDNNEPGBKG")]
    pub gkdnnepgbkg: i64,

    #[serde(rename = "groupIdList")]
    pub group_id_list: Vec<i64>,

    #[serde(rename = "FIBKNGALEJO")]
    pub fibkngalejo: Vec<i64>,

    #[serde(rename = "effectName")]
    pub effect_name: EffectName,

    #[serde(rename = "KNIJGMOOGAO")]
    pub knijgmoogao: Vec<f64>,

    #[serde(rename = "HFLIEFBLEFP")]
    pub hfliefblefp: f64,

    #[serde(rename = "DPEMFCKLOLH")]
    pub dpemfcklolh: f64,

    #[serde(rename = "EPENKMFIOLL")]
    pub epenkmfioll: Vec<f64>,

    #[serde(rename = "GEMPCOGMCLJ")]
    pub gempcogmclj: Vec<f64>,

    #[serde(rename = "IFOBBFPCGNG")]
    pub ifobbfpcgng: f64,

    #[serde(rename = "FGMBDLLCKFI")]
    pub fgmbdllckfi: f64,

    #[serde(rename = "IBFHPFBEJIE")]
    pub ibfhpfbejie: f64,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum EffectName {
    #[serde(rename = "Eff_SceneObj_DeshretObelisk_01_Search")]
    EffSceneObjDeshretObelisk01_Search,
}

pub fn load() -> Result<DeshretObeliskArgumentExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "DeshretObeliskArgumentExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
