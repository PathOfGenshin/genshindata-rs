// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type OfferingLumenStoneExcelConfigData = Vec<OfferingLumenStoneExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct OfferingLumenStoneExcelConfigDatum {
    #[serde(rename = "configId")]
    pub config_id: i64,

    #[serde(rename = "HHHAEKBJKCL")]
    pub hhhaekbjkcl: i64,

    #[serde(rename = "PAPJJMOMBNK")]
    pub papjjmombnk: i64,

    #[serde(rename = "iconPath")]
    pub icon_path: IconPath,

    #[serde(rename = "level")]
    pub level: Option<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum IconPath {
    #[serde(rename = "")]
    Empty,

    #[serde(rename = "UI_ItemIcon_220048_02")]
    UiItemIcon220048_02,

    #[serde(rename = "UI_ItemIcon_220048_03")]
    UiItemIcon220048_03,
}

pub fn load() -> Result<OfferingLumenStoneExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "OfferingLumenStoneExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
