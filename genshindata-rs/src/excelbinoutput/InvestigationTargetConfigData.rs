/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type InvestigationTargetConfigData = Vec<InvestigationTargetConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct InvestigationTargetConfigDatum {
    pub quest_id: Option<i64>,
    pub investigation_id: i64,
    pub reward_id: i64,
    pub icon: String,
    pub image: String,
    pub info_des_text_map_hash: i64,
    pub guide: Guide,
    pub id: i64,
    pub trigger_config: TriggerConfig,
    pub progress: i64,
    pub is_disuse: Option<bool>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Guide {
    pub param: Vec<String>,
    #[serde(rename = "type")]
    pub guide_type: Option<Type>,
    pub guide_scene: Option<i64>,
    pub guide_style: Option<String>,
    pub guide_layer: Option<String>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Type {
    #[serde(rename = "QUEST_GUIDE_DUNGEON_ENTRY")]
    QuestGuideDungeonEntry,
    #[serde(rename = "QUEST_GUIDE_LOCATION")]
    QuestGuideLocation,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TriggerConfig {
    pub trigger_type: String,
    pub param_list: Vec<String>,
}
