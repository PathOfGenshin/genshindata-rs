// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type MusicGamePositionConfigData = Vec<MusicGamePositionConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct MusicGamePositionConfigDatum {
    #[serde(rename = "ELHOCJPJNEF")]
    pub elhocjpjnef: i64,

    #[serde(rename = "GBGJDLMGHIF")]
    pub gbgjdlmghif: Vec<f64>,

    #[serde(rename = "PEGHKMJDHMH")]
    pub peghkmjdhmh: Option<f64>,

    #[serde(rename = "NMJDFBHGKEJ")]
    pub nmjdfbhgkej: Option<i64>,

    #[serde(rename = "JFPDPIJKCAA")]
    pub jfpdpijkcaa: Option<i64>,

    #[serde(rename = "MGAJJACPJGN")]
    pub mgajjacpjgn: Option<i64>,

    #[serde(rename = "JBHCBCLADHE")]
    pub jbhcbcladhe: String,
}

pub fn load() -> Result<MusicGamePositionConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "MusicGamePositionConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
