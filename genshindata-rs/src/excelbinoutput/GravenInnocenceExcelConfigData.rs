// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

extern crate serde_derive;

pub type GravenInnocenceExcelConfigData = Vec<GravenInnocenceExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct GravenInnocenceExcelConfigDatum {
    #[serde(rename = "activityId")]
    pub activity_id: i64,

    #[serde(rename = "NFOFHNLECIM")]
    pub nfofhnlecim: i64,

    #[serde(rename = "FHHIIOIJCPO")]
    pub fhhiioijcpo: i64,

    #[serde(rename = "JAEADILAIAD")]
    pub jaeadilaiad: i64,

    #[serde(rename = "DJLCHBCHMCH")]
    pub djlchbchmch: i64,

    #[serde(rename = "DBPIAPFMLKJ")]
    pub dbpiapfmlkj: i64,

    #[serde(rename = "FCFOKKLIGIE")]
    pub fcfokkligie: i64,

    #[serde(rename = "FAGEENJPBDF")]
    pub fageenjpbdf: i64,

    #[serde(rename = "AMKOPGAPCBL")]
    pub amkopgapcbl: i64,

    #[serde(rename = "FNLKBJDBLLM")]
    pub fnlkbjdbllm: i64,

    #[serde(rename = "OBAENGOAGGA")]
    pub obaengoagga: Vec<i64>,

    #[serde(rename = "DKKCEGEOLKK")]
    pub dkkcegeolkk: i64,

    #[serde(rename = "AHHOCIACMCA")]
    pub ahhociacmca: i64,
}

pub fn load() -> Result<GravenInnocenceExcelConfigData, crate::json::JsonError> {
    let path: std::path::PathBuf = [
        "GenshinData",
        "ExcelBinOutput",
        "GravenInnocenceExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
