// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type GravenInnocenceExcelConfigData = Vec<GravenInnocenceExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct GravenInnocenceExcelConfigDatum {
    #[serde(rename = "activityId")]
    pub activity_id: i64,

    #[serde(rename = "AKBDPGKNCEL")]
    pub akbdpgkncel: i64,

    #[serde(rename = "ICFNMMGLMKG")]
    pub icfnmmglmkg: i64,

    #[serde(rename = "KDAAOFFLHGC")]
    pub kdaaofflhgc: i64,

    #[serde(rename = "HBCPAIGNHEI")]
    pub hbcpaignhei: i64,

    #[serde(rename = "MPMCMJEOIFG")]
    pub mpmcmjeoifg: i64,

    #[serde(rename = "BFPNEANONMC")]
    pub bfpneanonmc: i64,

    #[serde(rename = "AOMFIEDAPMM")]
    pub aomfiedapmm: i64,

    #[serde(rename = "ACFNNNEPFLB")]
    pub acfnnnepflb: i64,

    #[serde(rename = "MFCGGDBPGID")]
    pub mfcggdbpgid: i64,

    #[serde(rename = "ECFBDJMNEDF")]
    pub ecfbdjmnedf: Vec<i64>,

    #[serde(rename = "DBLHPPBMLHK")]
    pub dblhppbmlhk: i64,

    #[serde(rename = "JBLMADMAIFE")]
    pub jblmadmaife: i64,
}

pub fn load() -> Result<GravenInnocenceExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "GravenInnocenceExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
