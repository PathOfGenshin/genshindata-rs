// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type CombineExcelConfigData = Vec<CombineExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct CombineExcelConfigDatum {
    #[serde(rename = "combineId")]
    pub combine_id: i64,

    #[serde(rename = "playerLevel")]
    pub player_level: Option<i64>,

    #[serde(rename = "isDefaultShow")]
    pub is_default_show: Option<bool>,

    #[serde(rename = "combineType")]
    pub combine_type: i64,

    #[serde(rename = "subCombineType")]
    pub sub_combine_type: i64,

    #[serde(rename = "resultItemId")]
    pub result_item_id: i64,

    #[serde(rename = "resultItemCount")]
    pub result_item_count: i64,

    #[serde(rename = "scoinCost")]
    pub scoin_cost: Option<i64>,

    #[serde(rename = "randomItems")]
    pub random_items: Vec<RandomItem>,

    #[serde(rename = "materialItems")]
    pub material_items: Vec<MaterialItem>,

    #[serde(rename = "effectDescTextMapHash")]
    pub effect_desc_text_map_hash: i64,

    #[serde(rename = "recipeType")]
    pub recipe_type: RecipeType,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct MaterialItem {
    #[serde(rename = "id")]
    pub id: Option<i64>,

    #[serde(rename = "count")]
    pub count: Option<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct RandomItem {
    #[serde(rename = "count")]
    pub count: Option<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum RecipeType {
    #[serde(rename = "RECIPE_TYPE_COMBINE")]
    RecipeTypeCombine,

    #[serde(rename = "RECIPE_TYPE_COMBINE_HOMEWORLD")]
    RecipeTypeCombineHomeworld,

    #[serde(rename = "RECIPE_TYPE_CONVERT")]
    RecipeTypeConvert,
}

pub fn load() -> Result<CombineExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "CombineExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
