/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type HideAndSeekMatchExcelConfigData = Vec<HideAndSeekMatchExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct HideAndSeekMatchExcelConfigDatum {
    pub title_text_map_hash: i64,
    pub unlock_tips_text_map_hash: i64,
    pub unlock_tips2_text_map_hash: i64,
    pub unlock_tips3_text_map_hash: i64,
    pub dsc_text_map_hash: i64,
    pub map_icon_path_hash: Vec<f64>,
    pub map_small_icon_path_hash: f64,
    pub scene_id: i64,
    pub group_id: i64,
    pub transport_point_list: Vec<i64>,
    pub duration_list: Vec<i64>,
    #[serde(rename = "galleryID")]
    pub gallery_id: i64,
    pub id: i64,
    pub cond: Vec<Cond>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct Cond {
    #[serde(rename = "type")]
    pub cond_type: Option<Type>,
    pub param: Option<i64>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Type {
    #[serde(rename = "MATCH_LIMIT_TYPE_MAP_UNLOCK")]
    MatchLimitTypeMapUnlock,
    #[serde(rename = "MATCH_LIMIT_TYPE_QUEST_FINISH")]
    MatchLimitTypeQuestFinish,
}
