// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type FungusCultivateExcelConfigData = Vec<FungusCultivateExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct FungusCultivateExcelConfigDatum {
    #[serde(rename = "HLCGNIFKKKI")]
    pub hlcgnifkkki: i64,

    #[serde(rename = "DGHHAFPKMPO")]
    pub dghhafpkmpo: i64,

    #[serde(rename = "LLEDJCPJBCH")]
    pub lledjcpjbch: Option<i64>,

    #[serde(rename = "BIFMPMMEPLF")]
    pub bifmpmmeplf: i64,

    #[serde(rename = "LABNOEGPADP")]
    pub labnoegpadp: i64,

    #[serde(rename = "JABCKCPNGOP")]
    pub jabckcpngop: Vec<i64>,

    #[serde(rename = "DAPGJCOMGGI")]
    pub dapgjcomggi: Vec<i64>,

    #[serde(rename = "JBGICFGOECA")]
    pub jbgicfgoeca: Vec<i64>,

    #[serde(rename = "HPCFCAAPPOG")]
    pub hpcfcaappog: Vec<Vec<i64>>,

    #[serde(rename = "KAHAIAHOPMH")]
    pub kahaiahopmh: Vec<i64>,

    #[serde(rename = "IJIFJALIDJJ")]
    pub ijifjalidjj: Option<i64>,

    #[serde(rename = "tutorialId")]
    pub tutorial_id: Option<i64>,
}

pub fn load() -> Result<FungusCultivateExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "FungusCultivateExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
