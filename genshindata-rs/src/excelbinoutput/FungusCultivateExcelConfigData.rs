// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type FungusCultivateExcelConfigData = Vec<FungusCultivateExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct FungusCultivateExcelConfigDatum {
    #[serde(rename = "DGKDBDDLJEO")]
    pub dgkdbddljeo: i64,

    #[serde(rename = "PJNHBLKECAC")]
    pub pjnhblkecac: i64,

    #[serde(rename = "EAJIAOHFDJE")]
    pub eajiaohfdje: Option<i64>,

    #[serde(rename = "GDBENBLMIHG")]
    pub gdbenblmihg: i64,

    #[serde(rename = "BDHGNMNHEFG")]
    pub bdhgnmnhefg: i64,

    #[serde(rename = "GCKNKGGMDHA")]
    pub gcknkggmdha: Vec<i64>,

    #[serde(rename = "OBGPNHBFCHL")]
    pub obgpnhbfchl: Vec<i64>,

    #[serde(rename = "POAAFCNKPAE")]
    pub poaafcnkpae: Vec<i64>,

    #[serde(rename = "KBICPPGHHAB")]
    pub kbicppghhab: Vec<Vec<i64>>,

    #[serde(rename = "JMDCMDKPCMA")]
    pub jmdcmdkpcma: Vec<i64>,

    #[serde(rename = "FMEHOOABADE")]
    pub fmehooabade: Option<i64>,

    #[serde(rename = "tutorialId")]
    pub tutorial_id: Option<i64>,
}

pub fn load() -> Result<FungusCultivateExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "FungusCultivateExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
