/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type MonsterAffixExcelConfigData = Vec<MonsterAffixExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MonsterAffixExcelConfigDatum {
    pub id: i64,
    pub affix: String,
    pub comment: String,
    pub ability_name: Vec<String>,
    pub is_legal: IsLegal,
    pub icon_path: IconPath,
    pub general_skill_icon: String,
    pub is_common: Option<bool>,
    pub pre_add: Option<bool>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub enum IconPath {
    #[serde(rename = "")]
    Empty,
    #[serde(rename = "Skill_E_Ambor")]
    SkillEAmbor,
    #[serde(rename = "Skill_E_Ayaka")]
    SkillEAyaka,
    #[serde(rename = "Skill_E_Diluc_01")]
    SkillEDiluc01,
    #[serde(rename = "Skill_E_Kate")]
    SkillEKate,
    #[serde(rename = "Skill_E_PlayerWind_01")]
    SkillEPlayerWind01,
    #[serde(rename = "Skill_S_Diluc_01_01")]
    SkillSDiluc01_01,
    #[serde(rename = "Skill_S_Diluc_01_02")]
    SkillSDiluc01_02,
    #[serde(rename = "Skill_S_Diluc_01_03")]
    SkillSDiluc01_03,
    #[serde(rename = "Skill_S_Qin_01")]
    SkillSQin01,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub enum IsLegal {
    #[serde(rename = "")]
    Empty,
    #[serde(rename = "æ˜¯")]
    IsLegal,
}
