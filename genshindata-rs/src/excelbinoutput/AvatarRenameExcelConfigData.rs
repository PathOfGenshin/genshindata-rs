// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type AvatarRenameExcelConfigData = Vec<AvatarRenameExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct AvatarRenameExcelConfigDatum {
    #[serde(rename = "NJEDGCHAKBC")]
    pub njedgchakbc: i64,

    #[serde(rename = "type")]
    pub avatar_rename_excel_config_datum_type: String,

    #[serde(rename = "BACANCJEJAF")]
    pub bacancjejaf: i64,

    #[serde(rename = "IJNLGCNBBJA")]
    pub ijnlgcnbbja: i64,

    #[serde(rename = "JAIMJAIAPOH")]
    pub jaimjaiapoh: i64,

    #[serde(rename = "DIGAGDKNIJL")]
    pub digagdknijl: i64,

    #[serde(rename = "CNKOHNIBELH")]
    pub cnkohnibelh: Vec<Cnkohnibelh>,

    #[serde(rename = "IAIEPFHNJDD")]
    pub iaiepfhnjdd: String,

    #[serde(rename = "DEIHFJMODAB")]
    pub deihfjmodab: Vec<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct Cnkohnibelh {
    #[serde(rename = "PLPFPKEKACG")]
    pub plpfpkekacg: String,

    #[serde(rename = "NLEDLOOBLKJ")]
    pub nledlooblkj: String,
}

pub fn load() -> Result<AvatarRenameExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "AvatarRenameExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
