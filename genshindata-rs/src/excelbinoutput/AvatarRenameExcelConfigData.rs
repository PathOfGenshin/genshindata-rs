// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type AvatarRenameExcelConfigData = Vec<AvatarRenameExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct AvatarRenameExcelConfigDatum {
    #[serde(rename = "NFMBJCBLLKA")]
    pub nfmbjcbllka: i64,

    #[serde(rename = "type")]
    pub avatar_rename_excel_config_datum_type: String,

    #[serde(rename = "BGDIKFFCOAL")]
    pub bgdikffcoal: i64,

    #[serde(rename = "CCJEDNCIGMB")]
    pub ccjedncigmb: i64,

    #[serde(rename = "AOCJCLEKHCN")]
    pub aocjclekhcn: i64,

    #[serde(rename = "ILJBBMJDGGG")]
    pub iljbbmjdggg: i64,

    #[serde(rename = "CDBDCPDJMHO")]
    pub cdbdcpdjmho: Vec<Cdbdcpdjmho>,

    #[serde(rename = "KPDPCKPLMND")]
    pub kpdpckplmnd: String,

    #[serde(rename = "GFLPCBFJCFG")]
    pub gflpcbfjcfg: Vec<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct Cdbdcpdjmho {
    #[serde(rename = "DFHKNDHEKEM")]
    pub dfhkndhekem: String,

    #[serde(rename = "AHMMCDIJOFE")]
    pub ahmmcdijofe: String,
}

pub fn load() -> Result<AvatarRenameExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "AvatarRenameExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
