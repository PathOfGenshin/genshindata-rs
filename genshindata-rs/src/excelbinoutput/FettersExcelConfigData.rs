/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type FettersExcelConfigData = Vec<FettersExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FettersExcelConfigDatum {
    #[serde(rename = "type")]
    pub fetters_excel_config_datum_type: i64,
    pub hide_costume_list: Vec<i64>,
    pub show_costume_list: Vec<i64>,
    pub tips: Vec<i64>,
    pub voice_title_text_map_hash: i64,
    pub voice_file: String,
    pub voice_file_text_text_map_hash: i64,
    pub voice_title_locked_text_map_hash: i64,
    pub fetter_id: i64,
    pub avatar_id: i64,
    pub open_conds: Vec<OpenCond>,
    pub finish_conds: Vec<Option<serde_json::Value>>,
    pub is_hiden: Option<bool>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OpenCond {
    pub cond_type: Option<CondType>,
    pub param_list: Vec<i64>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum CondType {
    #[serde(rename = "FETTER_COND_AVATAR_PROMOTE_LEVEL")]
    FetterCondAvatarPromoteLevel,
    #[serde(rename = "FETTER_COND_FETTER_LEVEL")]
    FetterCondFetterLevel,
    #[serde(rename = "FETTER_COND_FINISH_PARENT_QUEST")]
    FetterCondFinishParentQuest,
    #[serde(rename = "FETTER_COND_FINISH_QUEST")]
    FetterCondFinishQuest,
    #[serde(rename = "FETTER_COND_PLAYER_BIRTHDAY")]
    FetterCondPlayerBirthday,
    #[serde(rename = "FETTER_COND_UNLOCK_TRANS_POINT")]
    FetterCondUnlockTransPoint,
}
