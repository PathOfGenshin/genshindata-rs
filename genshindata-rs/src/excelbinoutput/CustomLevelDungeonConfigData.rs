// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type CustomLevelDungeonConfigData = Vec<CustomLevelDungeonConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct CustomLevelDungeonConfigDatum {
    #[serde(rename = "dungeonID")]
    pub dungeon_id: i64,

    #[serde(rename = "order")]
    pub order: i64,

    #[serde(rename = "jsonPath")]
    pub json_path: String,

    #[serde(rename = "DCHNAFHFMLE")]
    pub dchnafhfmle: String,

    #[serde(rename = "KKHGBNADIMI")]
    pub kkhgbnadimi: i64,

    #[serde(rename = "DGEIBBKOEEP")]
    pub dgeibbkoeep: i64,

    #[serde(rename = "DHOHJMKDLIE")]
    pub dhohjmkdlie: i64,

    #[serde(rename = "KLBEICGIMKN")]
    pub klbeicgimkn: i64,

    #[serde(rename = "DBOECDBMGON")]
    pub dboecdbmgon: String,

    #[serde(rename = "COJJDOEJHBA")]
    pub cojjdoejhba: Vec<i64>,
}

pub fn load() -> Result<CustomLevelDungeonConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "CustomLevelDungeonConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
