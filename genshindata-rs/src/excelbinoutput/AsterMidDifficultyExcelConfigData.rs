// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type AsterMidDifficultyExcelConfigData = Vec<AsterMidDifficultyExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct AsterMidDifficultyExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "worldLevelVec")]
    pub world_level_vec: Vec<i64>,

    #[serde(rename = "dropId")]
    pub drop_id: i64,

    #[serde(rename = "rewardId")]
    pub reward_id: i64,

    #[serde(rename = "resin")]
    pub resin: i64,

    #[serde(rename = "recommendLevel")]
    pub recommend_level: i64,

    #[serde(rename = "monsterLevel")]
    pub monster_level: i64,
}

pub fn load() -> Result<AsterMidDifficultyExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "AsterMidDifficultyExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
