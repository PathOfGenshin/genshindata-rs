// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type VehicleSkillExcelConfigData = Vec<VehicleSkillExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct VehicleSkillExcelConfigDatum {
    #[serde(rename = "ID")]
    pub id: i64,

    #[serde(rename = "HCBFKDMDJML")]
    pub hcbfkdmdjml: i64,

    #[serde(rename = "DKOLHEPIKIP")]
    pub dkolhepikip: i64,

    #[serde(rename = "abilityName")]
    pub ability_name: String,

    #[serde(rename = "skillIcon")]
    pub skill_icon: String,

    #[serde(rename = "JLEELAEIILI")]
    pub jleelaeiili: f64,

    #[serde(rename = "GLDMKMHNCOB")]
    pub gldmkmhncob: i64,

    #[serde(rename = "lockShape")]
    pub lock_shape: String,

    #[serde(rename = "lockWeightParams")]
    pub lock_weight_params: Vec<f64>,

    #[serde(rename = "globalValueKey")]
    pub global_value_key: String,

    #[serde(rename = "JAHBGMECCAB")]
    pub jahbgmeccab: Option<i64>,

    #[serde(rename = "FFNMHDMHCIM")]
    pub ffnmhdmhcim: Option<i64>,
}

pub fn load() -> Result<VehicleSkillExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "VehicleSkillExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
