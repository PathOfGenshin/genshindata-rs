// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type ActivityPlantFlowerMainExcelConfigData = Vec<ActivityPlantFlowerMainExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ActivityPlantFlowerMainExcelConfigDatum {
    #[serde(rename = "scheduleId")]
    pub schedule_id: i64,

    #[serde(rename = "GFKNIEKBJIC")]
    pub gfkniekbjic: Vec<i64>,

    #[serde(rename = "LFCPMHDOGGC")]
    pub lfcpmhdoggc: Vec<i64>,

    #[serde(rename = "AEBPBILOGEA")]
    pub aebpbilogea: i64,

    #[serde(rename = "rewardPreviewId")]
    pub reward_preview_id: i64,

    #[serde(rename = "HEHKNGOIGNO")]
    pub hehkngoigno: i64,

    #[serde(rename = "JMBFBGNFBIM")]
    pub jmbfbgnfbim: Vec<i64>,

    #[serde(rename = "openQuestId")]
    pub open_quest_id: i64,

    #[serde(rename = "PENPMKHCEHG")]
    pub penpmkhcehg: i64,

    #[serde(rename = "dailyConfigIdList")]
    pub daily_config_id_list: Vec<i64>,
}

pub fn load() -> Result<ActivityPlantFlowerMainExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "ActivityPlantFlowerMainExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
