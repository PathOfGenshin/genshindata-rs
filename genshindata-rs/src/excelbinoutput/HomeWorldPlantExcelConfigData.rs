// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type HomeWorldPlantExcelConfigData = Vec<HomeWorldPlantExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct HomeWorldPlantExcelConfigDatum {
    #[serde(rename = "CCIHBFPKPAJ")]
    pub ccihbfpkpaj: i64,

    #[serde(rename = "FOOECDKHLAI")]
    pub fooecdkhlai: Vec<i64>,

    #[serde(rename = "MANNEMCKEKJ")]
    pub mannemckekj: Option<i64>,

    #[serde(rename = "ALCDLNFMIBJ")]
    pub alcdlnfmibj: Option<i64>,

    #[serde(rename = "dropID")]
    pub drop_id: Option<i64>,

    #[serde(rename = "KNGKBIBIJGH")]
    pub kngkbibijgh: Vec<Kngkbibijgh>,

    #[serde(rename = "HFBPEIDCLLC")]
    pub hfbpeidcllc: i64,

    #[serde(rename = "time")]
    pub time: i64,

    #[serde(rename = "HCFFGJBNGJP")]
    pub hcffgjbngjp: i64,

    #[serde(rename = "KPPPPNBBDPA")]
    pub kppppnbbdpa: i64,

    #[serde(rename = "IMIECFFJCJN")]
    pub imiecffjcjn: i64,

    #[serde(rename = "order")]
    pub order: i64,

    #[serde(rename = "inteeIconName")]
    pub intee_icon_name: InteeIconName,

    #[serde(rename = "LAEEJPEDIGD")]
    pub laeejpedigd: i64,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct Kngkbibijgh {
    #[serde(rename = "MANNEMCKEKJ")]
    pub mannemckekj: Option<i64>,

    #[serde(rename = "ALCDLNFMIBJ")]
    pub alcdlnfmibj: Option<i64>,

    #[serde(rename = "dropID")]
    pub drop_id: Option<i64>,

    #[serde(rename = "weight")]
    pub weight: Option<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum InteeIconName {
    #[serde(rename = "")]
    Empty,

    #[serde(rename = "UI_Icon_Item_GrowFlowers")]
    UiIconItemGrowFlowers,
}

pub fn load() -> Result<HomeWorldPlantExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "HomeWorldPlantExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
