// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type HomeWorldPlantExcelConfigData = Vec<HomeWorldPlantExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct HomeWorldPlantExcelConfigDatum {
    #[serde(rename = "FKODAMIEEIM")]
    pub fkodamieeim: i64,

    #[serde(rename = "DCMGFMHLIMH")]
    pub dcmgfmhlimh: Vec<i64>,

    #[serde(rename = "IODMEBBDFNI")]
    pub iodmebbdfni: Option<i64>,

    #[serde(rename = "OGPPCAFDNII")]
    pub ogppcafdnii: Option<i64>,

    #[serde(rename = "dropID")]
    pub drop_id: Option<i64>,

    #[serde(rename = "BGPLDPBBDNO")]
    pub bgpldpbbdno: Vec<Bgpldpbbdno>,

    #[serde(rename = "ACDKNKLPJEB")]
    pub acdknklpjeb: i64,

    #[serde(rename = "time")]
    pub time: i64,

    #[serde(rename = "EGDGOGKBABI")]
    pub egdgogkbabi: i64,

    #[serde(rename = "KCNKPOJOPEH")]
    pub kcnkpojopeh: i64,

    #[serde(rename = "PKBGOFIEJPG")]
    pub pkbgofiejpg: i64,

    #[serde(rename = "order")]
    pub order: i64,

    #[serde(rename = "inteeIconName")]
    pub intee_icon_name: InteeIconName,

    #[serde(rename = "KKLMDMKDIDI")]
    pub kklmdmkdidi: i64,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct Bgpldpbbdno {
    #[serde(rename = "IODMEBBDFNI")]
    pub iodmebbdfni: Option<i64>,

    #[serde(rename = "OGPPCAFDNII")]
    pub ogppcafdnii: Option<i64>,

    #[serde(rename = "dropID")]
    pub drop_id: Option<i64>,

    #[serde(rename = "weight")]
    pub weight: Option<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum InteeIconName {
    #[serde(rename = "")]
    Empty,

    #[serde(rename = "UI_Icon_Item_GrowFlowers")]
    UiIconItemGrowFlowers,
}

pub fn load() -> Result<HomeWorldPlantExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "HomeWorldPlantExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
