// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type ActivityVintageDataExcelConfigData = Vec<ActivityVintageDataExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ActivityVintageDataExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "activityId")]
    pub activity_id: i64,

    #[serde(rename = "rewardPreviewId")]
    pub reward_preview_id: i64,

    #[serde(rename = "AGFJECOLNIK")]
    pub agfjecolnik: i64,

    #[serde(rename = "NNEPIPPPOEI")]
    pub nnepipppoei: i64,

    #[serde(rename = "CJFPEHLFDNF")]
    pub cjfpehlfdnf: Vec<i64>,

    #[serde(rename = "HPLEMOLGEMD")]
    pub hplemolgemd: i64,

    #[serde(rename = "MHBBBDAIOJI")]
    pub mhbbbdaioji: i64,

    #[serde(rename = "NCGIILIKHAO")]
    pub ncgiilikhao: i64,
}

pub fn load() -> Result<ActivityVintageDataExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "ActivityVintageDataExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
