/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type AvatarExcelConfigData = Vec<AvatarExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct AvatarExcelConfigDatum {
    pub body_type: BodyType,
    pub script_data_path_hash: f64,
    pub icon_name: String,
    pub side_icon_name: String,
    pub quality_type: QualityType,
    pub charge_efficiency: i64,
    #[serde(rename = "CDNKLDCGHFM")]
    pub cdnkldcghfm: f64,
    pub initial_weapon: i64,
    pub weapon_type: WeaponType,
    #[serde(rename = "GFJFGJPCNAI")]
    pub gfjfgjpcnai: f64,
    pub image_name: String,
    pub gacha_card_name_hash: Option<f64>,
    pub manekin_path_hash: Option<f64>,
    pub cutscene_show: String,
    pub skill_depot_id: i64,
    pub stamina_recover_speed: i64,
    pub cand_skill_depot_ids: Vec<i64>,
    pub manekin_json_config_hash: f64,
    pub manekin_motion_config: i64,
    pub desc_text_map_hash: i64,
    pub avatar_identity_type: Option<AvatarIdentityType>,
    pub avatar_promote_id: i64,
    pub avatar_promote_reward_level_list: Vec<i64>,
    pub avatar_promote_reward_id_list: Vec<i64>,
    #[serde(rename = "featureTagGroupID")]
    pub feature_tag_group_id: i64,
    pub info_desc_text_map_hash: i64,
    pub hp_base: f64,
    pub attack_base: f64,
    pub defense_base: f64,
    pub critical: f64,
    pub critical_hurt: f64,
    pub prop_grow_curves: Vec<PropGrowCurve>,
    #[serde(rename = "FAOCLDIEFHD")]
    pub faocldiefhd: f64,
    pub prefab_path_hash: f64,
    pub id: i64,
    pub name_text_map_hash: i64,
    #[serde(rename = "KCANMNBNNED")]
    pub kcanmnbnned: f64,
    pub prefab_path_remote_hash: f64,
    pub controller_path_hash: f64,
    pub controller_path_remote_hash: f64,
    #[serde(rename = "LODPatternName")]
    pub lod_pattern_name: String,
    pub use_type: Option<UseType>,
    pub gacha_image_name_hash: Option<f64>,
    pub coop_pic_name_hash: Option<f64>,
    pub is_range_attack: Option<bool>,
    pub prefab_path_ragdoll_hash: Option<f64>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum AvatarIdentityType {
    #[serde(rename = "AVATAR_IDENTITY_NORMAL")]
    AvatarIdentityNormal,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum BodyType {
    #[serde(rename = "BODY_BOY")]
    BodyBoy,
    #[serde(rename = "BODY_GIRL")]
    BodyGirl,
    #[serde(rename = "BODY_LADY")]
    BodyLady,
    #[serde(rename = "BODY_LOLI")]
    BodyLoli,
    #[serde(rename = "BODY_MALE")]
    BodyMale,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PropGrowCurve {
    #[serde(rename = "type")]
    pub prop_grow_curve_type: Type,
    pub grow_curve: GrowCurve,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum GrowCurve {
    #[serde(rename = "GROW_CURVE_ATTACK_S4")]
    GrowCurveAttackS4,
    #[serde(rename = "GROW_CURVE_ATTACK_S5")]
    GrowCurveAttackS5,
    #[serde(rename = "GROW_CURVE_HP_S4")]
    GrowCurveHpS4,
    #[serde(rename = "GROW_CURVE_HP_S5")]
    GrowCurveHpS5,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Type {
    #[serde(rename = "FIGHT_PROP_BASE_ATTACK")]
    FightPropBaseAttack,
    #[serde(rename = "FIGHT_PROP_BASE_DEFENSE")]
    FightPropBaseDefense,
    #[serde(rename = "FIGHT_PROP_BASE_HP")]
    FightPropBaseHp,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum QualityType {
    #[serde(rename = "QUALITY_ORANGE")]
    QualityOrange,
    #[serde(rename = "QUALITY_ORANGE_SP")]
    QualityOrangeSp,
    #[serde(rename = "QUALITY_PURPLE")]
    QualityPurple,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum UseType {
    #[serde(rename = "AVATAR_ABANDON")]
    AvatarAbandon,
    #[serde(rename = "AVATAR_FORMAL")]
    AvatarFormal,
    #[serde(rename = "AVATAR_SYNC_TEST")]
    AvatarSyncTest,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum WeaponType {
    #[serde(rename = "WEAPON_BOW")]
    WeaponBow,
    #[serde(rename = "WEAPON_CATALYST")]
    WeaponCatalyst,
    #[serde(rename = "WEAPON_CLAYMORE")]
    WeaponClaymore,
    #[serde(rename = "WEAPON_POLE")]
    WeaponPole,
    #[serde(rename = "WEAPON_SWORD_ONE_HAND")]
    WeaponSwordOneHand,
}
