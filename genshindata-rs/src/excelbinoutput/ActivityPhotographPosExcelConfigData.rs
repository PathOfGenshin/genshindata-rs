// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type ActivityPhotographPosExcelConfigData = Vec<ActivityPhotographPosExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ActivityPhotographPosExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "EADIHALBGCN")]
    pub eadihalbgcn: i64,

    #[serde(rename = "KJBIIIBCFOH")]
    pub kjbiiibcfoh: i64,

    #[serde(rename = "PEPCGLDNJMJ")]
    pub pepcgldnjmj: i64,

    #[serde(rename = "PCGNKLKNBNK")]
    pub pcgnklknbnk: i64,

    #[serde(rename = "DIEGNCGGFIO")]
    pub diegncggfio: i64,

    #[serde(rename = "OHFJNJMHIDM")]
    pub ohfjnjmhidm: i64,

    #[serde(rename = "JEIKCJHLNJO")]
    pub jeikcjhlnjo: String,

    #[serde(rename = "LIAPFBGEPLK")]
    pub liapfbgeplk: String,

    #[serde(rename = "HBNCAAICCJF")]
    pub hbncaaiccjf: i64,

    #[serde(rename = "AEMMKBAPJJJ")]
    pub aemmkbapjjj: i64,

    #[serde(rename = "AJBBACFCMJH")]
    pub ajbbacfcmjh: Vec<i64>,

    #[serde(rename = "EFALCKLBAJM")]
    pub efalcklbajm: Vec<i64>,

    #[serde(rename = "openDay")]
    pub open_day: i64,

    #[serde(rename = "watcherId")]
    pub watcher_id: i64,

    #[serde(rename = "galleryId")]
    pub gallery_id: i64,

    #[serde(rename = "MFJHIDNMLOK")]
    pub mfjhidnmlok: i64,

    #[serde(rename = "PKCLFBBHLML")]
    pub pkclfbbhlml: i64,

    #[serde(rename = "MFPIEEDIFCK")]
    pub mfpieedifck: i64,

    #[serde(rename = "NCCMPKEAJMC")]
    pub nccmpkeajmc: i64,

    #[serde(rename = "DFCMIADIBIB")]
    pub dfcmiadibib: Vec<String>,

    #[serde(rename = "ELPDGCKBGEI")]
    pub elpdgckbgei: Vec<String>,

    #[serde(rename = "sceneID")]
    pub scene_id: i64,
}

pub fn load() -> Result<ActivityPhotographPosExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "ActivityPhotographPosExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
