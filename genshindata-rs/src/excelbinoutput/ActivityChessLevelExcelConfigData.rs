// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

extern crate serde_derive;

pub type ActivityChessLevelExcelConfigData = Vec<ActivityChessLevelExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ActivityChessLevelExcelConfigDatum {
    #[serde(rename = "level")]
    pub level: i64,

    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,

    #[serde(rename = "LEOMBPOJCDP")]
    pub leombpojcdp: Option<i64>,

    #[serde(rename = "NKBNCGPPIPH")]
    pub nkbncgppiph: i64,

    #[serde(rename = "HGKCGDOCOGF")]
    pub hgkcgdocogf: i64,

    #[serde(rename = "FIPNOCDEPBE")]
    pub fipnocdepbe: i64,

    #[serde(rename = "JCGINDOIJGO")]
    pub jcgindoijgo: i64,

    #[serde(rename = "OINKCCJEDBL")]
    pub oinkccjedbl: Vec<i64>,

    #[serde(rename = "INMEMDJAKPP")]
    pub inmemdjakpp: i64,

    #[serde(rename = "MKIFMNDAIFE")]
    pub mkifmndaife: Option<bool>,

    #[serde(rename = "PKGHHDNGPNC")]
    pub pkghhdngpnc: bool,

    #[serde(rename = "CGOCJKOCBAC")]
    pub cgocjkocbac: Option<String>,
}

pub fn load() -> Result<ActivityChessLevelExcelConfigData, crate::json::JsonError> {
    let path: std::path::PathBuf = [
        "GenshinData",
        "ExcelBinOutput",
        "ActivityChessLevelExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
