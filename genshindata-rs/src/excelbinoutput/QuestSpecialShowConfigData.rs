// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type QuestSpecialShowConfigData = Vec<QuestSpecialShowConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct QuestSpecialShowConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "condType")]
    pub cond_type: CondType,

    #[serde(rename = "param1")]
    pub param1: i64,

    #[serde(rename = "JDLGEFACKLI")]
    pub jdlgefackli: i64,

    #[serde(rename = "param2")]
    pub param2: Option<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum CondType {
    #[serde(rename = "SPECIAL_SHOW_FINISH")]
    SpecialShowFinish,

    #[serde(rename = "SPECIAL_SHOW_GLOBAL_VALUE_EQUAL_TO")]
    SpecialShowGlobalValueEqualTo,
}

pub fn load() -> Result<QuestSpecialShowConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "QuestSpecialShowConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
