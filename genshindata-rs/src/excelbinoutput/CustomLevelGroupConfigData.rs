// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type CustomLevelGroupConfigData = Vec<CustomLevelGroupConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct CustomLevelGroupConfigDatum {
    #[serde(rename = "groupId")]
    pub group_id: i64,

    #[serde(rename = "dungeonList")]
    pub dungeon_list: Vec<i64>,

    #[serde(rename = "JNKCAMMFJCN")]
    pub jnkcammfjcn: Vec<i64>,

    #[serde(rename = "NCFDFOFFNJG")]
    pub ncfdfoffnjg: i64,

    #[serde(rename = "ONNNALNJDPN")]
    pub onnnalnjdpn: i64,

    #[serde(rename = "JBLMJGNLLAP")]
    pub jblmjgnllap: i64,

    #[serde(rename = "OPIPBMPLKEH")]
    pub opipbmplkeh: i64,

    #[serde(rename = "ACBMGJPJDEB")]
    pub acbmgjpjdeb: i64,

    #[serde(rename = "LAABHMLKGPK")]
    pub laabhmlkgpk: i64,
}

pub fn load() -> Result<CustomLevelGroupConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "CustomLevelGroupConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
