// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

extern crate serde_derive;

pub type BattlePassRewardExcelConfigData = Vec<BattlePassRewardExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct BattlePassRewardExcelConfigDatum {
    #[serde(rename = "indexId")]
    pub index_id: i64,

    #[serde(rename = "level")]
    pub level: i64,

    #[serde(rename = "freeRewardIdList")]
    pub free_reward_id_list: Vec<i64>,

    #[serde(rename = "paidRewardIdList")]
    pub paid_reward_id_list: Vec<i64>,

    #[serde(rename = "showUp")]
    pub show_up: Option<bool>,
}

pub fn load() -> Result<BattlePassRewardExcelConfigData, crate::json::JsonError> {
    let path: std::path::PathBuf = [
        "GenshinData",
        "ExcelBinOutput",
        "BattlePassRewardExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
