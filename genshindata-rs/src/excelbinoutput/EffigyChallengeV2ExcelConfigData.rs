// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type EffigyChallengeV2ExcelConfigData = Vec<EffigyChallengeV2ExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct EffigyChallengeV2ExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "dayIndex")]
    pub day_index: i64,

    #[serde(rename = "IAMCAOJKHFO")]
    pub iamcaojkhfo: i64,

    #[serde(rename = "LOHPPMEBCMB")]
    pub lohppmebcmb: Vec<i64>,

    #[serde(rename = "CEGKLCBNILG")]
    pub cegklcbnilg: Vec<i64>,

    #[serde(rename = "LKPDDLDGGMA")]
    pub lkpddldggma: Vec<i64>,

    #[serde(rename = "OCDGFFCPKNC")]
    pub ocdgffcpknc: String,

    #[serde(rename = "MCAPNCFJDOH")]
    pub mcapncfjdoh: String,

    #[serde(rename = "NOOEBGJCKPI")]
    pub nooebgjckpi: i64,

    #[serde(rename = "MICHDLCINCL")]
    pub michdlcincl: Vec<i64>,

    #[serde(rename = "MCOHEHNMACA")]
    pub mcohehnmaca: Vec<i64>,

    #[serde(rename = "MJHFJGHDIII")]
    pub mjhfjghdiii: Vec<i64>,

    #[serde(rename = "levelTitleTextMapHash")]
    pub level_title_text_map_hash: i64,

    #[serde(rename = "levelDescTextMapHash")]
    pub level_desc_text_map_hash: i64,

    #[serde(rename = "DPCDLBHHODI")]
    pub dpcdlbhhodi: i64,

    #[serde(rename = "ANIJKEBDNGP")]
    pub anijkebdngp: i64,
}

pub fn load() -> Result<EffigyChallengeV2ExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "EffigyChallengeV2ExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
