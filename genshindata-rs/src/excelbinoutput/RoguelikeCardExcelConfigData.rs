// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type RoguelikeCardExcelConfigData = Vec<RoguelikeCardExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct RoguelikeCardExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "sortOrder")]
    pub sort_order: i64,

    #[serde(rename = "type")]
    pub roguelike_card_excel_config_datum_type: Type,

    #[serde(rename = "NBPDNCOMPJE")]
    pub nbpdncompje: Vec<i64>,

    #[serde(rename = "NBJIFPLADEH")]
    pub nbjifpladeh: Vec<String>,

    #[serde(rename = "NGLCNDEDFPP")]
    pub nglcndedfpp: Nglcndedfpp,

    #[serde(rename = "PCLCHHFMJFE")]
    pub pclchhfmjfe: i64,

    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,

    #[serde(rename = "BGGGDLFGFBL")]
    pub bgggdlfgfbl: i64,

    #[serde(rename = "descParamList")]
    pub desc_param_list: Vec<f64>,

    #[serde(rename = "LALPFMKPAGO")]
    pub lalpfmkpago: Vec<bool>,

    #[serde(rename = "BEICEMOLLCP")]
    pub beicemollcp: Vec<f64>,

    #[serde(rename = "FBDDGAPMEDB")]
    pub fbddgapmedb: Option<Fbddgapmedb>,

    #[serde(rename = "KLEGLBEEJHO")]
    pub kleglbeejho: Option<bool>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct Nglcndedfpp {
    #[serde(rename = "effectType")]
    pub effect_type: String,

    #[serde(rename = "OMAMMMMEEGI")]
    pub omammmmeegi: String,

    #[serde(rename = "HDBJHKKLDIE")]
    pub hdbjhkkldie: String,

    #[serde(rename = "NODKPJIOHMC")]
    pub nodkpjiohmc: Option<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Fbddgapmedb {
    #[serde(rename = "ROGUELIKE_CARD_LABEL_EQUIPMENT")]
    RoguelikeCardLabelEquipment,

    #[serde(rename = "ROGUELIKE_CARD_LABEL_LEVEL")]
    RoguelikeCardLabelLevel,

    #[serde(rename = "ROGUELIKE_CARD_LABEL_RUNE")]
    RoguelikeCardLabelRune,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "ROGUELIKE_CARD_TPYE_R")]
    RoguelikeCardTpyeR,

    #[serde(rename = "ROGUELIKE_CARD_TPYE_SR")]
    RoguelikeCardTpyeSr,

    #[serde(rename = "ROGUELIKE_CARD_TPYE_SSR")]
    RoguelikeCardTpyeSsr,
}

pub fn load() -> Result<RoguelikeCardExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "RoguelikeCardExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
