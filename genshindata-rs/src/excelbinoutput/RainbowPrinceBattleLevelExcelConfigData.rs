/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type RainbowPrinceBattleLevelExcelConfigData = Vec<RainbowPrinceBattleLevelExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub struct RainbowPrinceBattleLevelExcelConfigDatum {
    pub lfffnbjldgb: Vec<i64>,
    #[serde(rename = "dungeonID")]
    pub dungeon_id: i64,
    pub nbopkdiphgf: String,
    pub gdkllnaidme: i64,
    pub dpkpiiaocda: i64,
    pub edoijoghjop: Vec<i64>,
    pub kmbmkeknjfh: f64,
    pub epkblgheggh: f64,
    pub pldohlfbaok: f64,
    pub kpfhmbfnodn: i64,
    #[serde(rename = "levelID")]
    pub level_id: i64,
    #[serde(rename = "activityID")]
    pub activity_id: i64,
    #[serde(rename = "nameTextMapHash")]
    pub name_text_map_hash: i64,
    #[serde(rename = "questList")]
    pub quest_list: Vec<i64>,
    pub hbdofodpcfo: Vec<Option<serde_json::Value>>,
    #[serde(rename = "watcherList")]
    pub watcher_list: Vec<i64>,
    #[serde(rename = "openDay")]
    pub open_day: i64,
    pub kjballpjmej: Vec<Kjballpjmej>,
    pub pkbhgfbaicn: Vec<Kjballpjmej>,
    pub ikfkhdjonhh: Vec<String>,
    pub kihkfillpdc: Option<i64>,
    pub hpbgoogmani: Option<bool>,
    pub fecfameondi: Option<i64>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Kjballpjmej {
    #[serde(rename = "ACTIVITY_LEVEL_COND_TYPE_DEFAULT")]
    ActivityLevelCondTypeDefault,
    #[serde(rename = "ACTIVITY_LEVEL_COND_TYPE_MAIN_QUEST")]
    ActivityLevelCondTypeMainQuest,
    #[serde(rename = "ACTIVITY_LEVEL_COND_TYPE_OPEN_DAY")]
    ActivityLevelCondTypeOpenDay,
}
