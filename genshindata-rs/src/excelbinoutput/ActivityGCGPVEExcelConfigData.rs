/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type ActivityGcgpveExcelConfigData = Vec<ActivityGcgpveExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub struct ActivityGcgpveExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,
    #[serde(rename = "scheduleId")]
    pub schedule_id: i64,
    pub kaogloccgnm: Vec<Kaogloccgnm>,
    pub llmhfgfphpk: Vec<Vec<i64>>,
    #[serde(rename = "nameTextMapHash")]
    pub name_text_map_hash: i64,
    #[serde(rename = "scoreLevelList")]
    pub score_level_list: Vec<Option<serde_json::Value>>,
    #[serde(rename = "tabNameTextMapHash")]
    pub tab_name_text_map_hash: i64,
    pub ckmgecmfngd: String,
    pub fdpokcifboe: String,
    pub hnlndpejjii: String,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Kaogloccgnm {
    #[serde(rename = "type")]
    pub kaogloccgnm_type: Type,
    pub id: i64,
    pub base_score: i64,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Type {
    #[serde(rename = "GCG_PVE_TYPE_HARD")]
    GcgPveTypeHard,
    #[serde(rename = "GCG_PVE_TYPE_NORMAL")]
    GcgPveTypeNormal,
    #[serde(rename = "GCG_PVE_TYPE_SIMPLE")]
    GcgPveTypeSimple,
}
