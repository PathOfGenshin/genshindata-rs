// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type BonusActivityClientExcelConfigData = Vec<BonusActivityClientExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct BonusActivityClientExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "bonusActivityType")]
    pub bonus_activity_type: String,

    #[serde(rename = "avatarConfigId")]
    pub avatar_config_id: i64,

    #[serde(rename = "voiceIndexList")]
    pub voice_index_list: Vec<i64>,

    #[serde(rename = "openPlayerLevel")]
    pub open_player_level: i64,

    #[serde(rename = "perfabPath")]
    pub perfab_path: String,

    #[serde(rename = "unlockTipsTextMapHash")]
    pub unlock_tips_text_map_hash: i64,

    #[serde(rename = "questId")]
    pub quest_id: Option<i64>,
}

pub fn load() -> Result<BonusActivityClientExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "BonusActivityClientExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
