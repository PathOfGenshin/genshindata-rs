// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type LunaRitePreviewExcelConfigData = Vec<LunaRitePreviewExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct LunaRitePreviewExcelConfigDatum {
    #[serde(rename = "Id")]
    pub id: i64,

    #[serde(rename = "activityId")]
    pub activity_id: i64,

    #[serde(rename = "BDEIPNAAAIN")]
    pub bdeipnaaain: i64,

    #[serde(rename = "DNGLCJHFLBC")]
    pub dnglcjhflbc: i64,

    #[serde(rename = "unlockPlayerLevel")]
    pub unlock_player_level: i64,

    #[serde(rename = "rewardId")]
    pub reward_id: i64,

    #[serde(rename = "IIHJAPDINJP")]
    pub iihjapdinjp: i64,

    #[serde(rename = "guideQuestId")]
    pub guide_quest_id: i64,

    #[serde(rename = "PHPEGFBIDIK")]
    pub phpegfbidik: i64,

    #[serde(rename = "CMJCMDCHPKO")]
    pub cmjcmdchpko: i64,

    #[serde(rename = "BPFGBFCCDMC")]
    pub bpfgbfccdmc: i64,

    #[serde(rename = "CNACNPIBMMJ")]
    pub cnacnpibmmj: i64,
}

pub fn load() -> Result<LunaRitePreviewExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "LunaRitePreviewExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
