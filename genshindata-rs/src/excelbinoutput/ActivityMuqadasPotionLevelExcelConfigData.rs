// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type ActivityMuqadasPotionLevelExcelConfigData = Vec<ActivityMuqadasPotionLevelExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ActivityMuqadasPotionLevelExcelConfigDatum {
    #[serde(rename = "levelId")]
    pub level_id: i64,

    #[serde(rename = "HGBGJJPDLLJ")]
    pub hgbgjjpdllj: i64,

    #[serde(rename = "dungeonId")]
    pub dungeon_id: i64,

    #[serde(rename = "galleryId")]
    pub gallery_id: i64,

    #[serde(rename = "MOJECJHNMMC")]
    pub mojecjhnmmc: Vec<i64>,

    #[serde(rename = "JMOHICPFFPN")]
    pub jmohicpffpn: i64,

    #[serde(rename = "JCJHGJFJPNO")]
    pub jcjhgjfjpno: i64,

    #[serde(rename = "IFLGLLEHDNL")]
    pub iflgllehdnl: i64,

    #[serde(rename = "NPIIMKJMNOA")]
    pub npiimkjmnoa: String,

    #[serde(rename = "HPBLLFCLIFN")]
    pub hpbllfclifn: String,

    #[serde(rename = "watcherList")]
    pub watcher_list: Vec<i64>,

    #[serde(rename = "BNBOCNMLIIK")]
    pub bnbocnmliik: i64,
}

pub fn load() -> Result<ActivityMuqadasPotionLevelExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "ActivityMuqadasPotionLevelExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
