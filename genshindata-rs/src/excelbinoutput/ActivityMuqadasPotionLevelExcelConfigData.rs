// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type ActivityMuqadasPotionLevelExcelConfigData = Vec<ActivityMuqadasPotionLevelExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ActivityMuqadasPotionLevelExcelConfigDatum {
    #[serde(rename = "levelId")]
    pub level_id: i64,

    #[serde(rename = "PNBNAELKHHN")]
    pub pnbnaelkhhn: i64,

    #[serde(rename = "dungeonId")]
    pub dungeon_id: i64,

    #[serde(rename = "galleryId")]
    pub gallery_id: i64,

    #[serde(rename = "OBAOGFIILAL")]
    pub obaogfiilal: Vec<i64>,

    #[serde(rename = "KNGMNLBDFEG")]
    pub kngmnlbdfeg: i64,

    #[serde(rename = "FLFLCLPEFAP")]
    pub flflclpefap: i64,

    #[serde(rename = "DCHPDLPJDMO")]
    pub dchpdlpjdmo: i64,

    #[serde(rename = "NGGNGFKLKLK")]
    pub nggngfklklk: String,

    #[serde(rename = "EAHOBEPFHGF")]
    pub eahobepfhgf: String,

    #[serde(rename = "watcherList")]
    pub watcher_list: Vec<i64>,

    #[serde(rename = "AINMCNEABOF")]
    pub ainmcneabof: i64,
}

pub fn load() -> Result<ActivityMuqadasPotionLevelExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "ActivityMuqadasPotionLevelExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
