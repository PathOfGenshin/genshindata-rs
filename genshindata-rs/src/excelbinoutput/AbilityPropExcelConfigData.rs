// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type AbilityPropExcelConfigData = Vec<AbilityPropExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct AbilityPropExcelConfigDatum {
    #[serde(rename = "propName")]
    pub prop_name: String,

    #[serde(rename = "overallMin")]
    pub overall_min: Option<f64>,

    #[serde(rename = "overallMax")]
    pub overall_max: Option<f64>,

    #[serde(rename = "limitTagMin")]
    pub limit_tag_min: Option<f64>,

    #[serde(rename = "limitTagMax")]
    pub limit_tag_max: Option<f64>,

    #[serde(rename = "succeedOwner")]
    pub succeed_owner: Option<bool>,
}

pub fn load() -> Result<AbilityPropExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "AbilityPropExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
