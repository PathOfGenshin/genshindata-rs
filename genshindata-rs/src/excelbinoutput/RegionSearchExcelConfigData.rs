// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

extern crate serde_derive;

pub type RegionSearchExcelConfigData = Vec<RegionSearchExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct RegionSearchExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "searchNameTextMapHash")]
    pub search_name_text_map_hash: i64,

    #[serde(rename = "searchDescTextMapHash")]
    pub search_desc_text_map_hash: i64,

    #[serde(rename = "searchCompleteTextMapHash")]
    pub search_complete_text_map_hash: i64,

    #[serde(rename = "tutorialId")]
    pub tutorial_id: i64,

    #[serde(rename = "markIconTypeName")]
    pub mark_icon_type_name: String,

    #[serde(rename = "searchType")]
    pub search_type: String,

    #[serde(rename = "searchGroupId")]
    pub search_group_id: i64,

    #[serde(rename = "reviseLevel")]
    pub revise_level: i64,

    #[serde(rename = "abilityGroup")]
    pub ability_group: String,
}

pub fn load() -> Result<RegionSearchExcelConfigData, crate::json::JsonError> {
    let path: std::path::PathBuf = [
        "GenshinData",
        "ExcelBinOutput",
        "RegionSearchExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
