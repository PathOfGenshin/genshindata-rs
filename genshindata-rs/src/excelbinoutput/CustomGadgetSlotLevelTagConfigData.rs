// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type CustomGadgetSlotLevelTagConfigData = Vec<CustomGadgetSlotLevelTagConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct CustomGadgetSlotLevelTagConfigDatum {
    #[serde(rename = "ID")]
    pub id: i64,

    #[serde(rename = "APAJHCPLIDH")]
    pub apajhcplidh: String,

    #[serde(rename = "FABJHLKHPKP")]
    pub fabjhlkhpkp: Vec<Fabjhlkhpkp>,

    #[serde(rename = "JOEAGBLELBH")]
    pub joeagblelbh: i64,

    #[serde(rename = "BDHGFFMKPGA")]
    pub bdhgffmkpga: i64,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct Fabjhlkhpkp {
    #[serde(rename = "GNIFLIDPGKF")]
    pub gniflidpgkf: Gniflidpgkf,

    #[serde(rename = "MGAHBNIODNB")]
    pub mgahbniodnb: Vec<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Gniflidpgkf {
    #[serde(rename = "")]
    Empty,

    #[serde(rename = "LeftHill")]
    LeftHill,

    #[serde(rename = "RightHill")]
    RightHill,
}

pub fn load() -> Result<CustomGadgetSlotLevelTagConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "CustomGadgetSlotLevelTagConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
