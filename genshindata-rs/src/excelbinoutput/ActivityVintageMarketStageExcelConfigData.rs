// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type ActivityVintageMarketStageExcelConfigData = Vec<ActivityVintageMarketStageExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ActivityVintageMarketStageExcelConfigDatum {
    #[serde(rename = "stageID")]
    pub stage_id: i64,

    #[serde(rename = "DKKCADEFAHL")]
    pub dkkcadefahl: i64,

    #[serde(rename = "openDay")]
    pub open_day: i64,

    #[serde(rename = "EDCKBJHPJKJ")]
    pub edckbjhpjkj: i64,

    #[serde(rename = "NMOMEFMKMBL")]
    pub nmomefmkmbl: i64,

    #[serde(rename = "GJJCMCKDPJK")]
    pub gjjcmckdpjk: i64,

    #[serde(rename = "watcherList")]
    pub watcher_list: Vec<i64>,

    #[serde(rename = "FHNGAAFKLBB")]
    pub fhngaafklbb: i64,

    #[serde(rename = "ABCBOPFHNNH")]
    pub abcbopfhnnh: i64,

    #[serde(rename = "PNKCOGHFMDJ")]
    pub pnkcoghfmdj: Option<i64>,
}

pub fn load() -> Result<ActivityVintageMarketStageExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "ActivityVintageMarketStageExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
