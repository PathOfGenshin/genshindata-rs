// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type ActivityVintageMarketStageExcelConfigData = Vec<ActivityVintageMarketStageExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ActivityVintageMarketStageExcelConfigDatum {
    #[serde(rename = "stageID")]
    pub stage_id: i64,

    #[serde(rename = "IEENLKHBKEP")]
    pub ieenlkhbkep: i64,

    #[serde(rename = "openDay")]
    pub open_day: i64,

    #[serde(rename = "CFOCHCKNFFI")]
    pub cfochcknffi: i64,

    #[serde(rename = "CBPGAEHKGHD")]
    pub cbpgaehkghd: i64,

    #[serde(rename = "AKLCNLDLPCK")]
    pub aklcnldlpck: i64,

    #[serde(rename = "watcherList")]
    pub watcher_list: Vec<i64>,

    #[serde(rename = "CHAIPBNBNHH")]
    pub chaipbnbnhh: i64,

    #[serde(rename = "BGLKMDANKLI")]
    pub bglkmdankli: i64,

    #[serde(rename = "GHJGGFLLFDG")]
    pub ghjggfllfdg: Option<i64>,
}

pub fn load() -> Result<ActivityVintageMarketStageExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "ActivityVintageMarketStageExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
