// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type BartenderFormulaExcelConfigData = Vec<BartenderFormulaExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct BartenderFormulaExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "NIBPGIPPALH")]
    pub nibpgippalh: Vec<Dopapfgemhj>,

    #[serde(rename = "DOPAPFGEMHJ")]
    pub dopapfgemhj: Vec<Dopapfgemhj>,

    #[serde(rename = "OCLJBLAKEGC")]
    pub ocljblakegc: Vec<i64>,

    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,

    #[serde(rename = "nameTextMapHash")]
    pub name_text_map_hash: i64,

    #[serde(rename = "OEJBJHCJLEO")]
    pub oejbjhcjleo: Option<i64>,

    #[serde(rename = "JICEKLFMFJJ")]
    pub jiceklfmfjj: Option<i64>,

    #[serde(rename = "MFKAFLLHJJC")]
    pub mfkafllhjjc: i64,

    #[serde(rename = "NAJCIDLEJND")]
    pub najcidlejnd: Option<Najcidlejnd>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct Dopapfgemhj {
    #[serde(rename = "id")]
    pub id: Option<i64>,

    #[serde(rename = "count")]
    pub count: Option<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Najcidlejnd {
    #[serde(rename = "HEAVY")]
    Heavy,

    #[serde(rename = "MIDDLE")]
    Middle,
}

pub fn load() -> Result<BartenderFormulaExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "BartenderFormulaExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
