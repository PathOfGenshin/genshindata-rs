/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type BartenderFormulaExcelConfigData = Vec<BartenderFormulaExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub struct BartenderFormulaExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,
    pub ifchnichcim: Vec<Cejcjnlkfmp>,
    pub cejcjnlkfmp: Vec<Cejcjnlkfmp>,
    pub oopgijlabeb: Vec<i64>,
    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,
    #[serde(rename = "nameTextMapHash")]
    pub name_text_map_hash: i64,
    pub jdjhglgfhmc: Option<i64>,
    pub blbamojfnoa: Option<i64>,
    pub haieldoonee: i64,
    pub kjmefnkmelm: Option<Kjmefnkmelm>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct Cejcjnlkfmp {
    pub id: Option<i64>,
    pub count: Option<i64>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub enum Kjmefnkmelm {
    #[serde(rename = "HEAVY")]
    Heavy,
    #[serde(rename = "MIDDLE")]
    Middle,
}
