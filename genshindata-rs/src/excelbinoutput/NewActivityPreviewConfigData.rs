/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type NewActivityPreviewConfigData = Vec<NewActivityPreviewConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub struct NewActivityPreviewConfigDatum {
    #[serde(rename = "activityID")]
    pub activity_id: i64,
    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,
    pub kimildkpgka: i64,
    pub ldoogpmccpk: i64,
    #[serde(rename = "rewardPreviewID")]
    pub reward_preview_id: Option<i64>,
    pub oadaokpaama: Option<i64>,
    pub cgkcjplojip: Vec<i64>,
    pub menkhbgfhmm: Vec<i64>,
    pub iahdjagimci: Option<i64>,
    #[serde(rename = "pushTipsID")]
    pub push_tips_id: Option<i64>,
    pub aahhgnmhhmf: Vec<i64>,
    pub ddhlgefpkmb: Vec<i64>,
    pub piokphhbbmh: Vec<i64>,
    pub opmcjfdpdcp: Vec<Opmcjfdpdcp>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct Opmcjfdpdcp {
    pub desc: Desc,
    #[serde(rename = "DCFGEHHLAMN")]
    pub dcfgehhlamn: Option<i64>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Desc {
    #[serde(rename = "")]
    Empty,
    #[serde(rename = "UI_ACTIVITY_CHASM_CHALLENGE_PRECOND")]
    UiActivityChasmChallengePrecond,
}
