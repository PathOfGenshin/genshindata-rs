/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type NewActivityPreviewConfigData = Vec<NewActivityPreviewConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub struct NewActivityPreviewConfigDatum {
    #[serde(rename = "activityID")]
    pub activity_id: i64,
    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,
    pub nllhilhhjpl: i64,
    pub eciippbheoj: i64,
    #[serde(rename = "rewardPreviewID")]
    pub reward_preview_id: Option<i64>,
    pub hjmmkfilclg: Option<i64>,
    pub akifghekdmo: Vec<i64>,
    pub cadjdgmdenf: Vec<i64>,
    pub kkkenochkmn: Option<i64>,
    #[serde(rename = "pushTipsID")]
    pub push_tips_id: Option<i64>,
    pub cpjalgenffj: Vec<i64>,
    pub ignpmijllpf: Vec<i64>,
    pub hnhofolcmcb: Vec<i64>,
    pub mekoipojncf: Vec<Mekoipojncf>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct Mekoipojncf {
    pub desc: Desc,
    #[serde(rename = "MHEFAJHODHL")]
    pub mhefajhodhl: Option<i64>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Desc {
    #[serde(rename = "")]
    Empty,
    #[serde(rename = "UI_ACTIVITY_CHASM_CHALLENGE_PRECOND")]
    UiActivityChasmChallengePrecond,
}
