// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type FishPoolExcelConfigData = Vec<FishPoolExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct FishPoolExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "stockList")]
    pub stock_list: Vec<i64>,

    #[serde(rename = "stockGuarantee")]
    pub stock_guarantee: StockGuarantee,

    #[serde(rename = "stockLimitList")]
    pub stock_limit_list: Vec<StockLimitList>,

    #[serde(rename = "maxNum")]
    pub max_num: i64,

    #[serde(rename = "poolNameTextMapHash")]
    pub pool_name_text_map_hash: i64,

    #[serde(rename = "poolDescTextMapHash")]
    pub pool_desc_text_map_hash: i64,

    #[serde(rename = "abilityGroup")]
    pub ability_group: AbilityGroup,

    #[serde(rename = "teamAbilityGroup")]
    pub team_ability_group: TeamAbilityGroup,

    #[serde(rename = "dropIdList")]
    pub drop_id_list: Vec<i64>,

    #[serde(rename = "excludeFish")]
    pub exclude_fish: Vec<i64>,

    #[serde(rename = "dailyLimitNum")]
    pub daily_limit_num: Option<i64>,

    #[serde(rename = "cityId")]
    pub city_id: Option<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct StockGuarantee {
    #[serde(rename = "1000023")]
    pub the_1000023: Option<i64>,

    #[serde(rename = "1000043")]
    pub the_1000043: Option<i64>,

    #[serde(rename = "1000053")]
    pub the_1000053: Option<i64>,

    #[serde(rename = "13")]
    pub the_13: Option<i64>,

    #[serde(rename = "23")]
    pub the_23: Option<i64>,

    #[serde(rename = "33")]
    pub the_33: Option<i64>,

    #[serde(rename = "43")]
    pub the_43: Option<i64>,

    #[serde(rename = "53")]
    pub the_53: Option<i64>,

    #[serde(rename = "63")]
    pub the_63: Option<i64>,

    #[serde(rename = "73")]
    pub the_73: Option<i64>,

    #[serde(rename = "83")]
    pub the_83: Option<i64>,

    #[serde(rename = "93")]
    pub the_93: Option<i64>,

    #[serde(rename = "103")]
    pub the_103: Option<i64>,

    #[serde(rename = "113")]
    pub the_113: Option<i64>,

    #[serde(rename = "123")]
    pub the_123: Option<i64>,

    #[serde(rename = "133")]
    pub the_133: Option<i64>,

    #[serde(rename = "143")]
    pub the_143: Option<i64>,

    #[serde(rename = "153")]
    pub the_153: Option<i64>,

    #[serde(rename = "163")]
    pub the_163: Option<i64>,

    #[serde(rename = "173")]
    pub the_173: Option<i64>,

    #[serde(rename = "183")]
    pub the_183: Option<i64>,

    #[serde(rename = "193")]
    pub the_193: Option<i64>,

    #[serde(rename = "203")]
    pub the_203: Option<i64>,

    #[serde(rename = "213")]
    pub the_213: Option<i64>,

    #[serde(rename = "223")]
    pub the_223: Option<i64>,

    #[serde(rename = "233")]
    pub the_233: Option<i64>,

    #[serde(rename = "243")]
    pub the_243: Option<i64>,

    #[serde(rename = "253")]
    pub the_253: Option<i64>,

    #[serde(rename = "263")]
    pub the_263: Option<i64>,

    #[serde(rename = "273")]
    pub the_273: Option<i64>,

    #[serde(rename = "283")]
    pub the_283: Option<i64>,

    #[serde(rename = "293")]
    pub the_293: Option<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct StockLimitList {
    #[serde(rename = "CIHEEACIANH")]
    pub ciheeacianh: Option<Ciheeacianh>,

    #[serde(rename = "BFIAMFPKLEA")]
    pub bfiamfpklea: Option<i64>,

    #[serde(rename = "HMLJLKCJEBH")]
    pub hmljlkcjebh: Option<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum AbilityGroup {
    #[serde(rename = "Avatar_Fishing")]
    AvatarFishing,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Ciheeacianh {
    #[serde(rename = "FISH_STOCK_TYPE_ANY")]
    FishStockTypeAny,

    #[serde(rename = "FISH_STOCK_TYPE_DAY")]
    FishStockTypeDay,

    #[serde(rename = "FISH_STOCK_TYPE_NIGHT")]
    FishStockTypeNight,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum TeamAbilityGroup {
    #[serde(rename = "Avatar_Fishing_OnTeam")]
    AvatarFishingOnTeam,
}

pub fn load() -> Result<FishPoolExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "FishPoolExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
