// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type FireworksExcelConfigData = Vec<FireworksExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct FireworksExcelConfigDatum {
    #[serde(rename = "materialID")]
    pub material_id: i64,

    #[serde(rename = "BPOCCFNLKLF")]
    pub bpoccfnlklf: Vec<Bpoccfnlklf>,

    #[serde(rename = "POAIECELNBI")]
    pub poaiecelnbi: Poaiecelnbi,

    #[serde(rename = "NFLMNDPKKBK")]
    pub nflmndpkkbk: Nflmndpkkbk,

    #[serde(rename = "BNBKFBBFCFD")]
    pub bnbkfbbfcfd: Vec<String>,

    #[serde(rename = "BDFIFBFOEOG")]
    pub bdfifbfoeog: i64,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct Bpoccfnlklf {
    #[serde(rename = "type")]
    pub bpoccfnlklf_type: Type,

    #[serde(rename = "CEFKFOBDEEK")]
    pub cefkfobdeek: i64,

    #[serde(rename = "JLFFBIENKNG")]
    pub jlffbienkng: Option<bool>,

    #[serde(rename = "PBLDJLKOLII")]
    pub pbldjlkolii: Vec<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "FIREWORKS_REFORM_PARAM_COLOR")]
    FireworksReformParamColor,

    #[serde(rename = "FIREWORKS_REFORM_PARAM_DENSITY")]
    FireworksReformParamDensity,

    #[serde(rename = "FIREWORKS_REFORM_PARAM_HEIGHT")]
    FireworksReformParamHeight,

    #[serde(rename = "FIREWORKS_REFORM_PARAM_ROTATION")]
    FireworksReformParamRotation,

    #[serde(rename = "FIREWORKS_REFORM_PARAM_SIZE")]
    FireworksReformParamSize,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Nflmndpkkbk {
    #[serde(rename = "Eff_SceneObj_Fireworks_Bullet")]
    EffSceneObjFireworksBullet,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Poaiecelnbi {
    #[serde(rename = "PatternShapeFireworks")]
    PatternShapeFireworks,

    #[serde(rename = "SphericalFireworks")]
    SphericalFireworks,
}

pub fn load() -> Result<FireworksExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "FireworksExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
