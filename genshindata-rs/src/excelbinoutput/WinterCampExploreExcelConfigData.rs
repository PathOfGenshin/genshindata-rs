// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type WinterCampExploreExcelConfigData = Vec<WinterCampExploreExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct WinterCampExploreExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "openDay")]
    pub open_day: i64,

    #[serde(rename = "priority")]
    pub priority: i64,

    #[serde(rename = "groupID")]
    pub group_id: i64,

    #[serde(rename = "JICEOLNKCME")]
    pub jiceolnkcme: i64,

    #[serde(rename = "rewardID")]
    pub reward_id: i64,

    #[serde(rename = "LAIAOGNBPCD")]
    pub laiaognbpcd: Vec<Laiaognbpcd>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct Laiaognbpcd {
    #[serde(rename = "dropId")]
    pub drop_id: Vec<i64>,
}

pub fn load() -> Result<WinterCampExploreExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "WinterCampExploreExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
