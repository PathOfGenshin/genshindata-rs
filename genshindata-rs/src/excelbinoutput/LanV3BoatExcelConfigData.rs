// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type LanV3BoatExcelConfigData = Vec<LanV3BoatExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct LanV3BoatExcelConfigDatum {
    #[serde(rename = "MKJGNABNEGM")]
    pub mkjgnabnegm: i64,

    #[serde(rename = "type")]
    pub lan_v3_boat_excel_config_datum_type: String,

    #[serde(rename = "galleryId")]
    pub gallery_id: i64,

    #[serde(rename = "controlGroupId")]
    pub control_group_id: i64,

    #[serde(rename = "prepareTime")]
    pub prepare_time: i64,

    #[serde(rename = "JMPFFNKONOA")]
    pub jmpffnkonoa: i64,

    #[serde(rename = "CIAJAOCFJLD")]
    pub ciajaocfjld: i64,

    #[serde(rename = "OLEBPGMJGCI")]
    pub olebpgmjgci: i64,

    #[serde(rename = "FBBLEKAPMOJ")]
    pub fbblekapmoj: i64,

    #[serde(rename = "CFMGAIJJPLK")]
    pub cfmgaijjplk: i64,

    #[serde(rename = "limitRegion")]
    pub limit_region: String,

    #[serde(rename = "OJDAMPBAHGM")]
    pub ojdampbahgm: Vec<i64>,

    #[serde(rename = "GCJPDBIJLCN")]
    pub gcjpdbijlcn: Vec<i64>,

    #[serde(rename = "KDDOAECINIK")]
    pub kddoaecinik: Vec<i64>,

    #[serde(rename = "HJEBLNBAOIE")]
    pub hjeblnbaoie: Option<f64>,
}

pub fn load() -> Result<LanV3BoatExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "LanV3BoatExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
