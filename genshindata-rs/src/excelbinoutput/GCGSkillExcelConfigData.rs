// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type GcgSkillExcelConfigData = Vec<GcgSkillExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct GcgSkillExcelConfigDatum {
    #[serde(rename = "Id")]
    pub id: i64,

    #[serde(rename = "nameTextMapHash")]
    pub name_text_map_hash: i64,

    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,

    #[serde(rename = "LNOFAAGANLL")]
    pub lnofaaganll: String,

    #[serde(rename = "MOAPENOOOCA")]
    pub moapenoooca: String,

    #[serde(rename = "LCBLPJKOJHA")]
    pub lcblpjkojha: String,

    #[serde(rename = "JDBGABOANGP")]
    pub jdbgaboangp: Vec<Jdbgaboangp>,

    #[serde(rename = "EKIKMPBOGOH")]
    pub ekikmpbogoh: Vec<Ekikmpbogoh>,

    #[serde(rename = "MNFKDMFCFLN")]
    pub mnfkdmfcfln: Option<Mnfkdmfcfln>,

    #[serde(rename = "GCAAGFNKLAN")]
    pub gcaagfnklan: Option<i64>,

    #[serde(rename = "MEDMDEBGOKG")]
    pub medmdebgokg: Option<i64>,

    #[serde(rename = "CFACMKDBJKA")]
    pub cfacmkdbjka: Option<i64>,

    #[serde(rename = "EGILPGBBIPO")]
    pub egilpgbbipo: Option<f64>,

    #[serde(rename = "DAHPCOIBAAN")]
    pub dahpcoibaan: Option<bool>,

    #[serde(rename = "isHidden")]
    pub is_hidden: Option<bool>,

    #[serde(rename = "LHEEECLKKMJ")]
    pub lheeeclkkmj: Option<bool>,

    #[serde(rename = "LOLPGKPEMKI")]
    pub lolpgkpemki: Option<bool>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct Jdbgaboangp {
    #[serde(rename = "OHFMGCCFDLD")]
    pub ohfmgccfdld: Option<Ohfmgccfdld>,

    #[serde(rename = "count")]
    pub count: Option<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Ekikmpbogoh {
    #[serde(rename = "GCG_SKILL_TAG_A")]
    GcgSkillTagA,

    #[serde(rename = "GCG_SKILL_TAG_E")]
    GcgSkillTagE,

    #[serde(rename = "GCG_SKILL_TAG_NONE")]
    GcgSkillTagNone,

    #[serde(rename = "GCG_SKILL_TAG_PASSIVE")]
    GcgSkillTagPassive,

    #[serde(rename = "GCG_SKILL_TAG_Q")]
    GcgSkillTagQ,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Ohfmgccfdld {
    #[serde(rename = "GCG_COST_DICE_ANEMO")]
    GcgCostDiceAnemo,

    #[serde(rename = "GCG_COST_DICE_CRYO")]
    GcgCostDiceCryo,

    #[serde(rename = "GCG_COST_DICE_DENDRO")]
    GcgCostDiceDendro,

    #[serde(rename = "GCG_COST_DICE_ELECTRO")]
    GcgCostDiceElectro,

    #[serde(rename = "GCG_COST_DICE_GEO")]
    GcgCostDiceGeo,

    #[serde(rename = "GCG_COST_DICE_HYDRO")]
    GcgCostDiceHydro,

    #[serde(rename = "GCG_COST_DICE_PYRO")]
    GcgCostDicePyro,

    #[serde(rename = "GCG_COST_DICE_SAME")]
    GcgCostDiceSame,

    #[serde(rename = "GCG_COST_DICE_VOID")]
    GcgCostDiceVoid,

    #[serde(rename = "GCG_COST_ENERGY")]
    GcgCostEnergy,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Mnfkdmfcfln {
    #[serde(rename = "OnBannerShow")]
    OnBannerShow,

    #[serde(rename = "OnBehaviorStart")]
    OnBehaviorStart,

    #[serde(rename = "OnHitLanded")]
    OnHitLanded,
}

pub fn load() -> Result<GcgSkillExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "GCGSkillExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
