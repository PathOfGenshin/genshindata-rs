// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type ActivitySummerTimeRaceExcelConfigData = Vec<ActivitySummerTimeRaceExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ActivitySummerTimeRaceExcelConfigDatum {
    #[serde(rename = "Id")]
    pub id: i64,

    #[serde(rename = "IJODMBEMHAK")]
    pub ijodmbemhak: Vec<i64>,

    #[serde(rename = "GGPIBIDFJHP")]
    pub ggpibidfjhp: Vec<f64>,

    #[serde(rename = "PONJJEFEACB")]
    pub ponjjefeacb: Vec<i64>,

    #[serde(rename = "levelTitleTextMapHash")]
    pub level_title_text_map_hash: i64,

    #[serde(rename = "DAHMLDJKJAJ")]
    pub dahmldjkjaj: i64,

    #[serde(rename = "EKHFIJPNNEA")]
    pub ekhfijpnnea: i64,

    #[serde(rename = "IMIABPNNGGL")]
    pub imiabpnnggl: i64,

    #[serde(rename = "IAAOMFPABMJ")]
    pub iaaomfpabmj: i64,

    #[serde(rename = "JMEIFIAFEBL")]
    pub jmeifiafebl: i64,
}

pub fn load() -> Result<ActivitySummerTimeRaceExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "ActivitySummerTimeRaceExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
