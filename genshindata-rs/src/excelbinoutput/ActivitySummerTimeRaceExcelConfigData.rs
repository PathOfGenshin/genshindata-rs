// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type ActivitySummerTimeRaceExcelConfigData = Vec<ActivitySummerTimeRaceExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ActivitySummerTimeRaceExcelConfigDatum {
    #[serde(rename = "Id")]
    pub id: i64,

    #[serde(rename = "IDPEHDOBMKA")]
    pub idpehdobmka: Vec<i64>,

    #[serde(rename = "EGFKILFKCJB")]
    pub egfkilfkcjb: Vec<f64>,

    #[serde(rename = "ICAMKENKPFJ")]
    pub icamkenkpfj: Vec<i64>,

    #[serde(rename = "levelTitleTextMapHash")]
    pub level_title_text_map_hash: i64,

    #[serde(rename = "DMLBFPHOADL")]
    pub dmlbfphoadl: i64,

    #[serde(rename = "LJODAJCOPGL")]
    pub ljodajcopgl: i64,

    #[serde(rename = "PNAFJCGHKBC")]
    pub pnafjcghkbc: i64,

    #[serde(rename = "MKPJPMMOEML")]
    pub mkpjpmmoeml: i64,

    #[serde(rename = "FNKLCMEIFNP")]
    pub fnklcmeifnp: i64,
}

pub fn load() -> Result<ActivitySummerTimeRaceExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "ActivitySummerTimeRaceExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
