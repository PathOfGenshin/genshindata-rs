/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type WorldAreaConfigData = Vec<WorldAreaConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "PascalCase")]
pub struct WorldAreaConfigDatum {
    #[serde(rename = "ID")]
    pub id: i64,
    #[serde(rename = "SceneID")]
    pub scene_id: i64,
    pub area_type: AreaType,
    #[serde(rename = "AreaID1")]
    pub area_id1: i64,
    pub area_name_text_map_hash: i64,
    #[serde(rename = "towerPointId")]
    pub tower_point_id: Option<i64>,
    #[serde(rename = "elementType")]
    pub element_type: Option<ElementType>,
    #[serde(rename = "showTips")]
    pub show_tips: Option<bool>,
    #[serde(rename = "AFJBGJMOEJM")]
    pub afjbgjmoejm: Vec<i64>,
    #[serde(rename = "OPBKHJAJDFE")]
    pub opbkhjajdfe: Vec<f64>,
    #[serde(rename = "FNBNGCDONIC")]
    pub fnbngcdonic: Vec<f64>,
    #[serde(rename = "minimapScale")]
    pub minimap_scale: i64,
    #[serde(rename = "AreaID2")]
    pub area_id2: Option<i64>,
    #[serde(rename = "terrainType")]
    pub terrain_type: Option<TerrainType>,
    pub area_default_lock: Option<bool>,
    pub grey_level: Option<bool>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum AreaType {
    #[serde(rename = "LEVEL_1")]
    Level1,
    #[serde(rename = "LEVEL_2")]
    Level2,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub enum ElementType {
    Electric,
    Grass,
    Rock,
    Wind,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum TerrainType {
    #[serde(rename = "AREA_TERRAIN_CITY")]
    AreaTerrainCity,
    #[serde(rename = "AREA_TERRAIN_OUTDOOR")]
    AreaTerrainOutdoor,
}
