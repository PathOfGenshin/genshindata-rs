/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};
use std::collections::HashMap;

pub type EnvAnimalWeightExcelConfigData = Vec<EnvAnimalWeightExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EnvAnimalWeightExcelConfigDatum {
    pub env_type: String,
    pub weight_vec: Vec<WeightVec>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct WeightVec {
    pub animal_id: Option<i64>,
    pub entity_type: Option<EntityType>,
    pub weight: Option<i64>,
    pub alive_hour_map: HashMap<String, i64>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub enum EntityType {
    Gadget,
    Monster,
}
