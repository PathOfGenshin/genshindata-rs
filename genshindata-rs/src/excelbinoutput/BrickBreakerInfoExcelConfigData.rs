// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type BrickBreakerInfoExcelConfigData = Vec<BrickBreakerInfoExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct BrickBreakerInfoExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "PJLLLKJMLFD")]
    pub pjlllkjmlfd: i64,

    #[serde(rename = "GMDKLFLGGHB")]
    pub gmdklflgghb: i64,

    #[serde(rename = "levelIconHash")]
    pub level_icon_hash: i64,

    #[serde(rename = "MCCPMCOBPGL")]
    pub mccpmcobpgl: i64,
}

pub fn load() -> Result<BrickBreakerInfoExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "BrickBreakerInfoExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
