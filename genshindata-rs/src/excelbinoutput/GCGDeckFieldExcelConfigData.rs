// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type GcgDeckFieldExcelConfigData = Vec<GcgDeckFieldExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct GcgDeckFieldExcelConfigDatum {
    #[serde(rename = "itemId")]
    pub item_id: i64,

    #[serde(rename = "nameTextMapHash")]
    pub name_text_map_hash: i64,

    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,

    #[serde(rename = "KPINCGJPICF")]
    pub kpincgjpicf: i64,

    #[serde(rename = "order")]
    pub order: i64,

    #[serde(rename = "BDFNKMJCNBF")]
    pub bdfnkmjcnbf: i64,

    #[serde(rename = "IPIBEODHCMM")]
    pub ipibeodhcmm: String,

    #[serde(rename = "BICINJPEBOM")]
    pub bicinjpebom: i64,

    #[serde(rename = "DENLMICDELF")]
    pub denlmicdelf: i64,

    #[serde(rename = "ENNAEGIECEN")]
    pub ennaegiecen: Vec<String>,

    #[serde(rename = "AEPIJOEMFKG")]
    pub aepijoemfkg: Vec<String>,

    #[serde(rename = "NCOFAOIKAAO")]
    pub ncofaoikaao: Vec<String>,

    #[serde(rename = "OMEIFIALNAH")]
    pub omeifialnah: String,

    #[serde(rename = "EKIEJHJGDHJ")]
    pub ekiejhjgdhj: String,

    #[serde(rename = "MFCNIONLJGE")]
    pub mfcnionljge: String,

    #[serde(rename = "id")]
    pub id: Option<i64>,
}

pub fn load() -> Result<GcgDeckFieldExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "GCGDeckFieldExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
