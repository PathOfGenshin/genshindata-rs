// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type CookBonusExcelConfigData = Vec<CookBonusExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct CookBonusExcelConfigDatum {
    #[serde(rename = "avatarId")]
    pub avatar_id: i64,

    #[serde(rename = "recipeId")]
    pub recipe_id: i64,

    #[serde(rename = "bonusType")]
    pub bonus_type: BonusType,

    #[serde(rename = "paramVec")]
    pub param_vec: Vec<i64>,

    #[serde(rename = "complexParamVec")]
    pub complex_param_vec: Vec<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum BonusType {
    #[serde(rename = "COOK_BONUS_REPLACE")]
    CookBonusReplace,
}

pub fn load() -> Result<CookBonusExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "CookBonusExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
