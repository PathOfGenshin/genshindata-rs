// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type ActivityCrystalLinkCondBuffExcelConfigData = Vec<ActivityCrystalLinkCondBuffExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ActivityCrystalLinkCondBuffExcelConfigDatum {
    #[serde(rename = "buffId")]
    pub buff_id: i64,

    #[serde(rename = "BAJIHJHAKCG")]
    pub bajihjhakcg: String,

    #[serde(rename = "abilityName")]
    pub ability_name: String,

    #[serde(rename = "KFFAOOFGOFJ")]
    pub kffaoofgofj: i64,

    #[serde(rename = "JHMABOBCAAP")]
    pub jhmabobcaap: i64,

    #[serde(rename = "IJFLOIFAJHH")]
    pub ijfloifajhh: i64,

    #[serde(rename = "IKBNJBMNEED")]
    pub ikbnjbmneed: Vec<String>,
}

pub fn load() -> Result<ActivityCrystalLinkCondBuffExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "ActivityCrystalLinkCondBuffExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
