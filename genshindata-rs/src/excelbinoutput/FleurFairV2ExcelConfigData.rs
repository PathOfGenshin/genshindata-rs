// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type FleurFairV2ExcelConfigData = Vec<FleurFairV2ExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct FleurFairV2ExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "activityId")]
    pub activity_id: i64,

    #[serde(rename = "KDPBAAHFJJG")]
    pub kdpbaahfjjg: i64,

    #[serde(rename = "CIFDMGICKDM")]
    pub cifdmgickdm: i64,

    #[serde(rename = "NJMDKBIKJDD")]
    pub njmdkbikjdd: i64,

    #[serde(rename = "AGJAHMLDHEM")]
    pub agjahmldhem: i64,

    #[serde(rename = "DBCGIMKKFGB")]
    pub dbcgimkkfgb: i64,

    #[serde(rename = "FCCOAAMKCIB")]
    pub fccoaamkcib: Vec<i64>,

    #[serde(rename = "GFJOCHCDPKN")]
    pub gfjochcdpkn: i64,

    #[serde(rename = "HJAPKOCDDOO")]
    pub hjapkocddoo: i64,

    #[serde(rename = "MNLLHGEAIFO")]
    pub mnllhgeaifo: i64,

    #[serde(rename = "NHMNJPFNHPN")]
    pub nhmnjpfnhpn: Vec<i64>,
}

pub fn load() -> Result<FleurFairV2ExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "FleurFairV2ExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
