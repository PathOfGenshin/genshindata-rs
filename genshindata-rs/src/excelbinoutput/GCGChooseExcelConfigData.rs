/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type GcgChooseExcelConfigData = Vec<GcgChooseExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "PascalCase")]
pub struct GcgChooseExcelConfigDatum {
    pub id: i64,
    #[serde(rename = "cardType")]
    pub card_type: CardType,
    #[serde(rename = "BCLPBCDCBBN")]
    pub bclpbcdcbbn: Bclpbcdcbbn,
    #[serde(rename = "PKOFOAGDGIB")]
    pub pkofoagdgib: Vec<Pkofoagdgib>,
    #[serde(rename = "NGKHMFFKNCC")]
    pub ngkhmffkncc: Vec<Ngkhmffkncc>,
    #[serde(rename = "condList")]
    pub cond_list: Vec<Djdlddldinn>,
    #[serde(rename = "DJDLDDLDINN")]
    pub djdlddldinn: Vec<Djdlddldinn>,
    #[serde(rename = "JHPMINOIOPM")]
    pub jhpminoiopm: Vec<Jhpminoiopm>,
    #[serde(rename = "GPAKIBFBMOH")]
    pub gpakibfbmoh: i64,
    #[serde(rename = "NAODNIBEBOD")]
    pub naodnibebod: Option<Naodnibebod>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub enum Bclpbcdcbbn {
    #[serde(rename = "ENEMY")]
    Enemy,
    #[serde(rename = "FRIENDLY")]
    Friendly,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum CardType {
    #[serde(rename = "GCG_CARD_CHARACTER")]
    GcgCardCharacter,
    #[serde(rename = "GCG_CARD_SUMMON")]
    GcgCardSummon,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct Djdlddldinn {
    #[serde(rename = "type")]
    pub djdlddldinn_type: Option<DjdlddldinnType>,
    pub value: Option<i64>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum DjdlddldinnType {
    #[serde(rename = "ALIVE_CHAR_COUNT")]
    AliveCharCount,
    Card,
    #[serde(rename = "CHARACTER_HURT_MIN")]
    CharacterHurtMin,
    #[serde(rename = "CHARACTER_NOT_CHARGED_MAX")]
    CharacterNotChargedMax,
    #[serde(rename = "CHARACTER_NOT_CHARGED_MIN")]
    CharacterNotChargedMin,
    #[serde(rename = "HAS_MODIFY_STATE_WITH_TAG")]
    HasModifyStateWithTag,
    #[serde(rename = "IS_ALIVE_CHARACTER")]
    IsAliveCharacter,
    #[serde(rename = "NOT_HAS_MODIFY_STATE")]
    NotHasModifyState,
    #[serde(rename = "NOT_HAS_MODIFY_STATE_WITH_TAG")]
    NotHasModifyStateWithTag,
    Onstage,
    #[serde(rename = "SAME_WEAPON_TYPE_CHAR_COUNT")]
    SameWeaponTypeCharCount,
    #[serde(rename = "SAME_WEAPON_TYPE_WITH")]
    SameWeaponTypeWith,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct Jhpminoiopm {
    #[serde(rename = "type")]
    pub jhpminoiopm_type: Option<JhpminoiopmType>,
    #[serde(rename = "DFFIKOABPNK")]
    pub dffikoabpnk: Option<bool>,
    pub tag: Option<Ngkhmffkncc>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum JhpminoiopmType {
    #[serde(rename = "CHARACTER_ORDER")]
    CharacterOrder,
    #[serde(rename = "CREATE_ORDER")]
    CreateOrder,
    #[serde(rename = "HAS_TAG")]
    HasTag,
    Hp,
    #[serde(rename = "TOKEN_TO_SHOW")]
    TokenToShow,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Ngkhmffkncc {
    #[serde(rename = "GCG_TAG_ELEMENT_ANEMO")]
    GcgTagElementAnemo,
    #[serde(rename = "GCG_TAG_ELEMENT_CRYO")]
    GcgTagElementCryo,
    #[serde(rename = "GCG_TAG_ELEMENT_DENDRO")]
    GcgTagElementDendro,
    #[serde(rename = "GCG_TAG_ELEMENT_ELECTRO")]
    GcgTagElementElectro,
    #[serde(rename = "GCG_TAG_ELEMENT_GEO")]
    GcgTagElementGeo,
    #[serde(rename = "GCG_TAG_ELEMENT_HYDRO")]
    GcgTagElementHydro,
    #[serde(rename = "GCG_TAG_ELEMENT_PYRO")]
    GcgTagElementPyro,
    #[serde(rename = "GCG_TAG_NONE")]
    GcgTagNone,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub enum Naodnibebod {
    #[serde(rename = "HEALING")]
    Healing,
    #[serde(rename = "RELIC")]
    Relic,
    #[serde(rename = "TALENT")]
    Talent,
    #[serde(rename = "WEAPON")]
    Weapon,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Pkofoagdgib {
    #[serde(rename = "GCG_TAG_NONE")]
    GcgTagNone,
    #[serde(rename = "GCG_TAG_WEAPON_BOW")]
    GcgTagWeaponBow,
    #[serde(rename = "GCG_TAG_WEAPON_CATALYST")]
    GcgTagWeaponCatalyst,
    #[serde(rename = "GCG_TAG_WEAPON_CLAYMORE")]
    GcgTagWeaponClaymore,
    #[serde(rename = "GCG_TAG_WEAPON_POLE")]
    GcgTagWeaponPole,
    #[serde(rename = "GCG_TAG_WEAPON_SWORD")]
    GcgTagWeaponSword,
}
