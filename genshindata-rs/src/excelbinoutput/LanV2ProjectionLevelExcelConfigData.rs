// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type LanV2ProjectionLevelExcelConfigData = Vec<LanV2ProjectionLevelExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct LanV2ProjectionLevelExcelConfigDatum {
    #[serde(rename = "levelId")]
    pub level_id: i64,

    #[serde(rename = "stageId")]
    pub stage_id: i64,

    #[serde(rename = "watcherId")]
    pub watcher_id: i64,

    #[serde(rename = "levelNameTextMapHash")]
    pub level_name_text_map_hash: i64,

    #[serde(rename = "FMBGAJJMBGH")]
    pub fmbgajjmbgh: String,

    #[serde(rename = "JFCNPGKKHPA")]
    pub jfcnpgkkhpa: String,

    #[serde(rename = "COABBHAMBBC")]
    pub coabbhambbc: Option<f64>,

    #[serde(rename = "LEJIHFLKPIA")]
    pub lejihflkpia: f64,

    #[serde(rename = "ACJFIDCFLPO")]
    pub acjfidcflpo: f64,

    #[serde(rename = "LHMBDFHIPHF")]
    pub lhmbdfhiphf: i64,

    #[serde(rename = "GBHOHNEEFHE")]
    pub gbhohneefhe: Vec<f64>,

    #[serde(rename = "ODKPBEDOPIO")]
    pub odkpbedopio: Vec<f64>,

    #[serde(rename = "PMEGBKHKENH")]
    pub pmegbkhkenh: Vec<Option<serde_json::Value>>,

    #[serde(rename = "AIHOOFDICOG")]
    pub aihoofdicog: Vec<f64>,

    #[serde(rename = "AAIIGIEGHBD")]
    pub aaiigieghbd: Vec<f64>,

    #[serde(rename = "CMCCIEJDFEF")]
    pub cmcciejdfef: Vec<Vec<i64>>,

    #[serde(rename = "MJOHGJEIFDP")]
    pub mjohgjeifdp: Vec<Mjohgjeifdp>,

    #[serde(rename = "NNHMEDICAKL")]
    pub nnhmedicakl: Option<i64>,

    #[serde(rename = "MNDJEBAPDGH")]
    pub mndjebapdgh: Option<String>,

    #[serde(rename = "JLLLDELFKJB")]
    pub jllldelfkjb: Option<f64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct Mjohgjeifdp {
    #[serde(rename = "prefabPath")]
    pub prefab_path: String,

    #[serde(rename = "KALGDBBIFOI")]
    pub kalgdbbifoi: String,

    #[serde(rename = "LHJMMAEEKEP")]
    pub lhjmmaeekep: Vec<f64>,

    #[serde(rename = "NAMJBDOGJDM")]
    pub namjbdogjdm: Vec<f64>,

    #[serde(rename = "JJGBJMNIIMN")]
    pub jjgbjmniimn: Vec<f64>,

    #[serde(rename = "EDDNGHLNJAH")]
    pub eddnghlnjah: Vec<f64>,

    #[serde(rename = "CNNICAHBEGP")]
    pub cnnicahbegp: Vec<f64>,

    #[serde(rename = "OPFPFEKAFPB")]
    pub opfpfekafpb: Option<i64>,

    #[serde(rename = "CFIDIBAPDLJ")]
    pub cfidibapdlj: Option<String>,

    #[serde(rename = "MHAODFJECNL")]
    pub mhaodfjecnl: Option<f64>,
}

pub fn load() -> Result<LanV2ProjectionLevelExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "LanV2ProjectionLevelExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
