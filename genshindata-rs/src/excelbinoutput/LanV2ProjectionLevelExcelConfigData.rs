// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type LanV2ProjectionLevelExcelConfigData = Vec<LanV2ProjectionLevelExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct LanV2ProjectionLevelExcelConfigDatum {
    #[serde(rename = "levelId")]
    pub level_id: i64,

    #[serde(rename = "stageId")]
    pub stage_id: i64,

    #[serde(rename = "watcherId")]
    pub watcher_id: i64,

    #[serde(rename = "levelNameTextMapHash")]
    pub level_name_text_map_hash: i64,

    #[serde(rename = "IIMFOHCNJPN")]
    pub iimfohcnjpn: String,

    #[serde(rename = "ADCEKAKDKMP")]
    pub adcekakdkmp: String,

    #[serde(rename = "NHMBEDJPLCN")]
    pub nhmbedjplcn: Option<f64>,

    #[serde(rename = "CMOKEDBCBOH")]
    pub cmokedbcboh: f64,

    #[serde(rename = "HFDAPGJLPFN")]
    pub hfdapgjlpfn: f64,

    #[serde(rename = "FIMJBHLMBLA")]
    pub fimjbhlmbla: i64,

    #[serde(rename = "PEINNDNFPBF")]
    pub peinndnfpbf: Vec<f64>,

    #[serde(rename = "KDBAHGNDOPB")]
    pub kdbahgndopb: Vec<f64>,

    #[serde(rename = "JNGCGPHCHPI")]
    pub jngcgphchpi: Vec<Option<serde_json::Value>>,

    #[serde(rename = "INNACJMEPJI")]
    pub innacjmepji: Vec<f64>,

    #[serde(rename = "LPHAPPEIMMD")]
    pub lphappeimmd: Vec<f64>,

    #[serde(rename = "MOECGPDEKLF")]
    pub moecgpdeklf: Vec<Vec<i64>>,

    #[serde(rename = "CEIIMGGPJDE")]
    pub ceiimggpjde: Vec<Ceiimggpjde>,

    #[serde(rename = "CDFPPNMLPGL")]
    pub cdfppnmlpgl: Option<i64>,

    #[serde(rename = "HHKMKJJNAMI")]
    pub hhkmkjjnami: Option<String>,

    #[serde(rename = "CFMMDBIJAIM")]
    pub cfmmdbijaim: Option<f64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct Ceiimggpjde {
    #[serde(rename = "prefabPath")]
    pub prefab_path: String,

    #[serde(rename = "JKOKKKGKKDM")]
    pub jkokkkgkkdm: String,

    #[serde(rename = "LBOLPKFGCJF")]
    pub lbolpkfgcjf: Vec<f64>,

    #[serde(rename = "NLEADGCOMOP")]
    pub nleadgcomop: Vec<f64>,

    #[serde(rename = "LLCPJKCPKNL")]
    pub llcpjkcpknl: Vec<f64>,

    #[serde(rename = "PKDLJHEOPBC")]
    pub pkdljheopbc: Vec<f64>,

    #[serde(rename = "PJFFIAHDDFO")]
    pub pjffiahddfo: Vec<f64>,

    #[serde(rename = "MDAMNBNJEPC")]
    pub mdamnbnjepc: Option<i64>,

    #[serde(rename = "MHGMMHNIPCP")]
    pub mhgmmhnipcp: Option<String>,

    #[serde(rename = "PGCFIJBPLHG")]
    pub pgcfijbplhg: Option<f64>,
}

pub fn load() -> Result<LanV2ProjectionLevelExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "LanV2ProjectionLevelExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
