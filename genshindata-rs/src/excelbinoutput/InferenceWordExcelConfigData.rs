// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

extern crate serde_derive;

pub type InferenceWordExcelConfigData = Vec<InferenceWordExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct InferenceWordExcelConfigDatum {
    #[serde(rename = "ELABMBFNIFF")]
    pub elabmbfniff: i64,

    #[serde(rename = "DBLKEGDILKA")]
    pub dblkegdilka: i64,

    #[serde(rename = "MIBDGELFAGJ")]
    pub mibdgelfagj: Option<bool>,

    #[serde(rename = "NEDNACNFACN")]
    pub nednacnfacn: Option<bool>,

    #[serde(rename = "EMPJPMNEIEN")]
    pub empjpmneien: Vec<Djhjhpnpnno>,

    #[serde(rename = "CECCKJKILKP")]
    pub cecckjkilkp: Option<bool>,

    #[serde(rename = "PCDLIMAIIDP")]
    pub pcdlimaiidp: Option<i64>,

    #[serde(rename = "DJHJHPNPNNO")]
    pub djhjhpnpnno: Vec<Djhjhpnpnno>,

    #[serde(rename = "OPLJFLJDOPL")]
    pub opljfljdopl: i64,

    #[serde(rename = "LLCPCAJANNN")]
    pub llcpcajannn: Option<i64>,

    #[serde(rename = "LCPLAOIPCEO")]
    pub lcplaoipceo: Option<i64>,

    #[serde(rename = "NIACGIJOKHM")]
    pub niacgijokhm: Option<i64>,

    #[serde(rename = "DGFAADLELCM")]
    pub dgfaadlelcm: Option<bool>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct Djhjhpnpnno {
    #[serde(rename = "type")]
    pub djhjhpnpnno_type: Option<String>,

    #[serde(rename = "param")]
    pub param: String,
}

pub fn load() -> Result<InferenceWordExcelConfigData, crate::json::JsonError> {
    let path: std::path::PathBuf = [
        "GenshinData",
        "ExcelBinOutput",
        "InferenceWordExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
