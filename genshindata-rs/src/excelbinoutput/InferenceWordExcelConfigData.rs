// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type InferenceWordExcelConfigData = Vec<InferenceWordExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct InferenceWordExcelConfigDatum {
    #[serde(rename = "JIMANNHOGCF")]
    pub jimannhogcf: i64,

    #[serde(rename = "GNJHEMDOCLN")]
    pub gnjhemdocln: i64,

    #[serde(rename = "BHDLGDFFJLD")]
    pub bhdlgdffjld: Option<bool>,

    #[serde(rename = "GKLLFMMMPNL")]
    pub gkllfmmmpnl: Option<bool>,

    #[serde(rename = "COGDPFAMGAH")]
    pub cogdpfamgah: Vec<Cogdpfamgah>,

    #[serde(rename = "MHLOEJNCOLC")]
    pub mhloejncolc: Option<bool>,

    #[serde(rename = "DONDHIDFOMO")]
    pub dondhidfomo: Option<i64>,

    #[serde(rename = "EBOOJIIAABA")]
    pub eboojiiaaba: Vec<Cogdpfamgah>,

    #[serde(rename = "BACNAFHBAIM")]
    pub bacnafhbaim: i64,

    #[serde(rename = "LIFPCFBDJLG")]
    pub lifpcfbdjlg: Option<i64>,

    #[serde(rename = "BJHNLPOPALB")]
    pub bjhnlpopalb: Option<i64>,

    #[serde(rename = "IAECKNABEHD")]
    pub iaecknabehd: Option<i64>,

    #[serde(rename = "JKIMOMICCNA")]
    pub jkimomiccna: Option<bool>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct Cogdpfamgah {
    #[serde(rename = "param")]
    pub param: String,

    #[serde(rename = "type")]
    pub cogdpfamgah_type: Option<String>,
}

pub fn load() -> Result<InferenceWordExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "InferenceWordExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
