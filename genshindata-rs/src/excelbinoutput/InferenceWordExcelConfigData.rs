/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type InferenceWordExcelConfigData = Vec<InferenceWordExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub struct InferenceWordExcelConfigDatum {
    pub bbeigemamlb: i64,
    pub kfigniogmfh: i64,
    pub pdgjhnopejl: Option<bool>,
    pub afpfgdclnaj: Option<bool>,
    pub ipdbnmeeiec: Vec<Ddpbdfeeakd>,
    pub mcfpncinlih: Option<bool>,
    pub eodhompnkbb: Option<i64>,
    pub ddpbdfeeakd: Vec<Ddpbdfeeakd>,
    pub ikdokfoidlp: i64,
    pub kkehglclagn: Option<i64>,
    pub cfgcdlodddj: Option<i64>,
    pub bnjgdobmgab: Option<i64>,
    pub kpjnmpdbefb: Option<bool>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct Ddpbdfeeakd {
    #[serde(rename = "type")]
    pub ddpbdfeeakd_type: Option<Type>,
    pub param: String,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Type {
    #[serde(rename = "INFERENCE_ACTION_UNLOCK_WORD")]
    InferenceActionUnlockWord,
}
