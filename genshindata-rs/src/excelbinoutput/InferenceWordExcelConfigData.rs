/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type InferenceWordExcelConfigData = Vec<InferenceWordExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub struct InferenceWordExcelConfigDatum {
    pub hngjljmhhma: i64,
    pub jgokehgfghp: i64,
    pub cbhdfnefagf: Option<bool>,
    pub dmnonjlacif: Option<bool>,
    pub jdlpbjmcbpc: Vec<Jdlpbjmcbpc>,
    pub fjaclhefnch: Option<bool>,
    pub oofmenklofi: Option<i64>,
    pub kjeojppdhhg: Vec<Jdlpbjmcbpc>,
    pub leiejlgolpc: i64,
    pub ddifjkaooid: Option<i64>,
    pub blhebndkjgb: Option<i64>,
    pub eophcglheik: Option<i64>,
    pub gpcplcldaeh: Option<bool>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct Jdlpbjmcbpc {
    pub param: String,
    #[serde(rename = "type")]
    pub jdlpbjmcbpc_type: Option<Type>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Type {
    #[serde(rename = "INFERENCE_ACTION_UNLOCK_WORD")]
    InferenceActionUnlockWord,
}
