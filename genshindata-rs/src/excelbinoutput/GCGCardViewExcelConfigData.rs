// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type GcgCardViewExcelConfigData = Vec<GcgCardViewExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct GcgCardViewExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "PGEPLDHMPLO")]
    pub pgepldhmplo: String,

    #[serde(rename = "HMPJPKLCMKP")]
    pub hmpjpklcmkp: Vec<String>,

    #[serde(rename = "HNEFNBPCOBH")]
    pub hnefnbpcobh: String,

    #[serde(rename = "HADIODKOHNK")]
    pub hadiodkohnk: String,

    #[serde(rename = "JBHOCOPIIEM")]
    pub jbhocopiiem: Vec<Option<serde_json::Value>>,

    #[serde(rename = "LLBDPGLCHBJ")]
    pub llbdpglchbj: String,

    #[serde(rename = "APODPMNGBBG")]
    pub apodpmngbbg: Apodpmngbbg,

    #[serde(rename = "KMPGBPDNAFF")]
    pub kmpgbpdnaff: Vec<String>,

    #[serde(rename = "BIFAGBJMBAH")]
    pub bifagbjmbah: Bifagbjmbah,

    #[serde(rename = "HDBBJIGKIMP")]
    pub hdbbjigkimp: Option<i64>,

    #[serde(rename = "CELPODAOIKD")]
    pub celpodaoikd: Option<i64>,

    #[serde(rename = "MAKFNPNEFDE")]
    pub makfnpnefde: Option<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Apodpmngbbg {
    #[serde(rename = "")]
    Empty,

    #[serde(rename = "Gcg_CardFace_Char_Avatar_Cyno")]
    GcgCardFaceCharAvatarCyno,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Bifagbjmbah {
    #[serde(rename = "")]
    Empty,

    #[serde(rename = "SkinEffectConfig_Character_Cyno2")]
    SkinEffectConfigCharacterCyno2,
}

pub fn load() -> Result<GcgCardViewExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "GCGCardViewExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
