// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type GcgCardViewExcelConfigData = Vec<GcgCardViewExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct GcgCardViewExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "DDPJEDECAAL")]
    pub ddpjedecaal: String,

    #[serde(rename = "DMMGBMKBMIA")]
    pub dmmgbmkbmia: Vec<String>,

    #[serde(rename = "KCPLNHHMCDF")]
    pub kcplnhhmcdf: String,

    #[serde(rename = "FPELAEOLIIE")]
    pub fpelaeoliie: String,

    #[serde(rename = "NIIKEPJJFHJ")]
    pub niikepjjfhj: Vec<Option<serde_json::Value>>,

    #[serde(rename = "EDOJEOMIFCK")]
    pub edojeomifck: String,

    #[serde(rename = "LFCDCIGMFND")]
    pub lfcdcigmfnd: Lfcdcigmfnd,

    #[serde(rename = "DFMKHGPDKFO")]
    pub dfmkhgpdkfo: Vec<String>,

    #[serde(rename = "GOJDIBEIEJP")]
    pub gojdibeiejp: Gojdibeiejp,

    #[serde(rename = "NBIPJPBMABC")]
    pub nbipjpbmabc: Option<i64>,

    #[serde(rename = "MINCENHBDMG")]
    pub mincenhbdmg: Option<i64>,

    #[serde(rename = "LKBFALNMKFC")]
    pub lkbfalnmkfc: Option<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Gojdibeiejp {
    #[serde(rename = "")]
    Empty,

    #[serde(rename = "SkinEffectConfig_Character_Cyno2")]
    SkinEffectConfigCharacterCyno2,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Lfcdcigmfnd {
    #[serde(rename = "")]
    Empty,

    #[serde(rename = "Gcg_CardFace_Char_Avatar_Cyno")]
    GcgCardFaceCharAvatarCyno,
}

pub fn load() -> Result<GcgCardViewExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "GCGCardViewExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
