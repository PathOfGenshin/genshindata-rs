// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type GcgCardViewExcelConfigData = Vec<GcgCardViewExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct GcgCardViewExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "GLCONCDPNCI")]
    pub glconcdpnci: String,

    #[serde(rename = "DEPNICHKLNH")]
    pub depnichklnh: Vec<String>,

    #[serde(rename = "OOEGELMFOPF")]
    pub ooegelmfopf: String,

    #[serde(rename = "BFNMNAJFIDE")]
    pub bfnmnajfide: String,

    #[serde(rename = "HEJOECFICIP")]
    pub hejoecficip: Vec<Option<serde_json::Value>>,

    #[serde(rename = "OHLDGJKGMDC")]
    pub ohldgjkgmdc: String,

    #[serde(rename = "CJMAEMFDAGK")]
    pub cjmaemfdagk: Cjmaemfdagk,

    #[serde(rename = "AMGJBKAJBLM")]
    pub amgjbkajblm: Vec<String>,

    #[serde(rename = "COCCNCFJLDP")]
    pub coccncfjldp: Coccncfjldp,

    #[serde(rename = "KMJFBHNAEMK")]
    pub kmjfbhnaemk: Option<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Cjmaemfdagk {
    #[serde(rename = "")]
    Empty,

    #[serde(rename = "Gcg_CardFace_Char_Avatar_Cyno")]
    GcgCardFaceCharAvatarCyno,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Coccncfjldp {
    #[serde(rename = "")]
    Empty,

    #[serde(rename = "SkinEffectConfig_Character_Cyno2")]
    SkinEffectConfigCharacterCyno2,
}

pub fn load() -> Result<GcgCardViewExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "GCGCardViewExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
