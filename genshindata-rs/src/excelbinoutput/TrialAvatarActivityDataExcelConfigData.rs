/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type TrialAvatarActivityDataExcelConfigData = Vec<TrialAvatarActivityDataExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TrialAvatarActivityDataExcelConfigDatum {
    pub trial_avatar_index_id: i64,
    pub trial_avatar_id: i64,
    pub dungeon_id: i64,
    pub battle_avatars_list: String,
    pub first_pass_reward: i64,
    pub title_text_map_hash: i64,
    pub brief_info_text_map_hash: i64,
    pub id: i64,
    pub trigger_config: TriggerConfig,
    pub progress: i64,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TriggerConfig {
    pub trigger_type: TriggerType,
    pub param_list: Vec<String>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum TriggerType {
    #[serde(rename = "TRIGGER_FINISH_CHALLENGE")]
    TriggerFinishChallenge,
}
