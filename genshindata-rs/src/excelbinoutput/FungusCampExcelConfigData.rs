// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type FungusCampExcelConfigData = Vec<FungusCampExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct FungusCampExcelConfigDatum {
    #[serde(rename = "EDBFKJMPNCB")]
    pub edbfkjmpncb: i64,

    #[serde(rename = "campNameTextMapHash")]
    pub camp_name_text_map_hash: i64,

    #[serde(rename = "LABNOEGPADP")]
    pub labnoegpadp: i64,

    #[serde(rename = "EADIHALBGCN")]
    pub eadihalbgcn: i64,

    #[serde(rename = "questId")]
    pub quest_id: Option<i64>,

    #[serde(rename = "LLEDJCPJBCH")]
    pub lledjcpjbch: Option<i64>,

    #[serde(rename = "KAHAIAHOPMH")]
    pub kahaiahopmh: Vec<i64>,

    #[serde(rename = "FMNAJKCGMDL")]
    pub fmnajkcgmdl: Option<i64>,
}

pub fn load() -> Result<FungusCampExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "FungusCampExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
