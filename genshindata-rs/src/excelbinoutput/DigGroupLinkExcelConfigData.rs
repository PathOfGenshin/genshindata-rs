// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type DigGroupLinkExcelConfigData = Vec<DigGroupLinkExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct DigGroupLinkExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "NMDMPKBAICG")]
    pub nmdmpkbaicg: i64,

    #[serde(rename = "LPFNODODEGM")]
    pub lpfnododegm: i64,

    #[serde(rename = "FBLPOJFJJFE")]
    pub fblpojfjjfe: i64,

    #[serde(rename = "MNCMLAMFHHJ")]
    pub mncmlamfhhj: Vec<i64>,

    #[serde(rename = "NAFIPGDMFGF")]
    pub nafipgdmfgf: String,

    #[serde(rename = "MBCGHGDLKNN")]
    pub mbcghgdlknn: Option<i64>,

    #[serde(rename = "EEMMOOHDBMC")]
    pub eemmoohdbmc: Option<i64>,
}

pub fn load() -> Result<DigGroupLinkExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "DigGroupLinkExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
