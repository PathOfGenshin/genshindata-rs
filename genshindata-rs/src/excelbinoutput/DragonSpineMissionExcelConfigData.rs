// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type DragonSpineMissionExcelConfigData = Vec<DragonSpineMissionExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct DragonSpineMissionExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "chapterId")]
    pub chapter_id: i64,

    #[serde(rename = "watcherId")]
    pub watcher_id: i64,

    #[serde(rename = "finishExec")]
    pub finish_exec: Vec<FinishExec>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct FinishExec {
    #[serde(rename = "param")]
    pub param: Vec<String>,

    #[serde(rename = "type")]
    pub finish_exec_type: Option<String>,
}

pub fn load() -> Result<DragonSpineMissionExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "DragonSpineMissionExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
