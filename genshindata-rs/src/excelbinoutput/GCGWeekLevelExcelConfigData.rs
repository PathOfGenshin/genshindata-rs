// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type GcgWeekLevelExcelConfigData = Vec<GcgWeekLevelExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct GcgWeekLevelExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "npcId")]
    pub npc_id: i64,

    #[serde(rename = "GKLFKPHCIAJ")]
    pub gklfkphciaj: Gklfkphciaj,

    #[serde(rename = "POMFEHMFAMK")]
    pub pomfehmfamk: Vec<Pomfehmfamk>,

    #[serde(rename = "DGHFOKDOHMD")]
    pub dghfokdohmd: Vec<Option<serde_json::Value>>,

    #[serde(rename = "iconName")]
    pub icon_name: String,

    #[serde(rename = "JEBBECDEKNO")]
    pub jebbecdekno: Option<bool>,

    #[serde(rename = "openQuestId")]
    pub open_quest_id: Option<i64>,

    #[serde(rename = "JBIODBMJBIC")]
    pub jbiodbmjbic: Option<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct Pomfehmfamk {
    #[serde(rename = "levelId")]
    pub level_id: i64,

    #[serde(rename = "PDPEMMHJDPI")]
    pub pdpemmhjdpi: i64,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Gklfkphciaj {
    #[serde(rename = "WEEK_NPC_CHARACTER")]
    WeekNpcCharacter,

    #[serde(rename = "WEEK_NPC_NORMAL")]
    WeekNpcNormal,
}

pub fn load() -> Result<GcgWeekLevelExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "GCGWeekLevelExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
