// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type GcgWeekLevelExcelConfigData = Vec<GcgWeekLevelExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct GcgWeekLevelExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "npcId")]
    pub npc_id: i64,

    #[serde(rename = "DHPCAAOLDAK")]
    pub dhpcaaoldak: Dhpcaaoldak,

    #[serde(rename = "ICMIJCCHBIP")]
    pub icmijcchbip: Vec<Icmijcchbip>,

    #[serde(rename = "HOKFFPKBJCO")]
    pub hokffpkbjco: Vec<Option<serde_json::Value>>,

    #[serde(rename = "iconName")]
    pub icon_name: String,

    #[serde(rename = "JNNENPFOPKI")]
    pub jnnenpfopki: Option<bool>,

    #[serde(rename = "openQuestId")]
    pub open_quest_id: Option<i64>,

    #[serde(rename = "AGBBDMHIKPK")]
    pub agbbdmhikpk: Option<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct Icmijcchbip {
    #[serde(rename = "levelId")]
    pub level_id: i64,

    #[serde(rename = "BNGOLCGKCFA")]
    pub bngolcgkcfa: i64,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Dhpcaaoldak {
    #[serde(rename = "WEEK_NPC_CHARACTER")]
    WeekNpcCharacter,

    #[serde(rename = "WEEK_NPC_NORMAL")]
    WeekNpcNormal,
}

pub fn load() -> Result<GcgWeekLevelExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "GCGWeekLevelExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
