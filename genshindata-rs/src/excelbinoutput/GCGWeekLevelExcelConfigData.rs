// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type GcgWeekLevelExcelConfigData = Vec<GcgWeekLevelExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct GcgWeekLevelExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "npcId")]
    pub npc_id: i64,

    #[serde(rename = "LHEECKCLJIL")]
    pub lheeckcljil: Lheeckcljil,

    #[serde(rename = "HDEIFENMGLI")]
    pub hdeifenmgli: Vec<Hdeifenmgli>,

    #[serde(rename = "NDEEAIHNEHK")]
    pub ndeeaihnehk: Vec<Option<serde_json::Value>>,

    #[serde(rename = "iconName")]
    pub icon_name: String,

    #[serde(rename = "BGNLKDOBNFH")]
    pub bgnlkdobnfh: Option<bool>,

    #[serde(rename = "openQuestId")]
    pub open_quest_id: Option<i64>,

    #[serde(rename = "DGNMIBIANEG")]
    pub dgnmibianeg: Option<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct Hdeifenmgli {
    #[serde(rename = "levelId")]
    pub level_id: i64,

    #[serde(rename = "CIEAGKLCHJK")]
    pub cieagklchjk: i64,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Lheeckcljil {
    #[serde(rename = "WEEK_NPC_CHARACTER")]
    WeekNpcCharacter,

    #[serde(rename = "WEEK_NPC_NORMAL")]
    WeekNpcNormal,
}

pub fn load() -> Result<GcgWeekLevelExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "GCGWeekLevelExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
