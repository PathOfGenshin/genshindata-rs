// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type OfferingLevelUpExcelConfigData = Vec<OfferingLevelUpExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct OfferingLevelUpExcelConfigDatum {
    #[serde(rename = "offeringId")]
    pub offering_id: i64,

    #[serde(rename = "level")]
    pub level: Option<i64>,

    #[serde(rename = "actionVec")]
    pub action_vec: Vec<ActionVec>,

    #[serde(rename = "rewardId")]
    pub reward_id: Option<i64>,

    #[serde(rename = "MKOGMKFDNIM")]
    pub mkogmkfdnim: Vec<Mkogmkfdnim>,

    #[serde(rename = "cutSceneId")]
    pub cut_scene_id: Option<i64>,

    #[serde(rename = "consumeItemConfig")]
    pub consume_item_config: Option<bool>,

    #[serde(rename = "IKAOKNLJFGE")]
    pub ikaoknljfge: Option<bool>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct ActionVec {
    #[serde(rename = "id")]
    pub id: Option<i64>,

    #[serde(rename = "count")]
    pub count: Option<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct Mkogmkfdnim {
    #[serde(rename = "param")]
    pub param: String,

    #[serde(rename = "actionType")]
    pub action_type: Option<ActionType>,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum ActionType {
    #[serde(rename = "OFFERING_ACTION_CLOSE_ROUTINE")]
    OfferingActionCloseRoutine,

    #[serde(rename = "OFFERING_ACTION_NOTIFY_GROUP")]
    OfferingActionNotifyGroup,

    #[serde(rename = "OFFERING_ACTION_OPEN_ROUTINE")]
    OfferingActionOpenRoutine,

    #[serde(rename = "OFFERING_ACTION_SET_GADGET_CHAIN_LEVEL")]
    OfferingActionSetGadgetChainLevel,
}

pub fn load() -> Result<OfferingLevelUpExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "OfferingLevelUpExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
