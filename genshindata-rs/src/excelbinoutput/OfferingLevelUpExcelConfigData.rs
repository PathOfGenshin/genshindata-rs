/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type OfferingLevelUpExcelConfigData = Vec<OfferingLevelUpExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct OfferingLevelUpExcelConfigDatum {
    pub offering_id: i64,
    pub level: Option<i64>,
    pub consume_item_config_vec: Vec<ConsumeItemConfigVec>,
    pub reward_id: Option<i64>,
    pub action_vec: Vec<ActionVec>,
    pub cut_scene_id: Option<i64>,
    pub is_max_level: Option<bool>,
    pub is_auto_take_reward: Option<bool>,
    #[serde(rename = "ICKLOHDIJCH")]
    pub icklohdijch: Option<i64>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ActionVec {
    pub param: String,
    pub action_type: Option<ActionType>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum ActionType {
    #[serde(rename = "OFFERING_ACTION_CLOSE_ROUTINE")]
    OfferingActionCloseRoutine,
    #[serde(rename = "OFFERING_ACTION_NOTIFY_GROUP")]
    OfferingActionNotifyGroup,
    #[serde(rename = "OFFERING_ACTION_OPEN_ROUTINE")]
    OfferingActionOpenRoutine,
    #[serde(rename = "OFFERING_ACTION_SET_GADGET_CHAIN_LEVEL")]
    OfferingActionSetGadgetChainLevel,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ConsumeItemConfigVec {
    pub id: Option<i64>,
    pub count: Option<i64>,
}
