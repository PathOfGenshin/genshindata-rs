// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

extern crate serde_derive;

pub type LanV2FireworksOverallDataExcelConfigData = Vec<LanV2FireworksOverallDataExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct LanV2FireworksOverallDataExcelConfigDatum {
    #[serde(rename = "scheduleId")]
    pub schedule_id: i64,

    #[serde(rename = "KKMKCANLBCP")]
    pub kkmkcanlbcp: i64,

    #[serde(rename = "CENJBEBBKLK")]
    pub cenjbebbklk: Vec<Cenjbebbklk>,

    #[serde(rename = "DMCEHEHGKJJ")]
    pub dmcehehgkjj: f64,

    #[serde(rename = "ANDAKPEKFMG")]
    pub andakpekfmg: f64,

    #[serde(rename = "pushTipsId")]
    pub push_tips_id: i64,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct Cenjbebbklk {
    #[serde(rename = "BGAEDLFPKHM")]
    pub bgaedlfpkhm: Vec<i64>,

    #[serde(rename = "IAPAGNFKHOE")]
    pub iapagnfkhoe: Option<i64>,
}

pub fn load() -> Result<LanV2FireworksOverallDataExcelConfigData, crate::json::JsonError> {
    let path: std::path::PathBuf = [
        "GenshinData",
        "ExcelBinOutput",
        "LanV2FireworksOverallDataExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
