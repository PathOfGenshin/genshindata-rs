// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type LanV2FireworksStageDataExcelConfigData = Vec<LanV2FireworksStageDataExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct LanV2FireworksStageDataExcelConfigDatum {
    #[serde(rename = "stageId")]
    pub stage_id: i64,

    #[serde(rename = "openDay")]
    pub open_day: i64,

    #[serde(rename = "challengeIdList")]
    pub challenge_id_list: Vec<i64>,

    #[serde(rename = "tabNameTextMapHash")]
    pub tab_name_text_map_hash: i64,

    #[serde(rename = "PODKEBDBGFJ")]
    pub podkebdbgfj: i64,

    #[serde(rename = "PMPFNBJCBBB")]
    pub pmpfnbjcbbb: Vec<i64>,

    #[serde(rename = "MKIKIJPHHHM")]
    pub mkikijphhhm: i64,
}

pub fn load() -> Result<LanV2FireworksStageDataExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "LanV2FireworksStageDataExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
