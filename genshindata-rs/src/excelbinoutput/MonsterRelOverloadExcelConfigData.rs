/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type MonsterRelOverloadExcelConfigData = Vec<MonsterRelOverloadExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub struct MonsterRelOverloadExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,
    pub fmfbiclmfgm: Fmfbiclmfgm,
    pub pmbgkpbbfko: Pmbgkpbbfko,
    pub lhlkaefefnk: Vec<Lhlkaefefnk>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Fmfbiclmfgm {
    #[serde(rename = "MONSTER_POLY_DROP_GV")]
    MonsterPolyDropGv,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Lhlkaefefnk {
    pub param_list: Vec<i64>,
    #[serde(rename = "OIMJONFKJDG")]
    pub oimjonfkjdg: Oimjonfkjdg,
    pub monster_rarity: MonsterRarity,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum MonsterRarity {
    #[serde(rename = "MONSTER_RARITY_ELITE_MONSTER")]
    MonsterRarityEliteMonster,
    #[serde(rename = "MONSTER_RARITY_SMALL_MONSTER")]
    MonsterRaritySmallMonster,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub enum Oimjonfkjdg {
    #[serde(rename = "蕈兽")]
    Empty,
    #[serde(rename = "大异化蕈兽")]
    Fluffy,
    #[serde(rename = "异化蕈兽")]
    Oimjonfkjdg,
    #[serde(rename = "大蕈兽")]
    Purple,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub enum Pmbgkpbbfko {
    #[serde(rename = "_MONSTER_FUNGUSSTATE_")]
    MonsterFungusstate,
}
