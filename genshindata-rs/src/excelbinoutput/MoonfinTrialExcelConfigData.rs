// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type MoonfinTrialExcelConfigData = Vec<MoonfinTrialExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct MoonfinTrialExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "activityId")]
    pub activity_id: i64,

    #[serde(rename = "KHAKJEOMIAC")]
    pub khakjeomiac: Vec<i64>,

    #[serde(rename = "LPGOMIKGMFI")]
    pub lpgomikgmfi: i64,

    #[serde(rename = "OPEOPPAMHEO")]
    pub opeoppamheo: i64,

    #[serde(rename = "LPKLAKJDEGJ")]
    pub lpklakjdegj: i64,

    #[serde(rename = "JIKKGOAHOIO")]
    pub jikkgoahoio: i64,

    #[serde(rename = "pushTipsId")]
    pub push_tips_id: i64,

    #[serde(rename = "BNAACGLCCBB")]
    pub bnaacglccbb: Vec<i64>,

    #[serde(rename = "CKDLPIDIFEG")]
    pub ckdlpidifeg: Vec<i64>,
}

pub fn load() -> Result<MoonfinTrialExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "MoonfinTrialExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
