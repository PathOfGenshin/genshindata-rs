// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type ProductPs4PackageDetailConfigData = Vec<ProductPs4PackageDetailConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ProductPs4PackageDetailConfigDatum {
    #[serde(rename = "contentVec")]
    pub content_vec: Vec<ContentVec>,

    #[serde(rename = "mailConfigId")]
    pub mail_config_id: i64,

    #[serde(rename = "configId")]
    pub config_id: i64,

    #[serde(rename = "priceTier")]
    pub price_tier: String,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct ContentVec {
    #[serde(rename = "materialId")]
    pub material_id: Option<i64>,

    #[serde(rename = "materialNum")]
    pub material_num: Option<i64>,
}

pub fn load() -> Result<ProductPs4PackageDetailConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "ProductPS4PackageDetailConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
