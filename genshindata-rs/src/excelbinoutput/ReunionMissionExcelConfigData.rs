// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type ReunionMissionExcelConfigData = Vec<ReunionMissionExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ReunionMissionExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "watcherGroupId")]
    pub watcher_group_id: i64,

    #[serde(rename = "targetScore")]
    pub target_score: Option<i64>,

    #[serde(rename = "finishRewardId")]
    pub finish_reward_id: Option<i64>,

    #[serde(rename = "POOFMKMDHEO")]
    pub poofmkmdheo: Vec<i64>,

    #[serde(rename = "JJCIDDDHINN")]
    pub jjcidddhinn: Vec<i64>,

    #[serde(rename = "CIJFPMJJKAH")]
    pub cijfpmjjkah: Vec<i64>,

    #[serde(rename = "HADDPHAPOBI")]
    pub haddphapobi: i64,
}

pub fn load() -> Result<ReunionMissionExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "ReunionMissionExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
