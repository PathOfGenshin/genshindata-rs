/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type GatherExcelConfigData = Vec<GatherExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GatherExcelConfigDatum {
    pub area_id: Option<i64>,
    pub point_type: i64,
    pub gadget_id: i64,
    pub item_id: i64,
    pub block_limits: Vec<i64>,
    pub refresh_id: Option<i64>,
    pub init_disable_interact: Option<bool>,
    pub extra_item_id_vec: Option<ExtraItemIdVec>,
    pub cd: Option<bool>,
    pub point_location: Option<PointLocation>,
    pub is_forbid_guest: Option<bool>,
    #[serde(rename = "LIIHKBMKFGD")]
    pub liihkbmkfgd: Option<bool>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum ExtraItemIdVec {
    #[serde(rename = "GATHER_SAVE_TYPE_HIGH")]
    GatherSaveTypeHigh,
    #[serde(rename = "GATHER_SAVE_TYPE_LOW")]
    GatherSaveTypeLow,
    #[serde(rename = "GATHER_SAVE_TYPE_MID")]
    GatherSaveTypeMid,
    #[serde(rename = "GATHER_SAVE_TYPE_OWN")]
    GatherSaveTypeOwn,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum PointLocation {
    #[serde(rename = "POINT_AIR")]
    PointAir,
}
