/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type MusicGameDrumConfigData = Vec<MusicGameDrumConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MusicGameDrumConfigDatum {
    pub id: i64,
    pub delay_setting_range: Vec<i64>,
    pub drop_speed_setting_range: Vec<f64>,
    pub key_sound_setting_range: Vec<i64>,
    pub perfect_range: Vec<i64>,
    pub great_range: Vec<i64>,
    pub long_press_end_compensation: i64,
    pub fail_time: i64,
    pub long_press_hit_interval: i64,
    pub ugc_per_music_num: i64,
    pub ugc_max_history_num: i64,
    pub ugc_max_saved_score_num: i64,
    pub ugc_max_note_num: i64,
    pub ugc_regional_note_limit: Vec<i64>,
    pub ugc_long_press_note_weight: i64,
    pub ugc_rank_score_ratio_list: Vec<i64>,
    pub ugc_publish_limit: i64,
    pub ugc_prefix_play_time: i64,
    pub ugc_suffix_play_time: Option<i64>,
    pub ugc_undo_buffer_size: i64,
    pub ugc_edit_viewport_range: Vec<i64>,
    pub ugc_time_line_viewport_range: Vec<i64>,
    pub calib_music_info: Vec<i64>,
    pub calib_viewport_range: Vec<i64>,
    pub ugc_auto_attach_beat_count: i64,
    pub ugc_tutorial_push_tip_ids: Vec<i64>,
    pub combo_effect_show_count: Vec<i64>,
    pub ugc_editor_push_tip_ids: Vec<i64>,
    pub ugc_cursor_move_params: Vec<f64>,
    pub ugc_music_play_speed_list: Vec<f64>,
    pub ugc_tutorial_black_list: Vec<i64>,
}
