// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type PsActivitiesSubTaskConfigData = Vec<PsActivitiesSubTaskConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct PsActivitiesSubTaskConfigDatum {
    #[serde(rename = "taskID")]
    pub task_id: i64,

    #[serde(rename = "ID")]
    pub id: i64,

    #[serde(rename = "objectID")]
    pub object_id: String,

    #[serde(rename = "IBMHEFDMDJC")]
    pub ibmhefdmdjc: Ibmhefdmdjc,

    #[serde(rename = "hidden")]
    pub hidden: Option<bool>,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Ibmhefdmdjc {
    #[serde(rename = "1.5.0")]
    The150,

    #[serde(rename = "1.6.0")]
    The160,

    #[serde(rename = "2.0.0")]
    The200,

    #[serde(rename = "2.1.0")]
    The210,

    #[serde(rename = "2.6.0")]
    The260,

    #[serde(rename = "3.0.0")]
    The300,

    #[serde(rename = "3.1.0")]
    The310,

    #[serde(rename = "3.2.0")]
    The320,
}

pub fn load() -> Result<PsActivitiesSubTaskConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "PSActivitiesSubTaskConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
