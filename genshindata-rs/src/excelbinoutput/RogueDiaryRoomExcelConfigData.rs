// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type RogueDiaryRoomExcelConfigData = Vec<RogueDiaryRoomExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct RogueDiaryRoomExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "LDMKAGKFLKE")]
    pub ldmkagkflke: i64,

    #[serde(rename = "challengeId")]
    pub challenge_id: Option<i64>,

    #[serde(rename = "AJOGLJNLJGK")]
    pub ajogljnljgk: Option<i64>,

    #[serde(rename = "KNCHMGHMKBO")]
    pub knchmghmkbo: Option<i64>,

    #[serde(rename = "BDOLBLPLCLO")]
    pub bdolblplclo: i64,

    #[serde(rename = "MKGNIAHNJBJ")]
    pub mkgniahnjbj: Option<i64>,

    #[serde(rename = "KIIOEKAGACE")]
    pub kiioekagace: Option<bool>,
}

pub fn load() -> Result<RogueDiaryRoomExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "RogueDiaryRoomExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
