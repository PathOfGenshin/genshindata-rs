// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type ReunionWatcherExcelConfigData = Vec<ReunionWatcherExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ReunionWatcherExcelConfigDatum {
    #[serde(rename = "watcherGroupId")]
    pub watcher_group_id: i64,

    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,

    #[serde(rename = "activateLevelRange")]
    pub activate_level_range: ActivateLevelRange,

    #[serde(rename = "rewardId")]
    pub reward_id: i64,

    #[serde(rename = "score")]
    pub score: i64,

    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "triggerConfig")]
    pub trigger_config: TriggerConfig,

    #[serde(rename = "progress")]
    pub progress: i64,

    #[serde(rename = "JONBLFFNFOL")]
    pub jonblffnfol: Option<i64>,

    #[serde(rename = "isDisuse")]
    pub is_disuse: Option<bool>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct TriggerConfig {
    #[serde(rename = "triggerType")]
    pub trigger_type: String,

    #[serde(rename = "paramList")]
    pub param_list: Vec<String>,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum ActivateLevelRange {
    #[serde(rename = "10,30")]
    The1030,

    #[serde(rename = "10,61")]
    The1061,

    #[serde(rename = "28,61")]
    The2861,

    #[serde(rename = "30,40")]
    The3040,

    #[serde(rename = "31,61")]
    The3161,

    #[serde(rename = "40,50")]
    The4050,

    #[serde(rename = "50,61")]
    The5061,
}

pub fn load() -> Result<ReunionWatcherExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "ReunionWatcherExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
