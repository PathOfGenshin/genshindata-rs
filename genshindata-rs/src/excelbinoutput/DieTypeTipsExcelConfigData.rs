// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type DieTypeTipsExcelConfigData = Vec<DieTypeTipsExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct DieTypeTipsExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "dieType")]
    pub die_type: DieType,

    #[serde(rename = "tips")]
    pub tips: Vec<i64>,

    #[serde(rename = "monsterID")]
    pub monster_id: Option<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum DieType {
    #[serde(rename = "PLAYER_DIE_ABYSS")]
    PlayerDieAbyss,

    #[serde(rename = "PLAYER_DIE_DRAWN")]
    PlayerDieDrawn,

    #[serde(rename = "PLAYER_DIE_FALL")]
    PlayerDieFall,

    #[serde(rename = "PLAYER_DIE_KILL_BY_MONSTER")]
    PlayerDieKillByMonster,
}

pub fn load() -> Result<DieTypeTipsExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "DieTypeTipsExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
