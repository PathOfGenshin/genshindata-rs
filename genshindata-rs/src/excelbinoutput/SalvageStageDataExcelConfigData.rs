// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type SalvageStageDataExcelConfigData = Vec<SalvageStageDataExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct SalvageStageDataExcelConfigDatum {
    #[serde(rename = "stageId")]
    pub stage_id: i64,

    #[serde(rename = "ACCBNBEKLGK")]
    pub accbnbeklgk: i64,

    #[serde(rename = "FFNBPFJPEFJ")]
    pub ffnbpfjpefj: i64,

    #[serde(rename = "HNJCEBNAPNH")]
    pub hnjcebnapnh: Vec<i64>,

    #[serde(rename = "CJJLCGBIALO")]
    pub cjjlcgbialo: Vec<i64>,

    #[serde(rename = "DDHBIHLIGME")]
    pub ddhbihligme: Vec<Option<serde_json::Value>>,

    #[serde(rename = "PNCDLBGCHJB")]
    pub pncdlbgchjb: Vec<i64>,
}

pub fn load() -> Result<SalvageStageDataExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "SalvageStageDataExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
