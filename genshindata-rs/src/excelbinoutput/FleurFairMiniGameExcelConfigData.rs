// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type FleurFairMiniGameExcelConfigData = Vec<FleurFairMiniGameExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct FleurFairMiniGameExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "miniGameType")]
    pub mini_game_type: MiniGameType,

    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,

    #[serde(rename = "galleryId")]
    pub gallery_id: i64,

    #[serde(rename = "configId")]
    pub config_id: i64,

    #[serde(rename = "openDay")]
    pub open_day: i64,

    #[serde(rename = "questId")]
    pub quest_id: Option<i64>,

    #[serde(rename = "rewardRankLowTextMapHash")]
    pub reward_rank_low_text_map_hash: i64,

    #[serde(rename = "rewardRankMiddleTextMapHash")]
    pub reward_rank_middle_text_map_hash: i64,

    #[serde(rename = "rewardRankHighTextMapHash")]
    pub reward_rank_high_text_map_hash: i64,

    #[serde(rename = "watcherIdList")]
    pub watcher_id_list: Vec<i64>,

    #[serde(rename = "avatarIdList")]
    pub avatar_id_list: Vec<i64>,

    #[serde(rename = "avatarScore")]
    pub avatar_score: Vec<i64>,

    #[serde(rename = "tipsIdList")]
    pub tips_id_list: Vec<i64>,

    #[serde(rename = "tipsDescTextMapHash")]
    pub tips_desc_text_map_hash: i64,

    #[serde(rename = "pos")]
    pub pos: Vec<f64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum MiniGameType {
    #[serde(rename = "FLEUR_FAIR_MINI_GAME_BALLOON")]
    FleurFairMiniGameBalloon,

    #[serde(rename = "FLEUR_FAIR_MINI_GAME_FALL")]
    FleurFairMiniGameFall,

    #[serde(rename = "FLEUR_FAIR_MINI_GAME_MUSIC")]
    FleurFairMiniGameMusic,
}

pub fn load() -> Result<FleurFairMiniGameExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "FleurFairMiniGameExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
