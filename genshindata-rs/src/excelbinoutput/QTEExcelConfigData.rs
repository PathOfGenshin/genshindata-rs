// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

extern crate serde_derive;

pub type QteExcelConfigData = Vec<QteExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct QteExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "DKKOLADOEIN")]
    pub dkkoladoein: i64,

    #[serde(rename = "MCPBOFIHJIP")]
    pub mcpbofihjip: String,

    #[serde(rename = "NIHNINEDLJA")]
    pub nihninedlja: Vec<Dappdjjkkne>,

    #[serde(rename = "ONMPEEKOCCF")]
    pub onmpeekoccf: Vec<Onmpeekoccf>,

    #[serde(rename = "DAPPDJJKKNE")]
    pub dappdjjkkne: Vec<Dappdjjkkne>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct Dappdjjkkne {
    #[serde(rename = "param")]
    pub param: Vec<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct Onmpeekoccf {
    #[serde(rename = "type")]
    pub onmpeekoccf_type: Option<String>,

    #[serde(rename = "param")]
    pub param: Vec<i64>,
}

pub fn load() -> Result<QteExcelConfigData, crate::json::JsonError> {
    let path: std::path::PathBuf = [
        "GenshinData",
        "ExcelBinOutput",
        "QTEExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
