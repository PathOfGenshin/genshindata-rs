// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type MichiaeOverallExcelConfigData = Vec<MichiaeOverallExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct MichiaeOverallExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "activityId")]
    pub activity_id: i64,

    #[serde(rename = "offeringId")]
    pub offering_id: i64,

    #[serde(rename = "NBAMLGMOODB")]
    pub nbamlgmoodb: i64,

    #[serde(rename = "PBLAMDNBHOD")]
    pub pblamdnbhod: i64,

    #[serde(rename = "GDKBEGNMJKG")]
    pub gdkbegnmjkg: Vec<i64>,

    #[serde(rename = "EGJPHFIOFHB")]
    pub egjphfiofhb: i64,

    #[serde(rename = "AGGPLDBNCNC")]
    pub aggpldbncnc: f64,

    #[serde(rename = "JCLBKKMLFCO")]
    pub jclbkkmlfco: f64,

    #[serde(rename = "OCNIMEBBAPM")]
    pub ocnimebbapm: i64,

    #[serde(rename = "NBPIAFGEFJB")]
    pub nbpiafgefjb: f64,

    #[serde(rename = "DMDAFBMBBFI")]
    pub dmdafbmbbfi: i64,

    #[serde(rename = "IDONJAFDPHM")]
    pub idonjafdphm: i64,

    #[serde(rename = "JDFFFDPOOPN")]
    pub jdfffdpoopn: i64,
}

pub fn load() -> Result<MichiaeOverallExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "MichiaeOverallExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
