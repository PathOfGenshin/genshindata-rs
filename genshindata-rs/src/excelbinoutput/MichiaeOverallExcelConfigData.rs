// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type MichiaeOverallExcelConfigData = Vec<MichiaeOverallExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct MichiaeOverallExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "activityId")]
    pub activity_id: i64,

    #[serde(rename = "offeringId")]
    pub offering_id: i64,

    #[serde(rename = "BEDBODIOJFN")]
    pub bedbodiojfn: i64,

    #[serde(rename = "FJEOONOFMJL")]
    pub fjeoonofmjl: i64,

    #[serde(rename = "KCPCEAAPIBP")]
    pub kcpceaapibp: Vec<i64>,

    #[serde(rename = "LGGGEEAMANB")]
    pub lgggeeamanb: i64,

    #[serde(rename = "JHCEDPLJMOC")]
    pub jhcedpljmoc: f64,

    #[serde(rename = "KFCEMLNJFCD")]
    pub kfcemlnjfcd: f64,

    #[serde(rename = "PLHINHCFJEJ")]
    pub plhinhcfjej: i64,

    #[serde(rename = "LDLFHOJMJHF")]
    pub ldlfhojmjhf: f64,

    #[serde(rename = "LHKHNDGEBFF")]
    pub lhkhndgebff: i64,

    #[serde(rename = "LJOBAGPDEDI")]
    pub ljobagpdedi: i64,

    #[serde(rename = "KAGOLGKFLEC")]
    pub kagolgkflec: i64,
}

pub fn load() -> Result<MichiaeOverallExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "MichiaeOverallExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
