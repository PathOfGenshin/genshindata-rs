// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

extern crate serde_derive;

pub type MichiaeOverallExcelConfigData = Vec<MichiaeOverallExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct MichiaeOverallExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "activityId")]
    pub activity_id: i64,

    #[serde(rename = "offeringId")]
    pub offering_id: i64,

    #[serde(rename = "CDKECIMACCK")]
    pub cdkecimacck: i64,

    #[serde(rename = "JEHGBBOGLIA")]
    pub jehgbboglia: i64,

    #[serde(rename = "EBEPENMFNKG")]
    pub ebepenmfnkg: Vec<i64>,

    #[serde(rename = "CGBPBOPMNLM")]
    pub cgbpbopmnlm: i64,

    #[serde(rename = "GNKOJJBABFE")]
    pub gnkojjbabfe: f64,

    #[serde(rename = "OMPLMPNPEMK")]
    pub omplmpnpemk: f64,

    #[serde(rename = "GNEMGJAAHCF")]
    pub gnemgjaahcf: i64,

    #[serde(rename = "NELCPCDAIBI")]
    pub nelcpcdaibi: f64,

    #[serde(rename = "KCKJIGDMJGK")]
    pub kckjigdmjgk: i64,

    #[serde(rename = "LEDJNJPMBIL")]
    pub ledjnjpmbil: i64,

    #[serde(rename = "BOAFLLHCOJI")]
    pub boafllhcoji: i64,
}

pub fn load() -> Result<MichiaeOverallExcelConfigData, crate::json::JsonError> {
    let path: std::path::PathBuf = [
        "GenshinData",
        "ExcelBinOutput",
        "MichiaeOverallExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
