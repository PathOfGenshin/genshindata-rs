/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type ForgeExcelConfigData = Vec<ForgeExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ForgeExcelConfigDatum {
    pub id: i64,
    pub player_level: i64,
    pub is_default_show: Option<bool>,
    pub effective_world_levels: Vec<i64>,
    pub forge_type: i64,
    pub show_item_id: i64,
    pub show_consume_item_id: Option<i64>,
    pub result_item_id: Option<i64>,
    pub result_item_count: i64,
    pub forge_time: i64,
    pub queue_num: i64,
    pub scoin_cost: i64,
    pub random_items: Vec<RandomItem>,
    pub material_items: Vec<MaterialItem>,
    pub priority: i64,
    pub forge_point: Option<i64>,
    pub forge_point_notice_text_map_hash: i64,
    pub main_random_drop_id: Option<i64>,
    #[serde(rename = "GHLNIACIICJ")]
    pub ghlniaciicj: Option<bool>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct MaterialItem {
    pub id: Option<i64>,
    pub count: Option<i64>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct RandomItem {
}
