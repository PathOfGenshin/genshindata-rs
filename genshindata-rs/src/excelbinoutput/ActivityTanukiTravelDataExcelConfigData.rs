// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type ActivityTanukiTravelDataExcelConfigData = Vec<ActivityTanukiTravelDataExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ActivityTanukiTravelDataExcelConfigDatum {
    #[serde(rename = "Id")]
    pub id: i64,

    #[serde(rename = "activityId")]
    pub activity_id: i64,

    #[serde(rename = "guideQuestId")]
    pub guide_quest_id: i64,

    #[serde(rename = "ODPHGIDKCIM")]
    pub odphgidkcim: Vec<i64>,

    #[serde(rename = "rewardPreviewId")]
    pub reward_preview_id: i64,

    #[serde(rename = "NJKCHNFADNO")]
    pub njkchnfadno: i64,

    #[serde(rename = "KKKPNFBGLDJ")]
    pub kkkpnfbgldj: i64,

    #[serde(rename = "LDCGFHNGHOH")]
    pub ldcgfhnghoh: Vec<i64>,

    #[serde(rename = "pushTipsId")]
    pub push_tips_id: i64,
}

pub fn load() -> Result<ActivityTanukiTravelDataExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "ActivityTanukiTravelDataExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
