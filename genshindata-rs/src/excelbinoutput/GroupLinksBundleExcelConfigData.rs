// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type GroupLinksBundleExcelConfigData = Vec<GroupLinksBundleExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct GroupLinksBundleExcelConfigDatum {
    #[serde(rename = "Id")]
    pub id: i64,

    #[serde(rename = "groupList")]
    pub group_list: Vec<i64>,

    #[serde(rename = "OKFOCPDDCDO")]
    pub okfocpddcdo: i64,

    #[serde(rename = "PFBMIKEOOCL")]
    pub pfbmikeoocl: Option<i64>,

    #[serde(rename = "rewardType")]
    pub reward_type: Option<RewardType>,

    #[serde(rename = "rewardId")]
    pub reward_id: Option<i64>,

    #[serde(rename = "reviseLevel")]
    pub revise_level: Option<i64>,

    #[serde(rename = "icon")]
    pub icon: String,

    #[serde(rename = "nameTextMapHash")]
    pub name_text_map_hash: i64,

    #[serde(rename = "HFJGMLKBMLN")]
    pub hfjgmlkbmln: i64,

    #[serde(rename = "FKFIECEDCBC")]
    pub fkfiecedcbc: Option<i64>,

    #[serde(rename = "KCELBGLFECA")]
    pub kcelbglfeca: Option<bool>,

    #[serde(rename = "JDPKJGFIFAF")]
    pub jdpkjgfifaf: Option<bool>,

    #[serde(rename = "EIMMHFFLCFN")]
    pub eimmhfflcfn: Option<i64>,

    #[serde(rename = "playType")]
    pub play_type: Option<String>,

    #[serde(rename = "KLFINLFAJFM")]
    pub klfinlfajfm: Option<bool>,

    #[serde(rename = "ODEEMOKBLPL")]
    pub odeemokblpl: Option<i64>,

    #[serde(rename = "KIJJLIOONJN")]
    pub kijjlioonjn: Option<bool>,

    #[serde(rename = "KDCIDCIHPDG")]
    pub kdcidcihpdg: Option<bool>,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum RewardType {
    #[serde(rename = "FINISH")]
    Finish,
}

pub fn load() -> Result<GroupLinksBundleExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "GroupLinksBundleExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
