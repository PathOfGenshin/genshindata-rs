/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type GroupLinksBundleExcelConfigData = Vec<GroupLinksBundleExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct GroupLinksBundleExcelConfigDatum {
    #[serde(rename = "Id")]
    pub id: i64,
    pub group_list: Vec<i64>,
    pub hint_group: i64,
    pub hint_radius: Option<i64>,
    pub reward_type: Option<RewardType>,
    pub reward_id: Option<i64>,
    pub revise_level: Option<i64>,
    pub icon: String,
    pub name_text_map_hash: i64,
    pub tips_text_map_hash: i64,
    pub ui_radius: Option<i64>,
    pub guest_show: Option<bool>,
    pub is_default_show_mark: Option<bool>,
    pub track_id: Option<i64>,
    pub play_type: Option<String>,
    pub track_show_mark_only: Option<bool>,
    #[serde(rename = "AGKOFDMDJEN")]
    pub agkofdmdjen: Option<i64>,
    pub show_area_on_map: Option<bool>,
    #[serde(rename = "ECCEDOAKGPL")]
    pub eccedoakgpl: Option<bool>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub enum RewardType {
    #[serde(rename = "FINISH")]
    Finish,
}
