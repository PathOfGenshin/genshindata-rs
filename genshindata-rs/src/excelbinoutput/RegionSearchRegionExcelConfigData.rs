// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type RegionSearchRegionExcelConfigData = Vec<RegionSearchRegionExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct RegionSearchRegionExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "regionCenter")]
    pub region_center: Vec<f64>,

    #[serde(rename = "regionRadius")]
    pub region_radius: f64,

    #[serde(rename = "oneoffGroupList")]
    pub oneoff_group_list: Vec<i64>,

    #[serde(rename = "oneoffGroupNum")]
    pub oneoff_group_num: i64,

    #[serde(rename = "recycleGroupList")]
    pub recycle_group_list: Vec<i64>,

    #[serde(rename = "recycleGroupNum")]
    pub recycle_group_num: i64,

    #[serde(rename = "recycleType")]
    pub recycle_type: String,

    #[serde(rename = "recycleParam")]
    pub recycle_param: i64,
}

pub fn load() -> Result<RegionSearchRegionExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "RegionSearchRegionExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
