// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type ActivityTanukiTravelRouteDataExcelConfigData = Vec<ActivityTanukiTravelRouteDataExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ActivityTanukiTravelRouteDataExcelConfigDatum {
    #[serde(rename = "Id")]
    pub id: i64,

    #[serde(rename = "MMLOKMKDJGC")]
    pub mmlokmkdjgc: i64,

    #[serde(rename = "PNBNAELKHHN")]
    pub pnbnaelkhhn: i64,

    #[serde(rename = "questId")]
    pub quest_id: i64,

    #[serde(rename = "AFCGEBNNIJN")]
    pub afcgebnnijn: i64,

    #[serde(rename = "watcherId")]
    pub watcher_id: i64,

    #[serde(rename = "ONGMJJMHIAM")]
    pub ongmjjmhiam: i64,

    #[serde(rename = "titleTextMapHash")]
    pub title_text_map_hash: i64,

    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,

    #[serde(rename = "IOPGEHCPEMP")]
    pub iopgehcpemp: i64,

    #[serde(rename = "IHFADDCEMPF")]
    pub ihfaddcempf: i64,

    #[serde(rename = "LEEKKKPLEIC")]
    pub leekkkpleic: Option<i64>,

    #[serde(rename = "MDGFJFBAFPB")]
    pub mdgfjfbafpb: Option<i64>,
}

pub fn load() -> Result<ActivityTanukiTravelRouteDataExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "ActivityTanukiTravelRouteDataExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
