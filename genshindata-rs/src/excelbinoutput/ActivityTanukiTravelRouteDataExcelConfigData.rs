// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type ActivityTanukiTravelRouteDataExcelConfigData = Vec<ActivityTanukiTravelRouteDataExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ActivityTanukiTravelRouteDataExcelConfigDatum {
    #[serde(rename = "Id")]
    pub id: i64,

    #[serde(rename = "IKBBOKCILNN")]
    pub ikbbokcilnn: i64,

    #[serde(rename = "HGBGJJPDLLJ")]
    pub hgbgjjpdllj: i64,

    #[serde(rename = "questId")]
    pub quest_id: i64,

    #[serde(rename = "IPGJIOGLDHI")]
    pub ipgjiogldhi: i64,

    #[serde(rename = "watcherId")]
    pub watcher_id: i64,

    #[serde(rename = "CFFPOCPHADF")]
    pub cffpocphadf: i64,

    #[serde(rename = "titleTextMapHash")]
    pub title_text_map_hash: i64,

    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,

    #[serde(rename = "DFKMBLOAMIB")]
    pub dfkmbloamib: i64,

    #[serde(rename = "IHKLNHBKHAC")]
    pub ihklnhbkhac: i64,

    #[serde(rename = "OIOBLBHCOAG")]
    pub oioblbhcoag: Option<i64>,

    #[serde(rename = "DCLKGHLOACJ")]
    pub dclkghloacj: Option<i64>,
}

pub fn load() -> Result<ActivityTanukiTravelRouteDataExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "ActivityTanukiTravelRouteDataExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
