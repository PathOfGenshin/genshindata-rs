// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type LanV3OverAllExcelConfigData = Vec<LanV3OverAllExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct LanV3OverAllExcelConfigDatum {
    #[serde(rename = "activityId")]
    pub activity_id: i64,

    #[serde(rename = "openTime")]
    pub open_time: Vec<i64>,

    #[serde(rename = "AEOGEGEAPOP")]
    pub aeogegeapop: Vec<i64>,

    #[serde(rename = "FCKPEOHDBHL")]
    pub fckpeohdbhl: i64,

    #[serde(rename = "KCKPEACIFOB")]
    pub kckpeacifob: i64,

    #[serde(rename = "APAEDFHINAJ")]
    pub apaedfhinaj: i64,

    #[serde(rename = "LIBALEBPONH")]
    pub libalebponh: i64,

    #[serde(rename = "PINIAMEPKKI")]
    pub piniamepkki: i64,

    #[serde(rename = "IBHDFINKLCN")]
    pub ibhdfinklcn: i64,

    #[serde(rename = "GCNNCNIPKBC")]
    pub gcnncnipkbc: i64,

    #[serde(rename = "EPJHPPMHJED")]
    pub epjhppmhjed: i64,

    #[serde(rename = "GALOLPKNJIF")]
    pub galolpknjif: i64,

    #[serde(rename = "LEMENNMAFPL")]
    pub lemennmafpl: i64,
}

pub fn load() -> Result<LanV3OverAllExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "LanV3OverAllExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
