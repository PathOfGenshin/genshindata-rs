// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type LanV3OverAllExcelConfigData = Vec<LanV3OverAllExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct LanV3OverAllExcelConfigDatum {
    #[serde(rename = "activityId")]
    pub activity_id: i64,

    #[serde(rename = "openTime")]
    pub open_time: Vec<i64>,

    #[serde(rename = "AMKALDDNMDP")]
    pub amkalddnmdp: Vec<i64>,

    #[serde(rename = "NBHCEOKBPHM")]
    pub nbhceokbphm: i64,

    #[serde(rename = "BNANOGALCBN")]
    pub bnanogalcbn: i64,

    #[serde(rename = "EIFANFKFNHO")]
    pub eifanfkfnho: i64,

    #[serde(rename = "MELGDHAGHAM")]
    pub melgdhagham: i64,

    #[serde(rename = "DBPODKCLNFG")]
    pub dbpodkclnfg: i64,

    #[serde(rename = "NGNKOBMEDNM")]
    pub ngnkobmednm: i64,

    #[serde(rename = "IAAFJBOAAJI")]
    pub iaafjboaaji: i64,

    #[serde(rename = "JNGOIIFOPFJ")]
    pub jngoiifopfj: i64,

    #[serde(rename = "FHINMEKJBCF")]
    pub fhinmekjbcf: i64,

    #[serde(rename = "CMODICJOCPN")]
    pub cmodicjocpn: i64,
}

pub fn load() -> Result<LanV3OverAllExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "LanV3OverAllExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
