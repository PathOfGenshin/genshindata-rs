// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type HomeWorldComfortLevelExcelConfigData = Vec<HomeWorldComfortLevelExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct HomeWorldComfortLevelExcelConfigDatum {
    #[serde(rename = "levelID")]
    pub level_id: i64,

    #[serde(rename = "homeCoinProduceRate")]
    pub home_coin_produce_rate: i64,

    #[serde(rename = "companionshipExpProduceRate")]
    pub companionship_exp_produce_rate: i64,

    #[serde(rename = "levelNameTextMapHash")]
    pub level_name_text_map_hash: i64,

    #[serde(rename = "levelIconHash")]
    pub level_icon_hash: i64,

    #[serde(rename = "comfort")]
    pub comfort: Option<i64>,
}

pub fn load() -> Result<HomeWorldComfortLevelExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "HomeWorldComfortLevelExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
