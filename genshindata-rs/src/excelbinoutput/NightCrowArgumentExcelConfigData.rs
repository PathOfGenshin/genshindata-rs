/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type NightCrowArgumentExcelConfigData = Vec<NightCrowArgumentExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct NightCrowArgumentExcelConfigDatum {
    pub argument_id: i64,
    pub gadget_state_list: Vec<i64>,
    pub pos_offset: PosOffset,
    pub rotation: String,
    pub position_list: String,
    pub limit_position_list: String,
    pub limit_center_position: String,
    pub invalid_state_limit_position_list: InvalidStateLimitPositionList,
    pub invalid_state_limit_center_position: InvalidStateLimitCenterPosition,
    pub fov: String,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub enum InvalidStateLimitCenterPosition {
    #[serde(rename = "")]
    Empty,
    #[serde(rename = "-14.89,86.69,160.33")]
    The1489866916033,
    #[serde(rename = "28.44794,43,-10.34")]
    The2844794431034,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub enum InvalidStateLimitPositionList {
    #[serde(rename = "")]
    Empty,
    #[serde(rename = "-1,1,-0.01,1,-2,2")]
    The11001122,
    #[serde(rename = "-1,1,-0.457,2,-2,2.6")]
    The1104572226,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub enum PosOffset {
    #[serde(rename = "0,1.5,0")]
    The0150,
}
