// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type InstableSprayBuffExcelConfigData = Vec<InstableSprayBuffExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct InstableSprayBuffExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "BAJIHJHAKCG")]
    pub bajihjhakcg: String,

    #[serde(rename = "ENMBNLNIOED")]
    pub enmbnlnioed: String,

    #[serde(rename = "IJFLOIFAJHH")]
    pub ijfloifajhh: i64,

    #[serde(rename = "elementType")]
    pub element_type: i64,

    #[serde(rename = "buffNameTextMapHash")]
    pub buff_name_text_map_hash: i64,

    #[serde(rename = "NBBAGHJFMAP")]
    pub nbbaghjfmap: i64,

    #[serde(rename = "HJIPLAPKEHM")]
    pub hjiplapkehm: Vec<String>,
}

pub fn load() -> Result<InstableSprayBuffExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "InstableSprayBuffExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
