/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type GcgGameRewardExcelConfigData = Vec<GcgGameRewardExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub struct GcgGameRewardExcelConfigDatum {
    #[serde(rename = "levelId")]
    pub level_id: i64,
    pub pajppcaihdo: Vec<Pajppcaihdo>,
    #[serde(rename = "levelNameTextMapHash")]
    pub level_name_text_map_hash: i64,
    pub jlodmighffj: i64,
    pub nanpjkaknkb: Vec<i64>,
    pub gcopcphkfmc: Vec<i64>,
    pub apolcbmljib: Vec<i64>,
    #[serde(rename = "failTips")]
    pub fail_tips: Vec<i64>,
    pub fpecffpfibi: Option<Fpecffpfibi>,
    pub bhbhbekhjcj: i64,
    pub apaclcnlnkm: Option<String>,
    pub ogbjgddkmae: Vec<Ogbjgddkmae>,
    pub mkcooppmnck: Mkcooppmnck,
    pub ddlpepbaigd: Option<bool>,
    #[serde(rename = "groupId")]
    pub group_id: Option<i64>,
    pub pikfbhgmhbh: Option<bool>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Fpecffpfibi {
    #[serde(rename = "PVE_MONSTER")]
    PveMonster,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub enum Mkcooppmnck {
    #[serde(rename = "")]
    Empty,
    #[serde(rename = "Gcg_Loading_Bg2")]
    GcgLoadingBg2,
    #[serde(rename = "Gcg_Loading_Bg3")]
    GcgLoadingBg3,
    #[serde(rename = "Gcg_Loading_Bg4")]
    GcgLoadingBg4,
    #[serde(rename = "Gcg_Loading_Bg5")]
    GcgLoadingBg5,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Ogbjgddkmae {
    pub param_list: Vec<i64>,
    #[serde(rename = "type")]
    pub ogbjgddkmae_type: Option<Type>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Type {
    #[serde(rename = "FINISH_LEVEL_CHALLENGE")]
    FinishLevelChallenge,
    #[serde(rename = "GCG_LEVEL")]
    GcgLevel,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Pajppcaihdo {
    pub challenge_id: Option<i64>,
    pub reward_id: Option<i64>,
}
