/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type RainbowPrinceRepairLevelExcelConfigData = Vec<RainbowPrinceRepairLevelExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub struct RainbowPrinceRepairLevelExcelConfigDatum {
    #[serde(rename = "pushTipsID")]
    pub push_tips_id: i64,
    pub afahakgdndi: Option<i64>,
    #[serde(rename = "levelDescTextMapHash")]
    pub level_desc_text_map_hash: i64,
    pub gphjnanjclj: i64,
    pub ikdgjdolegb: i64,
    pub mkpppigdjop: Vec<i64>,
    pub ickmkifibdn: Vec<f64>,
    pub nomigajdgig: i64,
    #[serde(rename = "levelID")]
    pub level_id: i64,
    #[serde(rename = "activityID")]
    pub activity_id: i64,
    #[serde(rename = "nameTextMapHash")]
    pub name_text_map_hash: i64,
    #[serde(rename = "questList")]
    pub quest_list: Vec<i64>,
    pub hbdofodpcfo: Vec<i64>,
    #[serde(rename = "watcherList")]
    pub watcher_list: Vec<i64>,
    #[serde(rename = "openDay")]
    pub open_day: Option<i64>,
    pub kjballpjmej: Vec<String>,
    pub pkbhgfbaicn: Vec<Pkbhgfbaicn>,
    pub ikfkhdjonhh: Vec<String>,
    pub hpbgoogmani: Option<bool>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Pkbhgfbaicn {
    #[serde(rename = "ACTIVITY_LEVEL_COND_TYPE_DEFAULT")]
    ActivityLevelCondTypeDefault,
    #[serde(rename = "ACTIVITY_LEVEL_COND_TYPE_OPEN_DAY")]
    ActivityLevelCondTypeOpenDay,
    #[serde(rename = "ACTIVITY_LEVEL_COND_TYPE_PRE_LEVEL_PLAYED")]
    ActivityLevelCondTypePreLevelPlayed,
}
