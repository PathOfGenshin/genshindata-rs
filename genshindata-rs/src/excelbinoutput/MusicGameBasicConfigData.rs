/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};
use std::collections::HashMap;

pub type MusicGameBasicConfigData = Vec<MusicGameBasicConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub struct MusicGameBasicConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,
    #[serde(rename = "musicID")]
    pub music_id: i64,
    #[serde(rename = "musicLevel")]
    pub music_level: i64,
    #[serde(rename = "jsonPath")]
    pub json_path: String,
    pub nbepaeephke: i64,
    #[serde(rename = "successLatePoint")]
    pub success_late_point: i64,
    #[serde(rename = "scoreLevelList")]
    pub score_level_list: Vec<i64>,
    #[serde(rename = "scoreOneKey")]
    pub score_one_key: i64,
    pub ljoebdghikk: i64,
    pub flgdcfggabn: i64,
    pub gfbnhabokob: Option<i64>,
    pub fjllpblhfhb: HashMap<String, f64>,
    #[serde(rename = "comboConfig")]
    pub combo_config: Vec<i64>,
    #[serde(rename = "scaleRange")]
    pub scale_range: i64,
    pub cpfjfcamoch: String,
    pub jhkcfekiipm: String,
    pub jaicgoohmnc: i64,
    pub llmmelhmkfa: Vec<Elfmhfkhiel>,
    #[serde(rename = "unlockTipsTextMapHash")]
    pub unlock_tips_text_map_hash: i64,
    pub elfmhfkhiel: Vec<Elfmhfkhiel>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct Elfmhfkhiel {
}
