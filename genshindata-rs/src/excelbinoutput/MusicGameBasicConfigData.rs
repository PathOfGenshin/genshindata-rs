/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};
use std::collections::HashMap;

pub type MusicGameBasicConfigData = Vec<MusicGameBasicConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct MusicGameBasicConfigDatum {
    pub id: i64,
    #[serde(rename = "musicID")]
    pub music_id: i64,
    pub music_level: i64,
    pub json_path: String,
    pub scale_time: i64,
    pub late_drop_time: i64,
    pub score_level_list: Vec<i64>,
    pub score_one_key: i64,
    pub score_great: i64,
    pub score_long_press: i64,
    pub bpm: Option<i64>,
    pub bpm_dict: HashMap<String, f64>,
    pub ugc_beat_division_options: Vec<i64>,
    pub ugc_default_beat_division: i64,
    pub simple_hint_json_path: String,
    pub complex_hint_json_path: String,
    pub note_count: i64,
    pub combo_config: Vec<OConfig>,
    pub unlock_tips_text_map_hash: i64,
    pub solo_config: Vec<OConfig>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct OConfig {
}
