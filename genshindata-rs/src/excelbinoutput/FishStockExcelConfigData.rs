/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};
use std::collections::HashMap;

pub type FishStockExcelConfigData = Vec<FishStockExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct FishStockExcelConfigDatum {
    pub id: i64,
    #[serde(rename = "type")]
    pub fish_stock_excel_config_datum_type: Type,
    pub fish_weight: HashMap<String, i64>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Type {
    #[serde(rename = "FISH_STOCK_TYPE_ANY")]
    FishStockTypeAny,
    #[serde(rename = "FISH_STOCK_TYPE_DAY")]
    FishStockTypeDay,
    #[serde(rename = "FISH_STOCK_TYPE_NIGHT")]
    FishStockTypeNight,
}
