// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type GcgCardFilterExcelConfigData = Vec<GcgCardFilterExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct GcgCardFilterExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "EGGANPFIEJK")]
    pub egganpfiejk: Option<bool>,

    #[serde(rename = "AJHKJIBPFLD")]
    pub ajhkjibpfld: String,

    #[serde(rename = "MENKJOIAGAI")]
    pub menkjoiagai: i64,

    #[serde(rename = "paramList")]
    pub param_list: Vec<i64>,

    #[serde(rename = "EJCPNMPJEDO")]
    pub ejcpnmpjedo: i64,

    #[serde(rename = "PBJBCNKKFEK")]
    pub pbjbcnkkfek: Option<bool>,

    #[serde(rename = "DFFPNNAALHO")]
    pub dffpnnaalho: Option<bool>,
}

pub fn load() -> Result<GcgCardFilterExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "GCGCardFilterExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
