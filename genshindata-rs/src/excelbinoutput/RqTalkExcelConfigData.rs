/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type RqTalkExcelConfigData = Vec<RqTalkExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct RqTalkExcelConfigDatum {
    pub id: i64,
    pub begin_way: Option<BeginWay>,
    pub begin_cond: Vec<BeginCond>,
    pub priority: Option<i64>,
    pub next_talks: Vec<i64>,
    pub next_random_talks: Vec<i64>,
    pub init_dialog: i64,
    pub npc_id: Vec<i64>,
    pub perform_cfg: String,
    pub quest_id: i64,
    pub begin_cond_comb: Option<BeginCondComb>,
    pub hero_talk: Option<HeroTalk>,
    pub show_random_talk_count: Option<i64>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct BeginCond {
    #[serde(rename = "type")]
    pub begin_cond_type: Option<Type>,
    pub param: Vec<String>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Type {
    #[serde(rename = "QUEST_COND_ITEM_GIVING_ACTIVED")]
    QuestCondItemGivingActived,
    #[serde(rename = "QUEST_COND_ITEM_GIVING_FINISHED")]
    QuestCondItemGivingFinished,
    #[serde(rename = "QUEST_COND_ITEM_NUM_LESS_THAN")]
    QuestCondItemNumLessThan,
    #[serde(rename = "QUEST_COND_PACK_HAVE_ITEM")]
    QuestCondPackHaveItem,
    #[serde(rename = "QUEST_COND_QUEST_GLOBAL_VAR_EQUAL")]
    QuestCondQuestGlobalVarEqual,
    #[serde(rename = "QUEST_COND_STATE_EQUAL")]
    QuestCondStateEqual,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum BeginCondComb {
    #[serde(rename = "LOGIC_A_AND_ETCOR")]
    LogicAAndEtcor,
    #[serde(rename = "LOGIC_AND")]
    LogicAnd,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum BeginWay {
    #[serde(rename = "TALK_BEGIN_MANUAL")]
    TalkBeginManual,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum HeroTalk {
    #[serde(rename = "TALK_HERO_MAIN")]
    TalkHeroMain,
}
