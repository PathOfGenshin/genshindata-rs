/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type CoopChapterExcelConfigData = Vec<CoopChapterExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CoopChapterExcelConfigDatum {
    pub id: i64,
    pub avatar_id: i64,
    pub chapter_name_text_map_hash: i64,
    pub coop_page_title_text_map_hash: i64,
    pub chapter_sort_id: i64,
    pub avatar_sort_id: i64,
    pub chapter_icon: String,
    pub unlock_cond: Vec<UnlockCond>,
    pub unlock_cond_tips: Vec<i64>,
    pub open_material_id: i64,
    pub open_material_num: i64,
    pub begin_time_str: String,
    pub confidence_value: i64,
    pub point_graph_path: String,
    pub graph_x_ratio: f64,
    pub graph_y_ratio: f64,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct UnlockCond {
    pub cond_type: Option<CondType>,
    pub args: Vec<i64>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum CondType {
    #[serde(rename = "COOP_COND_CHAPTER_END_ALL_FINISH")]
    CoopCondChapterEndAllFinish,
    #[serde(rename = "COOP_COND_FINISH_QUEST")]
    CoopCondFinishQuest,
    #[serde(rename = "COOP_COND_PLAYER_LEVEL")]
    CoopCondPlayerLevel,
}
