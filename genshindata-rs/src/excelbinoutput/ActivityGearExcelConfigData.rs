// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type ActivityGearExcelConfigData = Vec<ActivityGearExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ActivityGearExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "activityId")]
    pub activity_id: i64,

    #[serde(rename = "IBBDNELBPHN")]
    pub ibbdnelbphn: Vec<i64>,

    #[serde(rename = "KMNCJHDMIGE")]
    pub kmncjhdmige: f64,

    #[serde(rename = "DKIEADIPOPO")]
    pub dkieadipopo: f64,

    #[serde(rename = "FMGCFKJPIFN")]
    pub fmgcfkjpifn: String,

    #[serde(rename = "AEJBHDONLED")]
    pub aejbhdonled: String,

    #[serde(rename = "MMIKBCGCCGP")]
    pub mmikbcgccgp: String,

    #[serde(rename = "FOEAKPLBMKK")]
    pub foeakplbmkk: String,

    #[serde(rename = "LHMOCFPDNHM")]
    pub lhmocfpdnhm: String,

    #[serde(rename = "pushTipsId")]
    pub push_tips_id: i64,

    #[serde(rename = "watcherIdList")]
    pub watcher_id_list: Vec<i64>,

    #[serde(rename = "DEIDBCMNAMN")]
    pub deidbcmnamn: f64,
}

pub fn load() -> Result<ActivityGearExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "ActivityGearExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
