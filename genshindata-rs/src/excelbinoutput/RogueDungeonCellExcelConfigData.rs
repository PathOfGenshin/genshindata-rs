// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type RogueDungeonCellExcelConfigData = Vec<RogueDungeonCellExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct RogueDungeonCellExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "dungeonId")]
    pub dungeon_id: i64,

    #[serde(rename = "MLKMHHENNBC")]
    pub mlkmhhennbc: i64,

    #[serde(rename = "PPKGIPFGLLB")]
    pub ppkgipfgllb: Vec<f64>,

    #[serde(rename = "HABKJEJFPEG")]
    pub habkjejfpeg: Vec<i64>,

    #[serde(rename = "MEEMCPGMIOD")]
    pub meemcpgmiod: Vec<i64>,

    #[serde(rename = "groupId")]
    pub group_id: i64,

    #[serde(rename = "DCEFPKHOMAJ")]
    pub dcefpkhomaj: i64,

    #[serde(rename = "BNFGJFNCAOP")]
    pub bnfgjfncaop: Option<f64>,

    #[serde(rename = "LMDGECNICDE")]
    pub lmdgecnicde: f64,

    #[serde(rename = "OBAOLHHEOFD")]
    pub obaolhheofd: f64,

    #[serde(rename = "NJDGNJLPDLI")]
    pub njdgnjlpdli: Option<Njdgnjlpdli>,

    #[serde(rename = "BKHMGNBACIP")]
    pub bkhmgnbacip: Option<bool>,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Njdgnjlpdli {
    #[serde(rename = "ROGUE_CELL_TYPE_BOSS")]
    RogueCellTypeBoss,

    #[serde(rename = "ROGUE_CELL_TYPE_CHEST")]
    RogueCellTypeChest,

    #[serde(rename = "ROGUE_CELL_TYPE_INIT")]
    RogueCellTypeInit,
}

pub fn load() -> Result<RogueDungeonCellExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "RogueDungeonCellExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
