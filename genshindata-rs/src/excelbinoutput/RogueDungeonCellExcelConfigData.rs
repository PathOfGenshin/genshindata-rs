// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type RogueDungeonCellExcelConfigData = Vec<RogueDungeonCellExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct RogueDungeonCellExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "dungeonId")]
    pub dungeon_id: i64,

    #[serde(rename = "PFDAIGJCKJK")]
    pub pfdaigjckjk: i64,

    #[serde(rename = "LPMHHEINGNM")]
    pub lpmhheingnm: Vec<f64>,

    #[serde(rename = "JPLILPBLAAH")]
    pub jplilpblaah: Vec<i64>,

    #[serde(rename = "ELNLIDBICAE")]
    pub elnlidbicae: Vec<i64>,

    #[serde(rename = "groupId")]
    pub group_id: i64,

    #[serde(rename = "PGKNNLNJKKC")]
    pub pgknnlnjkkc: i64,

    #[serde(rename = "ABKBHAIGDFD")]
    pub abkbhaigdfd: Option<f64>,

    #[serde(rename = "JCJDJGPFDGM")]
    pub jcjdjgpfdgm: f64,

    #[serde(rename = "EHAMKBDLNFA")]
    pub ehamkbdlnfa: f64,

    #[serde(rename = "BJLOOCFPOPC")]
    pub bjloocfpopc: Option<Bjloocfpopc>,

    #[serde(rename = "APOOAILJILC")]
    pub apooailjilc: Option<bool>,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Bjloocfpopc {
    #[serde(rename = "ROGUE_CELL_TYPE_BOSS")]
    RogueCellTypeBoss,

    #[serde(rename = "ROGUE_CELL_TYPE_CHEST")]
    RogueCellTypeChest,

    #[serde(rename = "ROGUE_CELL_TYPE_INIT")]
    RogueCellTypeInit,
}

pub fn load() -> Result<RogueDungeonCellExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "RogueDungeonCellExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
