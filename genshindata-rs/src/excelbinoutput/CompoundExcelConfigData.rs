/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type CompoundExcelConfigData = Vec<CompoundExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CompoundExcelConfigDatum {
    pub id: i64,
    #[serde(rename = "groupID")]
    pub group_id: i64,
    pub name_text_map_hash: i64,
    pub rank_level: i64,
    #[serde(rename = "type")]
    pub compound_excel_config_datum_type: Type,
    pub is_default_unlocked: Option<bool>,
    pub cost_time: i64,
    pub queue_size: i64,
    pub input_vec: Vec<PutVec>,
    pub output_vec: Vec<PutVec>,
    pub icon: String,
    pub desc_text_map_hash: i64,
    pub count_desc_text_map_hash: i64,
    pub drop_id: Option<i64>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Type {
    #[serde(rename = "COMPOUND_COOK")]
    CompoundCook,
    #[serde(rename = "COMPOUND_RANDOM_COOK")]
    CompoundRandomCook,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct PutVec {
    pub id: Option<i64>,
    pub count: Option<i64>,
}
