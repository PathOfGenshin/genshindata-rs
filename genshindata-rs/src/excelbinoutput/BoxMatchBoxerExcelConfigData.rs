/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type BoxMatchBoxerExcelConfigData = Vec<BoxMatchBoxerExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub struct BoxMatchBoxerExcelConfigDatum {
    pub kpnmfgoggch: i64,
    pub acopijkcjdk: String,
    pub akdjkglekcn: Akdjkglekcn,
    #[serde(rename = "skillCD")]
    pub skill_cd: Option<i64>,
    pub ammeponapba: Ammeponapba,
    #[serde(rename = "skillNameTextMapHash")]
    pub skill_name_text_map_hash: i64,
    #[serde(rename = "skillDescTextMapHash")]
    pub skill_desc_text_map_hash: i64,
    pub jeojkeghnnp: Vec<Jeojkeghnnp>,
    pub honaddhilin: Honaddhilin,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub enum Akdjkglekcn {
    #[serde(rename = "")]
    Empty,
    #[serde(rename = "GV_BoxMatch_StartBurst")]
    GvBoxMatchStartBurst,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub enum Ammeponapba {
    #[serde(rename = "ART/UI/Atlas/SkillIcons/Btn_BoxMatch_FireCracker")]
    ArtUiAtlasSkillIconsBtnBoxMatchFireCracker,
    #[serde(rename = "ART/UI/Atlas/SkillIcons/Btn_BoxMatch_SugarGlass")]
    ArtUiAtlasSkillIconsBtnBoxMatchSugarGlass,
    #[serde(rename = "")]
    Empty,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub enum Honaddhilin {
    #[serde(rename = "BurstUnavailable")]
    BurstUnavailable,
    #[serde(rename = "")]
    Empty,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub enum Jeojkeghnnp {
    #[serde(rename = "ElementFrozen")]
    ElementFrozen,
    #[serde(rename = "ElementPetrifaction")]
    ElementPetrifaction,
    Struggle,
}
