// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

use std::env;

extern crate serde_derive;

pub type FishSkillExcelConfigData = Vec<FishSkillExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct FishSkillExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "skillCategory")]
    pub skill_category: SkillCategory,

    #[serde(rename = "IGNFAMBBNAM")]
    pub ignfambbnam: Ignfambbnam,

    #[serde(rename = "param")]
    pub param: Vec<f64>,

    #[serde(rename = "LLIPBAIEACC")]
    pub llipbaieacc: Option<f64>,

    #[serde(rename = "PKOLMDNJHNE")]
    pub pkolmdnjhne: Vec<f64>,

    #[serde(rename = "PCHIAAFPPIA")]
    pub pchiaafppia: Vec<f64>,

    #[serde(rename = "EPECOMOPMAN")]
    pub epecomopman: Vec<i64>,

    #[serde(rename = "MBDDOKDBOJL")]
    pub mbddokdbojl: Vec<f64>,

    #[serde(rename = "duration")]
    pub duration: f64,

    #[serde(rename = "priority")]
    pub priority: i64,

    #[serde(rename = "EIFJBBNKLAA")]
    pub eifjbbnklaa: Option<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Ignfambbnam {
    #[serde(rename = "FISH_SKILL_HP")]
    FishSkillHp,

    #[serde(rename = "FISH_SKILL_TIME")]
    FishSkillTime,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum SkillCategory {
    #[serde(rename = "FISH_SKILL_CATEGORY_BONUS")]
    FishSkillCategoryBonus,

    #[serde(rename = "FISH_SKILL_CATEGORY_FORCE")]
    FishSkillCategoryForce,
}

pub fn load() -> Result<FishSkillExcelConfigData, crate::json::JsonError> {
    let game_resources_path = env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "FishSkillExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
