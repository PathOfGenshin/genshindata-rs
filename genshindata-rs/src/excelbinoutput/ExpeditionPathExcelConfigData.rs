// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

extern crate serde_derive;

pub type ExpeditionPathExcelConfigData = Vec<ExpeditionPathExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ExpeditionPathExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "difficultyId")]
    pub difficulty_id: i64,

    #[serde(rename = "superElement")]
    pub super_element: String,

    #[serde(rename = "basicRewardId")]
    pub basic_reward_id: i64,

    #[serde(rename = "bonusRewardId")]
    pub bonus_reward_id: i64,

    #[serde(rename = "pathNameTextMapHash")]
    pub path_name_text_map_hash: i64,

    #[serde(rename = "pathDescTextMapHash")]
    pub path_desc_text_map_hash: i64,

    #[serde(rename = "AHJEEPHGEOH")]
    pub ahjeephgeoh: Vec<i64>,

    #[serde(rename = "rewardPreviewId")]
    pub reward_preview_id: i64,
}

pub fn load() -> Result<ExpeditionPathExcelConfigData, crate::json::JsonError> {
    let path: std::path::PathBuf = [
        "GenshinData",
        "ExcelBinOutput",
        "ExpeditionPathExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
