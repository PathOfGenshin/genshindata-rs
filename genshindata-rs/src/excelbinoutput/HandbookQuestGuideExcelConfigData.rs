// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type HandbookQuestGuideExcelConfigData = Vec<HandbookQuestGuideExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct HandbookQuestGuideExcelConfigDatum {
    #[serde(rename = "BNLNGCCFIHK")]
    pub bnlngccfihk: i64,

    #[serde(rename = "typeID")]
    pub type_id: i64,

    #[serde(rename = "IKHNOCCFOOL")]
    pub ikhnoccfool: i64,

    #[serde(rename = "GNFOJGKJFLC")]
    pub gnfojgkjflc: Option<i64>,

    #[serde(rename = "GFIJPMCJODC")]
    pub gfijpmcjodc: Gfijpmcjodc,

    #[serde(rename = "order")]
    pub order: i64,

    #[serde(rename = "icon")]
    pub icon: Icon,

    #[serde(rename = "GDPBJIIGEKJ")]
    pub gdpbjiigekj: Option<bool>,

    #[serde(rename = "AIBKOHDAHHP")]
    pub aibkohdahhp: Vec<Aibkohdahhp>,

    #[serde(rename = "LBFNMFAMMKP")]
    pub lbfnmfammkp: Option<i64>,

    #[serde(rename = "FHLNPEMKENG")]
    pub fhlnpemkeng: Option<i64>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct Aibkohdahhp {
    #[serde(rename = "param")]
    pub param: Vec<i64>,

    #[serde(rename = "type")]
    pub aibkohdahhp_type: Option<Type>,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "QUEST_GUIDE_SHOW_COND_LEVEL_GT_OR_EQ")]
    QuestGuideShowCondLevelGtOrEq,

    #[serde(rename = "QUEST_GUIDE_SHOW_COND_PREQUEST_FINISHED")]
    QuestGuideShowCondPrequestFinished,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Gfijpmcjodc {
    #[serde(rename = "LQ")]
    Lq,

    #[serde(rename = "WQ")]
    Wq,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Icon {
    #[serde(rename = "ART/UI/Atlas/HandbookGuideIcon/UI_GuideIcon_Coop")]
    ArtUiAtlasHandbookGuideIconUiGuideIconCoop,

    #[serde(rename = "ART/UI/Atlas/HandbookGuideIcon/UI_GuideIcon_Explore")]
    ArtUiAtlasHandbookGuideIconUiGuideIconExplore,

    #[serde(rename = "ART/UI/Atlas/HandbookGuideIcon/UI_GuideIcon_LegendQuest")]
    ArtUiAtlasHandbookGuideIconUiGuideIconLegendQuest,

    #[serde(rename = "ART/UI/Atlas/HandbookGuideIcon/UI_GuideIcon_MainQuest")]
    ArtUiAtlasHandbookGuideIconUiGuideIconMainQuest,

    #[serde(rename = "ART/UI/Atlas/HandbookGuideIcon/UI_GuideIcon_Packet")]
    ArtUiAtlasHandbookGuideIconUiGuideIconPacket,

    #[serde(rename = "ART/UI/Atlas/HandbookGuideIcon/UI_GuideIcon_PlayMethod")]
    ArtUiAtlasHandbookGuideIconUiGuideIconPlayMethod,

    #[serde(rename = "ART/UI/Atlas/HandbookGuideIcon/UI_GuideIcon_PlotUnlock")]
    ArtUiAtlasHandbookGuideIconUiGuideIconPlotUnlock,
}

pub fn load() -> Result<HandbookQuestGuideExcelConfigData, crate::json::JsonError> {
    let game_resources_path = std::env::var("GAME_DATA_PATH").unwrap();
    let path: std::path::PathBuf = [
        game_resources_path.as_str(),
        "ExcelBinOutput",
        "HandbookQuestGuideExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
