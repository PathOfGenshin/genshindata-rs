/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type GcgCardFaceExcelConfigData = Vec<GcgCardFaceExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub struct GcgCardFaceExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,
    #[serde(rename = "itemId")]
    pub item_id: i64,
    pub ldgdmddfmij: i64,
    pub fgcnilpibno: Fgcnilpibno,
    pub ihfillnojil: Option<i64>,
    pub lhkemjnpepd: Vec<i64>,
    #[serde(rename = "nameTextMapHash")]
    pub name_text_map_hash: i64,
    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,
    pub jcafjablaaj: i64,
    pub nicbhlfdphp: Option<Nicbhlfdphp>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Fgcnilpibno {
    #[serde(rename = "GCG_CARD_FACE_GOLD")]
    GcgCardFaceGold,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Nicbhlfdphp {
    #[serde(rename = "GCG_PROFICIENCY_REWARD")]
    GcgProficiencyReward,
}
