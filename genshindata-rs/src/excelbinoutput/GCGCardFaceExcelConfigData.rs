/// This file was automatically generated by quicktype
/// DO NOT MANUALLY EDIT THIS FILE!

#[allow(unused_imports)]
use serde::{Serialize, Deserialize};

pub type GcgCardFaceExcelConfigData = Vec<GcgCardFaceExcelConfigDatum>;

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub struct GcgCardFaceExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,
    #[serde(rename = "itemId")]
    pub item_id: i64,
    pub dikkdjcenfg: i64,
    pub ahkkjmpcihc: Ahkkjmpcihc,
    pub kmlnmjbdjpp: Option<i64>,
    pub lojbhmobkeo: Vec<i64>,
    #[serde(rename = "nameTextMapHash")]
    pub name_text_map_hash: i64,
    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,
    pub iepmbpekhmn: i64,
    pub kppnmdkkjng: Option<Kppnmdkkjng>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Ahkkjmpcihc {
    #[serde(rename = "GCG_CARD_FACE_GOLD")]
    GcgCardFaceGold,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(rename_all = "SCREAMING_SNAKE_CASE")]
pub enum Kppnmdkkjng {
    #[serde(rename = "GCG_PROFICIENCY_REWARD")]
    GcgProficiencyReward,
}
