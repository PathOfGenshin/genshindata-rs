// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

extern crate serde_derive;

pub type ActivityIslandPartyStageExcelConfigData = Vec<ActivityIslandPartyStageExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ActivityIslandPartyStageExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "JFMIMMBHHNK")]
    pub jfmimmbhhnk: String,

    #[serde(rename = "galleryId")]
    pub gallery_id: i64,

    #[serde(rename = "MFIPOMCNJMN")]
    pub mfipomcnjmn: i64,

    #[serde(rename = "matchId")]
    pub match_id: i64,

    #[serde(rename = "draftId")]
    pub draft_id: i64,

    #[serde(rename = "HAFOEGJLOAK")]
    pub hafoegjloak: i64,

    #[serde(rename = "titleTextMapHash")]
    pub title_text_map_hash: i64,

    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,

    #[serde(rename = "CLCOAOMOANE")]
    pub clcoaomoane: i64,

    #[serde(rename = "KNKEFFFJKMD")]
    pub knkefffjkmd: i64,

    #[serde(rename = "watcherList")]
    pub watcher_list: Vec<i64>,

    #[serde(rename = "KJJAPBBALHH")]
    pub kjjapbbalhh: Vec<i64>,

    #[serde(rename = "pushTipsID")]
    pub push_tips_id: i64,
}

pub fn load() -> Result<ActivityIslandPartyStageExcelConfigData, crate::json::JsonError> {
    let path: std::path::PathBuf = [
        "GenshinData",
        "ExcelBinOutput",
        "ActivityIslandPartyStageExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
