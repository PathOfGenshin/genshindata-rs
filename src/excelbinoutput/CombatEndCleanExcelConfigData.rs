// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

extern crate serde_derive;

pub type CombatEndCleanExcelConfigData = Vec<CombatEndCleanExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct CombatEndCleanExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "KGCBFNBIPHB")]
    pub kgcbfnbiphb: String,

    #[serde(rename = "BHHFPNOFCBA")]
    pub bhhfpnofcba: Vec<Bhhfpnofcba>,

    #[serde(rename = "EPOMPLNEHFC")]
    pub epomplnehfc: Vec<Epomplnehfc>,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Bhhfpnofcba {
    #[serde(rename = "Corruption")]
    Corruption,

    #[serde(rename = "None")]
    None,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Epomplnehfc {
    #[serde(rename = "")]
    Empty,

    #[serde(rename = "LevelEntity_ClearLocalGadgets")]
    LevelEntityClearLocalGadgets,
}

pub fn load() -> Result<CombatEndCleanExcelConfigData, crate::json::JsonError> {
    let path: std::path::PathBuf = [
        "GenshinData",
        "ExcelBinOutput",
        "CombatEndCleanExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
