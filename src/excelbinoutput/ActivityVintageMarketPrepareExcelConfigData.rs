// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

extern crate serde_derive;

pub type ActivityVintageMarketPrepareExcelConfigData = Vec<ActivityVintageMarketPrepareExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ActivityVintageMarketPrepareExcelConfigDatum {
    #[serde(rename = "configID")]
    pub config_id: i64,

    #[serde(rename = "CBOPDKGFCLD")]
    pub cbopdkgfcld: i64,

    #[serde(rename = "MODPLINEEJC")]
    pub modplineejc: Option<String>,

    #[serde(rename = "IBOFLEFMAEJ")]
    pub iboflefmaej: String,

    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,

    #[serde(rename = "IFCABNCKGLN")]
    pub ifcabnckgln: i64,

    #[serde(rename = "CMPIGIDKDNJ")]
    pub cmpigidkdnj: i64,

    #[serde(rename = "JCGBOOHBEEO")]
    pub jcgboohbeeo: Option<i64>,

    #[serde(rename = "CNABJGNDDDI")]
    pub cnabjgndddi: Option<i64>,

    #[serde(rename = "OOELPGADFBE")]
    pub ooelpgadfbe: i64,

    #[serde(rename = "AOFANMFDGMK")]
    pub aofanmfdgmk: i64,
}

pub fn load() -> Result<ActivityVintageMarketPrepareExcelConfigData, crate::json::JsonError> {
    let path: std::path::PathBuf = [
        "GenshinData",
        "ExcelBinOutput",
        "ActivityVintageMarketPrepareExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
