// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

extern crate serde_derive;

pub type LunaRiteBattleExcelConfigData = Vec<LunaRiteBattleExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct LunaRiteBattleExcelConfigDatum {
    #[serde(rename = "Id")]
    pub id: i64,

    #[serde(rename = "JDPGGCCINLP")]
    pub jdpggccinlp: Jdpggccinlp,

    #[serde(rename = "IBHNNLLDCKG")]
    pub ibhnnlldckg: Option<i64>,

    #[serde(rename = "NKMBOEBPONE")]
    pub nkmboebpone: i64,

    #[serde(rename = "rewardID")]
    pub reward_id: i64,

    #[serde(rename = "MMIGMKDOAOL")]
    pub mmigmkdoaol: String,

    #[serde(rename = "PLHNOFMNEHM")]
    pub plhnofmnehm: String,

    #[serde(rename = "BPONEFHCAFP")]
    pub bponefhcafp: String,

    #[serde(rename = "KMHINBKOEKF")]
    pub kmhinbkoekf: i64,

    #[serde(rename = "OLPHBBHIMPM")]
    pub olphbbhimpm: i64,
}

#[derive(Debug, Serialize, Deserialize)]
pub enum Jdpggccinlp {
    #[serde(rename = "LUNA_RITE_REGION_TYPE_DRAGONSPINE")]
    LunaRiteRegionTypeDragonspine,

    #[serde(rename = "LUNA_RITE_REGION_TYPE_LIYUE")]
    LunaRiteRegionTypeLiyue,

    #[serde(rename = "LUNA_RITE_REGION_TYPE_MENGDE")]
    LunaRiteRegionTypeMengde,
}

pub fn load() -> Result<LunaRiteBattleExcelConfigData, crate::json::JsonError> {
    let path: std::path::PathBuf = [
        "GenshinData",
        "ExcelBinOutput",
        "LunaRiteBattleExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
