// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

extern crate serde_derive;

pub type ActivityVintageCampChallengeExcelConfigData = Vec<ActivityVintageCampChallengeExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ActivityVintageCampChallengeExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "CNGBDMFLGGF")]
    pub cngbdmflggf: i64,

    #[serde(rename = "openDay")]
    pub open_day: i64,

    #[serde(rename = "KLJLLCKBJGF")]
    pub kljllckbjgf: i64,

    #[serde(rename = "NKMBOEBPONE")]
    pub nkmboebpone: i64,

    #[serde(rename = "rewardId")]
    pub reward_id: i64,

    #[serde(rename = "CEFGGOMEFBI")]
    pub cefggomefbi: Vec<String>,

    #[serde(rename = "AOEBEJKFEBA")]
    pub aoebejkfeba: Vec<i64>,

    #[serde(rename = "PLHNOFMNEHM")]
    pub plhnofmnehm: String,

    #[serde(rename = "BPONEFHCAFP")]
    pub bponefhcafp: Vec<i64>,

    #[serde(rename = "IAPJAOPEIOP")]
    pub iapjaopeiop: i64,

    #[serde(rename = "CPOAMLCBFAG")]
    pub cpoamlcbfag: i64,
}

pub fn load() -> Result<ActivityVintageCampChallengeExcelConfigData, crate::json::JsonError> {
    let path: std::path::PathBuf = [
        "GenshinData",
        "ExcelBinOutput",
        "ActivityVintageCampChallengeExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
