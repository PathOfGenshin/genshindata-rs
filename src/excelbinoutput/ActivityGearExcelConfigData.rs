// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

extern crate serde_derive;

pub type ActivityGearExcelConfigData = Vec<ActivityGearExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ActivityGearExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "activityId")]
    pub activity_id: i64,

    #[serde(rename = "LHGPJDBAJKJ")]
    pub lhgpjdbajkj: Vec<i64>,

    #[serde(rename = "MDCJAMOBCPO")]
    pub mdcjamobcpo: f64,

    #[serde(rename = "OLFBEOLADEL")]
    pub olfbeoladel: f64,

    #[serde(rename = "PDOHJMLDIGM")]
    pub pdohjmldigm: String,

    #[serde(rename = "KFCLAKFEPDE")]
    pub kfclakfepde: String,

    #[serde(rename = "IEAPLOFMBDL")]
    pub ieaplofmbdl: String,

    #[serde(rename = "IPKALPKLINE")]
    pub ipkalpkline: String,

    #[serde(rename = "ANCLLCMHEGA")]
    pub ancllcmhega: String,

    #[serde(rename = "pushTipsId")]
    pub push_tips_id: i64,

    #[serde(rename = "watcherIdList")]
    pub watcher_id_list: Vec<i64>,

    #[serde(rename = "CIFFIAKNFEB")]
    pub ciffiaknfeb: f64,
}

pub fn load() -> Result<ActivityGearExcelConfigData, crate::json::JsonError> {
    let path: std::path::PathBuf = [
        "GenshinData",
        "ExcelBinOutput",
        "ActivityGearExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
