// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

extern crate serde_derive;

pub type ReliquarySetExcelConfigData = Vec<ReliquarySetExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ReliquarySetExcelConfigDatum {
    #[serde(rename = "setId")]
    pub set_id: i64,

    #[serde(rename = "setIcon")]
    pub set_icon: String,

    #[serde(rename = "setNeedNum")]
    pub set_need_num: Vec<i64>,

    #[serde(rename = "EquipAffixId")]
    pub equip_affix_id: Option<i64>,

    #[serde(rename = "containsList")]
    pub contains_list: Vec<i64>,

    #[serde(rename = "FDKHPHNGCBL")]
    pub fdkhphngcbl: Option<i64>,

    #[serde(rename = "JCLGCACJMMK")]
    pub jclgcacjmmk: Vec<i64>,

    #[serde(rename = "textList")]
    pub text_list: Vec<i64>,

    #[serde(rename = "DisableFilter")]
    pub disable_filter: Option<i64>,
}

pub fn load() -> Result<ReliquarySetExcelConfigData, crate::json::JsonError> {
    let path: std::path::PathBuf = [
        "GenshinData",
        "ExcelBinOutput",
        "ReliquarySetExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
