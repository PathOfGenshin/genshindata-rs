// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

extern crate serde_derive;

pub type CustomLevelDungeonConfigData = Vec<CustomLevelDungeonConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct CustomLevelDungeonConfigDatum {
    #[serde(rename = "dungeonID")]
    pub dungeon_id: i64,

    #[serde(rename = "order")]
    pub order: i64,

    #[serde(rename = "jsonPath")]
    pub json_path: String,

    #[serde(rename = "BIDIIACHMFL")]
    pub bidiiachmfl: String,

    #[serde(rename = "CMFDFKNKHLL")]
    pub cmfdfknkhll: i64,

    #[serde(rename = "GEMJMGIENIE")]
    pub gemjmgienie: i64,

    #[serde(rename = "OBHIEGIMPHP")]
    pub obhiegimphp: i64,

    #[serde(rename = "FAHHBFIIIPM")]
    pub fahhbfiiipm: i64,

    #[serde(rename = "JNHDFJPBDKB")]
    pub jnhdfjpbdkb: i64,

    #[serde(rename = "HFPIHGPHHKM")]
    pub hfpihgphhkm: i64,

    #[serde(rename = "MAHNJHBNHOD")]
    pub mahnjhbnhod: String,

    #[serde(rename = "KLIINBHPGAK")]
    pub kliinbhpgak: Vec<i64>,
}

pub fn load() -> Result<CustomLevelDungeonConfigData, crate::json::JsonError> {
    let path: std::path::PathBuf = [
        "GenshinData",
        "ExcelBinOutput",
        "CustomLevelDungeonConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
