// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

extern crate serde_derive;

pub type ActivitySpiceStageDataExcelConfigData = Vec<ActivitySpiceStageDataExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct ActivitySpiceStageDataExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "BEGKAFFEDAI")]
    pub begkaffedai: i64,

    #[serde(rename = "KHMIGGLNHHG")]
    pub khmigglnhhg: i64,

    #[serde(rename = "KLMHDEIHIFM")]
    pub klmhdeihifm: Vec<i64>,

    #[serde(rename = "BMEOPCKCNDC")]
    pub bmeopckcndc: Vec<i64>,

    #[serde(rename = "JKIDOBONNPP")]
    pub jkidobonnpp: Vec<i64>,

    #[serde(rename = "nameTextMapHash")]
    pub name_text_map_hash: i64,

    #[serde(rename = "descTextMapHash")]
    pub desc_text_map_hash: i64,

    #[serde(rename = "IGAEPOBPFFK")]
    pub igaepobpffk: f64,

    #[serde(rename = "times")]
    pub times: i64,

    #[serde(rename = "OEJFJNOCHPD")]
    pub oejfjnochpd: i64,

    #[serde(rename = "LMODIMDIFAI")]
    pub lmodimdifai: Vec<i64>,

    #[serde(rename = "watcherId")]
    pub watcher_id: i64,
}

pub fn load() -> Result<ActivitySpiceStageDataExcelConfigData, crate::json::JsonError> {
    let path: std::path::PathBuf = [
        "GenshinData",
        "ExcelBinOutput",
        "ActivitySpiceStageDataExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
