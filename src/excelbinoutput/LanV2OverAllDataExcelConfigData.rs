// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

extern crate serde_derive;

pub type LanV2OverAllDataExcelConfigData = Vec<LanV2OverAllDataExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct LanV2OverAllDataExcelConfigDatum {
    #[serde(rename = "id")]
    pub id: i64,

    #[serde(rename = "activityId")]
    pub activity_id: i64,

    #[serde(rename = "LCBPNDKKOFP")]
    pub lcbpndkkofp: i64,

    #[serde(rename = "ANPGNMBNALB")]
    pub anpgnmbnalb: i64,

    #[serde(rename = "CNBEJOBLGED")]
    pub cnbejoblged: Vec<i64>,

    #[serde(rename = "CHEHADHFAIP")]
    pub chehadhfaip: Vec<i64>,

    #[serde(rename = "PLPEFGBIIIC")]
    pub plpefgbiiic: i64,

    #[serde(rename = "BFNAAHFBDKL")]
    pub bfnaahfbdkl: Vec<i64>,

    #[serde(rename = "CAFADOECBDD")]
    pub cafadoecbdd: i64,

    #[serde(rename = "MPGNAOJLDFF")]
    pub mpgnaojldff: Vec<i64>,

    #[serde(rename = "GCKACBBGNEL")]
    pub gckacbbgnel: i64,
}

pub fn load() -> Result<LanV2OverAllDataExcelConfigData, crate::json::JsonError> {
    let path: std::path::PathBuf = [
        "GenshinData",
        "ExcelBinOutput",
        "LanV2OverAllDataExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
