// This file was automatically generated by quicktype and a custom PowerShell script
// (see Sync-ExcelBinOutput.ps1 for more info).
// DO NOT manually edit this file!

extern crate serde_derive;

pub type VehicleSkillExcelConfigData = Vec<VehicleSkillExcelConfigDatum>;

#[derive(Debug, Serialize, Deserialize)]
pub struct VehicleSkillExcelConfigDatum {
    #[serde(rename = "ID")]
    pub id: i64,

    #[serde(rename = "NIBHCGIHAOF")]
    pub nibhcgihaof: i64,

    #[serde(rename = "JHLHNFNBMAK")]
    pub jhlhnfnbmak: i64,

    #[serde(rename = "abilityName")]
    pub ability_name: String,

    #[serde(rename = "skillIcon")]
    pub skill_icon: String,

    #[serde(rename = "HJKGCNIEHML")]
    pub hjkgcniehml: f64,

    #[serde(rename = "ANMBEJDOCPB")]
    pub anmbejdocpb: i64,

    #[serde(rename = "lockShape")]
    pub lock_shape: String,

    #[serde(rename = "lockWeightParams")]
    pub lock_weight_params: Vec<f64>,

    #[serde(rename = "globalValueKey")]
    pub global_value_key: String,

    #[serde(rename = "OBIBGHGPELD")]
    pub obibghgpeld: Option<i64>,

    #[serde(rename = "NNIEEBPHLEJ")]
    pub nnieebphlej: Option<i64>,
}

pub fn load() -> Result<VehicleSkillExcelConfigData, crate::json::JsonError> {
    let path: std::path::PathBuf = [
        "GenshinData",
        "ExcelBinOutput",
        "VehicleSkillExcelConfigData.json",
    ]
    .iter()
    .collect();
    crate::json::load_json(path)
}
